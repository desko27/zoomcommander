// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: electron_sdk.proto

#ifndef PROTOBUF_electron_5fsdk_2eproto__INCLUDED
#define PROTOBUF_electron_5fsdk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace com {
namespace electron {
namespace sdk {
namespace proto {
class AddCustomizedPictureResourceParams;
class AddCustomizedPictureResourceParamsDefaultTypeInternal;
extern AddCustomizedPictureResourceParamsDefaultTypeInternal _AddCustomizedPictureResourceParams_default_instance_;
class AddCustomizedStringResourceParams;
class AddCustomizedStringResourceParamsDefaultTypeInternal;
extern AddCustomizedStringResourceParamsDefaultTypeInternal _AddCustomizedStringResourceParams_default_instance_;
class AddCustomizedURLResourceParams;
class AddCustomizedURLResourceParamsDefaultTypeInternal;
extern AddCustomizedURLResourceParamsDefaultTypeInternal _AddCustomizedURLResourceParams_default_instance_;
class AllowLocalRecordingParams;
class AllowLocalRecordingParamsDefaultTypeInternal;
extern AllowLocalRecordingParamsDefaultTypeInternal _AllowLocalRecordingParams_default_instance_;
class AlwaysShowIconOnTaskBarParams;
class AlwaysShowIconOnTaskBarParamsDefaultTypeInternal;
extern AlwaysShowIconOnTaskBarParamsDefaultTypeInternal _AlwaysShowIconOnTaskBarParams_default_instance_;
class AuthParams;
class AuthParamsDefaultTypeInternal;
extern AuthParamsDefaultTypeInternal _AuthParams_default_instance_;
class AuthWithJwtTokenParams;
class AuthWithJwtTokenParamsDefaultTypeInternal;
extern AuthWithJwtTokenParamsDefaultTypeInternal _AuthWithJwtTokenParams_default_instance_;
class CallOutH323Params;
class CallOutH323ParamsDefaultTypeInternal;
extern CallOutH323ParamsDefaultTypeInternal _CallOutH323Params_default_instance_;
class CanStartRecordingParams;
class CanStartRecordingParamsDefaultTypeInternal;
extern CanStartRecordingParamsDefaultTypeInternal _CanStartRecordingParams_default_instance_;
class ChangeFloatoActiveSpkVideoSizeParams;
class ChangeFloatoActiveSpkVideoSizeParamsDefaultTypeInternal;
extern ChangeFloatoActiveSpkVideoSizeParamsDefaultTypeInternal _ChangeFloatoActiveSpkVideoSizeParams_default_instance_;
class ClearAnnotationParams;
class ClearAnnotationParamsDefaultTypeInternal;
extern ClearAnnotationParamsDefaultTypeInternal _ClearAnnotationParams_default_instance_;
class ConfSettingDialogShownTabPageParams;
class ConfSettingDialogShownTabPageParamsDefaultTypeInternal;
extern ConfSettingDialogShownTabPageParamsDefaultTypeInternal _ConfSettingDialogShownTabPageParams_default_instance_;
class ConfigDSCPParams;
class ConfigDSCPParamsDefaultTypeInternal;
extern ConfigDSCPParamsDefaultTypeInternal _ConfigDSCPParams_default_instance_;
class CreateRendererParams;
class CreateRendererParamsDefaultTypeInternal;
extern CreateRendererParamsDefaultTypeInternal _CreateRendererParams_default_instance_;
class DeleteMeetingParams;
class DeleteMeetingParamsDefaultTypeInternal;
extern DeleteMeetingParamsDefaultTypeInternal _DeleteMeetingParams_default_instance_;
class DestroyRendererParams;
class DestroyRendererParamsDefaultTypeInternal;
extern DestroyRendererParamsDefaultTypeInternal _DestroyRendererParams_default_instance_;
class DisAllowLocalRecordingParams;
class DisAllowLocalRecordingParamsDefaultTypeInternal;
extern DisAllowLocalRecordingParamsDefaultTypeInternal _DisAllowLocalRecordingParams_default_instance_;
class DisableAccountSettingTabPageParams;
class DisableAccountSettingTabPageParamsDefaultTypeInternal;
extern DisableAccountSettingTabPageParamsDefaultTypeInternal _DisableAccountSettingTabPageParams_default_instance_;
class DisableAdvancedFeatures4GeneralSettingParams;
class DisableAdvancedFeatures4GeneralSettingParamsDefaultTypeInternal;
extern DisableAdvancedFeatures4GeneralSettingParamsDefaultTypeInternal _DisableAdvancedFeatures4GeneralSettingParams_default_instance_;
class DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams;
class DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParamsDefaultTypeInternal;
extern DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParamsDefaultTypeInternal _DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams_default_instance_;
class DisableConfidentialWatermarkParams;
class DisableConfidentialWatermarkParamsDefaultTypeInternal;
extern DisableConfidentialWatermarkParamsDefaultTypeInternal _DisableConfidentialWatermarkParams_default_instance_;
class DisableFreeMeetingRemainTimeNotifyParams;
class DisableFreeMeetingRemainTimeNotifyParamsDefaultTypeInternal;
extern DisableFreeMeetingRemainTimeNotifyParamsDefaultTypeInternal _DisableFreeMeetingRemainTimeNotifyParams_default_instance_;
class DisablePopupMeetingWrongPSWDlgParams;
class DisablePopupMeetingWrongPSWDlgParamsDefaultTypeInternal;
extern DisablePopupMeetingWrongPSWDlgParamsDefaultTypeInternal _DisablePopupMeetingWrongPSWDlgParams_default_instance_;
class DisableRemoteCtrlCopyPasteFeatureParams;
class DisableRemoteCtrlCopyPasteFeatureParamsDefaultTypeInternal;
extern DisableRemoteCtrlCopyPasteFeatureParamsDefaultTypeInternal _DisableRemoteCtrlCopyPasteFeatureParams_default_instance_;
class DisableShowJoinMeetingWndParams;
class DisableShowJoinMeetingWndParamsDefaultTypeInternal;
extern DisableShowJoinMeetingWndParamsDefaultTypeInternal _DisableShowJoinMeetingWndParams_default_instance_;
class DisableSplitScreenModeUIElementsParams;
class DisableSplitScreenModeUIElementsParamsDefaultTypeInternal;
extern DisableSplitScreenModeUIElementsParamsDefaultTypeInternal _DisableSplitScreenModeUIElementsParams_default_instance_;
class DisableToolbarInviteButtonClickOriginActionParams;
class DisableToolbarInviteButtonClickOriginActionParamsDefaultTypeInternal;
extern DisableToolbarInviteButtonClickOriginActionParamsDefaultTypeInternal _DisableToolbarInviteButtonClickOriginActionParams_default_instance_;
class DisableTopMostAttr4SettingDialogParams;
class DisableTopMostAttr4SettingDialogParamsDefaultTypeInternal;
extern DisableTopMostAttr4SettingDialogParamsDefaultTypeInternal _DisableTopMostAttr4SettingDialogParams_default_instance_;
class DisableWaitingForHostDialogParams;
class DisableWaitingForHostDialogParamsDefaultTypeInternal;
extern DisableWaitingForHostDialogParamsDefaultTypeInternal _DisableWaitingForHostDialogParams_default_instance_;
class EditMeetingParams;
class EditMeetingParamsDefaultTypeInternal;
extern EditMeetingParamsDefaultTypeInternal _EditMeetingParams_default_instance_;
class EditMeetingWithWndParams;
class EditMeetingWithWndParamsDefaultTypeInternal;
extern EditMeetingWithWndParamsDefaultTypeInternal _EditMeetingWithWndParams_default_instance_;
class Enable49VideoesInGallaryViewParams;
class Enable49VideoesInGallaryViewParamsDefaultTypeInternal;
extern Enable49VideoesInGallaryViewParamsDefaultTypeInternal _Enable49VideoesInGallaryViewParams_default_instance_;
class EnableAccelerateGPUWhenShareParams;
class EnableAccelerateGPUWhenShareParamsDefaultTypeInternal;
extern EnableAccelerateGPUWhenShareParamsDefaultTypeInternal _EnableAccelerateGPUWhenShareParams_default_instance_;
class EnableAddTimestampWatermarkParams;
class EnableAddTimestampWatermarkParamsDefaultTypeInternal;
extern EnableAddTimestampWatermarkParamsDefaultTypeInternal _EnableAddTimestampWatermarkParams_default_instance_;
class EnableAirplayInstructionWindowParams;
class EnableAirplayInstructionWindowParamsDefaultTypeInternal;
extern EnableAirplayInstructionWindowParamsDefaultTypeInternal _EnableAirplayInstructionWindowParams_default_instance_;
class EnableAlwaysMuteMicWhenJoinVoipParams;
class EnableAlwaysMuteMicWhenJoinVoipParamsDefaultTypeInternal;
extern EnableAlwaysMuteMicWhenJoinVoipParamsDefaultTypeInternal _EnableAlwaysMuteMicWhenJoinVoipParams_default_instance_;
class EnableAlwaysShowMeetingControlsParams;
class EnableAlwaysShowMeetingControlsParamsDefaultTypeInternal;
extern EnableAlwaysShowMeetingControlsParamsDefaultTypeInternal _EnableAlwaysShowMeetingControlsParams_default_instance_;
class EnableAlwaysShowNameOnVideoParams;
class EnableAlwaysShowNameOnVideoParamsDefaultTypeInternal;
extern EnableAlwaysShowNameOnVideoParamsDefaultTypeInternal _EnableAlwaysShowNameOnVideoParams_default_instance_;
class EnableAlwaysUse16v9Params;
class EnableAlwaysUse16v9ParamsDefaultTypeInternal;
extern EnableAlwaysUse16v9ParamsDefaultTypeInternal _EnableAlwaysUse16v9Params_default_instance_;
class EnableApproveRemoteControlDlgParams;
class EnableApproveRemoteControlDlgParamsDefaultTypeInternal;
extern EnableApproveRemoteControlDlgParamsDefaultTypeInternal _EnableApproveRemoteControlDlgParams_default_instance_;
class EnableAudioButtonOnMeetingUIParams;
class EnableAudioButtonOnMeetingUIParamsDefaultTypeInternal;
extern EnableAudioButtonOnMeetingUIParamsDefaultTypeInternal _EnableAudioButtonOnMeetingUIParams_default_instance_;
class EnableAutoAdjustMicParams;
class EnableAutoAdjustMicParamsDefaultTypeInternal;
extern EnableAutoAdjustMicParamsDefaultTypeInternal _EnableAutoAdjustMicParams_default_instance_;
class EnableAutoAdjustMicVolumeWhenJoinAudioParams;
class EnableAutoAdjustMicVolumeWhenJoinAudioParamsDefaultTypeInternal;
extern EnableAutoAdjustMicVolumeWhenJoinAudioParamsDefaultTypeInternal _EnableAutoAdjustMicVolumeWhenJoinAudioParams_default_instance_;
class EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams;
class EnableAutoAdjustSpeakerVolumeWhenJoinAudioParamsDefaultTypeInternal;
extern EnableAutoAdjustSpeakerVolumeWhenJoinAudioParamsDefaultTypeInternal _EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams_default_instance_;
class EnableAutoEndOtherMeetingWhenStartMeetingParams;
class EnableAutoEndOtherMeetingWhenStartMeetingParamsDefaultTypeInternal;
extern EnableAutoEndOtherMeetingWhenStartMeetingParamsDefaultTypeInternal _EnableAutoEndOtherMeetingWhenStartMeetingParams_default_instance_;
class EnableAutoFitToWindowWhenViewSharingParams;
class EnableAutoFitToWindowWhenViewSharingParamsDefaultTypeInternal;
extern EnableAutoFitToWindowWhenViewSharingParamsDefaultTypeInternal _EnableAutoFitToWindowWhenViewSharingParams_default_instance_;
class EnableAutoFullScreenVideoWhenJoinMeetingParams;
class EnableAutoFullScreenVideoWhenJoinMeetingParamsDefaultTypeInternal;
extern EnableAutoFullScreenVideoWhenJoinMeetingParamsDefaultTypeInternal _EnableAutoFullScreenVideoWhenJoinMeetingParams_default_instance_;
class EnableAutoFullScreenVideoWhenViewShareParams;
class EnableAutoFullScreenVideoWhenViewShareParamsDefaultTypeInternal;
extern EnableAutoFullScreenVideoWhenViewShareParamsDefaultTypeInternal _EnableAutoFullScreenVideoWhenViewShareParams_default_instance_;
class EnableAutoHideJoinAudioDialogParams;
class EnableAutoHideJoinAudioDialogParamsDefaultTypeInternal;
extern EnableAutoHideJoinAudioDialogParamsDefaultTypeInternal _EnableAutoHideJoinAudioDialogParams_default_instance_;
class EnableAutoJoinAudioParams;
class EnableAutoJoinAudioParamsDefaultTypeInternal;
extern EnableAutoJoinAudioParamsDefaultTypeInternal _EnableAutoJoinAudioParams_default_instance_;
class EnableAutoTurnOffVideoWhenJoinMeetingParams;
class EnableAutoTurnOffVideoWhenJoinMeetingParamsDefaultTypeInternal;
extern EnableAutoTurnOffVideoWhenJoinMeetingParamsDefaultTypeInternal _EnableAutoTurnOffVideoWhenJoinMeetingParams_default_instance_;
class EnableClaimHostFeatureParams;
class EnableClaimHostFeatureParamsDefaultTypeInternal;
extern EnableClaimHostFeatureParamsDefaultTypeInternal _EnableClaimHostFeatureParams_default_instance_;
class EnableDeclineRemoteControlResponseDlgParams;
class EnableDeclineRemoteControlResponseDlgParamsDefaultTypeInternal;
extern EnableDeclineRemoteControlResponseDlgParamsDefaultTypeInternal _EnableDeclineRemoteControlResponseDlgParams_default_instance_;
class EnableDisplayReminderWindowWhenExitParams;
class EnableDisplayReminderWindowWhenExitParamsDefaultTypeInternal;
extern EnableDisplayReminderWindowWhenExitParamsDefaultTypeInternal _EnableDisplayReminderWindowWhenExitParams_default_instance_;
class EnableDualScreenModeParams;
class EnableDualScreenModeParamsDefaultTypeInternal;
extern EnableDualScreenModeParamsDefaultTypeInternal _EnableDualScreenModeParams_default_instance_;
class EnableEnterAndExitFullScreenButtonOnMeetingUIParams;
class EnableEnterAndExitFullScreenButtonOnMeetingUIParamsDefaultTypeInternal;
extern EnableEnterAndExitFullScreenButtonOnMeetingUIParamsDefaultTypeInternal _EnableEnterAndExitFullScreenButtonOnMeetingUIParams_default_instance_;
class EnableFaceBeautyEffectParams;
class EnableFaceBeautyEffectParamsDefaultTypeInternal;
extern EnableFaceBeautyEffectParamsDefaultTypeInternal _EnableFaceBeautyEffectParams_default_instance_;
class EnableForceAutoStartMyVideoWhenJoinMeetingParams;
class EnableForceAutoStartMyVideoWhenJoinMeetingParamsDefaultTypeInternal;
extern EnableForceAutoStartMyVideoWhenJoinMeetingParamsDefaultTypeInternal _EnableForceAutoStartMyVideoWhenJoinMeetingParams_default_instance_;
class EnableForceAutoStopMyVideoWhenJoinMeetingParams;
class EnableForceAutoStopMyVideoWhenJoinMeetingParamsDefaultTypeInternal;
extern EnableForceAutoStopMyVideoWhenJoinMeetingParamsDefaultTypeInternal _EnableForceAutoStopMyVideoWhenJoinMeetingParams_default_instance_;
class EnableGrabShareWithoutReminderParams;
class EnableGrabShareWithoutReminderParamsDefaultTypeInternal;
extern EnableGrabShareWithoutReminderParamsDefaultTypeInternal _EnableGrabShareWithoutReminderParams_default_instance_;
class EnableHDVideoParams;
class EnableHDVideoParamsDefaultTypeInternal;
extern EnableHDVideoParamsDefaultTypeInternal _EnableHDVideoParams_default_instance_;
class EnableHIdeFullPhoneNumber4PureCallinUserParams;
class EnableHIdeFullPhoneNumber4PureCallinUserParamsDefaultTypeInternal;
extern EnableHIdeFullPhoneNumber4PureCallinUserParamsDefaultTypeInternal _EnableHIdeFullPhoneNumber4PureCallinUserParams_default_instance_;
class EnableHardwareEncodeParams;
class EnableHardwareEncodeParamsDefaultTypeInternal;
extern EnableHardwareEncodeParamsDefaultTypeInternal _EnableHardwareEncodeParams_default_instance_;
class EnableHideNoVideoUsersOnWallViewParams;
class EnableHideNoVideoUsersOnWallViewParamsDefaultTypeInternal;
extern EnableHideNoVideoUsersOnWallViewParamsDefaultTypeInternal _EnableHideNoVideoUsersOnWallViewParams_default_instance_;
class EnableHoldSpaceKeyToSpeakParams;
class EnableHoldSpaceKeyToSpeakParamsDefaultTypeInternal;
extern EnableHoldSpaceKeyToSpeakParamsDefaultTypeInternal _EnableHoldSpaceKeyToSpeakParams_default_instance_;
class EnableInputMeetingPasswordDlgParams;
class EnableInputMeetingPasswordDlgParamsDefaultTypeInternal;
extern EnableInputMeetingPasswordDlgParamsDefaultTypeInternal _EnableInputMeetingPasswordDlgParams_default_instance_;
class EnableInputMeetingScreenNameDlgParams;
class EnableInputMeetingScreenNameDlgParamsDefaultTypeInternal;
extern EnableInputMeetingScreenNameDlgParamsDefaultTypeInternal _EnableInputMeetingScreenNameDlgParams_default_instance_;
class EnableInviteButtonOnMeeitngUIParams;
class EnableInviteButtonOnMeeitngUIParamsDefaultTypeInternal;
extern EnableInviteButtonOnMeeitngUIParamsDefaultTypeInternal _EnableInviteButtonOnMeeitngUIParams_default_instance_;
class EnableLButtonDBClick4SwitchFullScreenModeParams;
class EnableLButtonDBClick4SwitchFullScreenModeParamsDefaultTypeInternal;
extern EnableLButtonDBClick4SwitchFullScreenModeParamsDefaultTypeInternal _EnableLButtonDBClick4SwitchFullScreenModeParams_default_instance_;
class EnableLeaveMeetingOptionForHostParams;
class EnableLeaveMeetingOptionForHostParamsDefaultTypeInternal;
extern EnableLeaveMeetingOptionForHostParamsDefaultTypeInternal _EnableLeaveMeetingOptionForHostParams_default_instance_;
class EnableLengthLimitationOfMeetingNumberParams;
class EnableLengthLimitationOfMeetingNumberParamsDefaultTypeInternal;
extern EnableLengthLimitationOfMeetingNumberParamsDefaultTypeInternal _EnableLengthLimitationOfMeetingNumberParams_default_instance_;
class EnableLocalRecordingConverProgressBarDialogParams;
class EnableLocalRecordingConverProgressBarDialogParamsDefaultTypeInternal;
extern EnableLocalRecordingConverProgressBarDialogParamsDefaultTypeInternal _EnableLocalRecordingConverProgressBarDialogParams_default_instance_;
class EnableMicOriginalInputParams;
class EnableMicOriginalInputParamsDefaultTypeInternal;
extern EnableMicOriginalInputParamsDefaultTypeInternal _EnableMicOriginalInputParams_default_instance_;
class EnableMultiAudioStreamRecordParams;
class EnableMultiAudioStreamRecordParamsDefaultTypeInternal;
extern EnableMultiAudioStreamRecordParamsDefaultTypeInternal _EnableMultiAudioStreamRecordParams_default_instance_;
class EnableOptimizeFor3rdPartyVideoEditorParams;
class EnableOptimizeFor3rdPartyVideoEditorParamsDefaultTypeInternal;
extern EnableOptimizeFor3rdPartyVideoEditorParamsDefaultTypeInternal _EnableOptimizeFor3rdPartyVideoEditorParams_default_instance_;
class EnablePlaceVideoNextToShareInRecordParams;
class EnablePlaceVideoNextToShareInRecordParamsDefaultTypeInternal;
extern EnablePlaceVideoNextToShareInRecordParamsDefaultTypeInternal _EnablePlaceVideoNextToShareInRecordParams_default_instance_;
class EnablePlayChimeWhenEnterOrExitParams;
class EnablePlayChimeWhenEnterOrExitParamsDefaultTypeInternal;
extern EnablePlayChimeWhenEnterOrExitParamsDefaultTypeInternal _EnablePlayChimeWhenEnterOrExitParams_default_instance_;
class EnableRemoteControlAllApplicationsParams;
class EnableRemoteControlAllApplicationsParamsDefaultTypeInternal;
extern EnableRemoteControlAllApplicationsParamsDefaultTypeInternal _EnableRemoteControlAllApplicationsParams_default_instance_;
class EnableSelectRecordFileLocationAfterMeetingParams;
class EnableSelectRecordFileLocationAfterMeetingParamsDefaultTypeInternal;
extern EnableSelectRecordFileLocationAfterMeetingParamsDefaultTypeInternal _EnableSelectRecordFileLocationAfterMeetingParams_default_instance_;
class EnableShareIOSDeviceParams;
class EnableShareIOSDeviceParamsDefaultTypeInternal;
extern EnableShareIOSDeviceParamsDefaultTypeInternal _EnableShareIOSDeviceParams_default_instance_;
class EnableShareWhiteBoardParams;
class EnableShareWhiteBoardParamsDefaultTypeInternal;
extern EnableShareWhiteBoardParamsDefaultTypeInternal _EnableShareWhiteBoardParams_default_instance_;
class EnableShowMyMeetingElapseTimeParams;
class EnableShowMyMeetingElapseTimeParamsDefaultTypeInternal;
extern EnableShowMyMeetingElapseTimeParamsDefaultTypeInternal _EnableShowMyMeetingElapseTimeParams_default_instance_;
class EnableShowShareSwitchMultiToSingleConfirmDlgParams;
class EnableShowShareSwitchMultiToSingleConfirmDlgParamsDefaultTypeInternal;
extern EnableShowShareSwitchMultiToSingleConfirmDlgParamsDefaultTypeInternal _EnableShowShareSwitchMultiToSingleConfirmDlgParams_default_instance_;
class EnableShowVideoThumbnailWhenShareParams;
class EnableShowVideoThumbnailWhenShareParamsDefaultTypeInternal;
extern EnableShowVideoThumbnailWhenShareParamsDefaultTypeInternal _EnableShowVideoThumbnailWhenShareParams_default_instance_;
class EnableSplitScreenModeParams;
class EnableSplitScreenModeParamsDefaultTypeInternal;
extern EnableSplitScreenModeParamsDefaultTypeInternal _EnableSplitScreenModeParams_default_instance_;
class EnableSpotlightSelfParams;
class EnableSpotlightSelfParamsDefaultTypeInternal;
extern EnableSpotlightSelfParamsDefaultTypeInternal _EnableSpotlightSelfParams_default_instance_;
class EnableStereoAudioParams;
class EnableStereoAudioParamsDefaultTypeInternal;
extern EnableStereoAudioParamsDefaultTypeInternal _EnableStereoAudioParams_default_instance_;
class EnableSuppressAudioNotifyParams;
class EnableSuppressAudioNotifyParamsDefaultTypeInternal;
extern EnableSuppressAudioNotifyParamsDefaultTypeInternal _EnableSuppressAudioNotifyParams_default_instance_;
class EnableToolTipsShowParams;
class EnableToolTipsShowParamsDefaultTypeInternal;
extern EnableToolTipsShowParamsDefaultTypeInternal _EnableToolTipsShowParams_default_instance_;
class EnableVideoButtonOnMeetingUIParams;
class EnableVideoButtonOnMeetingUIParamsDefaultTypeInternal;
extern EnableVideoButtonOnMeetingUIParamsDefaultTypeInternal _EnableVideoButtonOnMeetingUIParams_default_instance_;
class EnableVideoMirrorEffectParams;
class EnableVideoMirrorEffectParamsDefaultTypeInternal;
extern EnableVideoMirrorEffectParamsDefaultTypeInternal _EnableVideoMirrorEffectParams_default_instance_;
class EnableVideoPreviewDialogParams;
class EnableVideoPreviewDialogParamsDefaultTypeInternal;
extern EnableVideoPreviewDialogParamsDefaultTypeInternal _EnableVideoPreviewDialogParams_default_instance_;
class EnableZoomAuthRealNameMeetingUIShownParams;
class EnableZoomAuthRealNameMeetingUIShownParamsDefaultTypeInternal;
extern EnableZoomAuthRealNameMeetingUIShownParamsDefaultTypeInternal _EnableZoomAuthRealNameMeetingUIShownParams_default_instance_;
class EnterFullScreenParams;
class EnterFullScreenParamsDefaultTypeInternal;
extern EnterFullScreenParamsDefaultTypeInternal _EnterFullScreenParams_default_instance_;
class ExitFullScreenParams;
class ExitFullScreenParamsDefaultTypeInternal;
extern ExitFullScreenParamsDefaultTypeInternal _ExitFullScreenParams_default_instance_;
class ForceDisableMultiShareParams;
class ForceDisableMultiShareParamsDefaultTypeInternal;
extern ForceDisableMultiShareParamsDefaultTypeInternal _ForceDisableMultiShareParams_default_instance_;
class GetRawDataTypeParams;
class GetRawDataTypeParamsDefaultTypeInternal;
extern GetRawDataTypeParamsDefaultTypeInternal _GetRawDataTypeParams_default_instance_;
class GetResolutionParams;
class GetResolutionParamsDefaultTypeInternal;
extern GetResolutionParamsDefaultTypeInternal _GetResolutionParams_default_instance_;
class GetUserIdParams;
class GetUserIdParamsDefaultTypeInternal;
extern GetUserIdParamsDefaultTypeInternal _GetUserIdParams_default_instance_;
class GetUserInfoByUserIDParams;
class GetUserInfoByUserIDParamsDefaultTypeInternal;
extern GetUserInfoByUserIDParamsDefaultTypeInternal _GetUserInfoByUserIDParams_default_instance_;
class HandleZoomWebUriProtocolActionParams;
class HandleZoomWebUriProtocolActionParamsDefaultTypeInternal;
extern HandleZoomWebUriProtocolActionParamsDefaultTypeInternal _HandleZoomWebUriProtocolActionParams_default_instance_;
class HideChatItemOnMeetingUIParams;
class HideChatItemOnMeetingUIParamsDefaultTypeInternal;
extern HideChatItemOnMeetingUIParamsDefaultTypeInternal _HideChatItemOnMeetingUIParams_default_instance_;
class HideCopyInvitationOnInviteWindowParams;
class HideCopyInvitationOnInviteWindowParamsDefaultTypeInternal;
extern HideCopyInvitationOnInviteWindowParamsDefaultTypeInternal _HideCopyInvitationOnInviteWindowParams_default_instance_;
class HideCopyUrlOnInviteWindowParams;
class HideCopyUrlOnInviteWindowParamsDefaultTypeInternal;
extern HideCopyUrlOnInviteWindowParamsDefaultTypeInternal _HideCopyUrlOnInviteWindowParams_default_instance_;
class HideKeypadButtonOnMeetingWindowParams;
class HideKeypadButtonOnMeetingWindowParamsDefaultTypeInternal;
extern HideKeypadButtonOnMeetingWindowParamsDefaultTypeInternal _HideKeypadButtonOnMeetingWindowParams_default_instance_;
class HideOrShowNoVideoUserOnVideoWallParams;
class HideOrShowNoVideoUserOnVideoWallParamsDefaultTypeInternal;
extern HideOrShowNoVideoUserOnVideoWallParamsDefaultTypeInternal _HideOrShowNoVideoUserOnVideoWallParams_default_instance_;
class HidePollOnMeetingUIParams;
class HidePollOnMeetingUIParamsDefaultTypeInternal;
extern HidePollOnMeetingUIParamsDefaultTypeInternal _HidePollOnMeetingUIParams_default_instance_;
class HideQAOnMeetingUIParams;
class HideQAOnMeetingUIParamsDefaultTypeInternal;
extern HideQAOnMeetingUIParamsDefaultTypeInternal _HideQAOnMeetingUIParams_default_instance_;
class HideRecordItemOnMeetingUIParams;
class HideRecordItemOnMeetingUIParamsDefaultTypeInternal;
extern HideRecordItemOnMeetingUIParamsDefaultTypeInternal _HideRecordItemOnMeetingUIParams_default_instance_;
class HideRemoteControlOnMeetingUIParams;
class HideRemoteControlOnMeetingUIParamsDefaultTypeInternal;
extern HideRemoteControlOnMeetingUIParamsDefaultTypeInternal _HideRemoteControlOnMeetingUIParams_default_instance_;
class HideSwitchCameraButtonParams;
class HideSwitchCameraButtonParamsDefaultTypeInternal;
extern HideSwitchCameraButtonParamsDefaultTypeInternal _HideSwitchCameraButtonParams_default_instance_;
class HideUpgradeFreeMeetingButtonParams;
class HideUpgradeFreeMeetingButtonParamsDefaultTypeInternal;
extern HideUpgradeFreeMeetingButtonParamsDefaultTypeInternal _HideUpgradeFreeMeetingButtonParams_default_instance_;
class HideUpgradeWarningMsgForFreeUserWhenScheduleParams;
class HideUpgradeWarningMsgForFreeUserWhenScheduleParamsDefaultTypeInternal;
extern HideUpgradeWarningMsgForFreeUserWhenScheduleParamsDefaultTypeInternal _HideUpgradeWarningMsgForFreeUserWhenScheduleParams_default_instance_;
class InitSDKParams;
class InitSDKParamsDefaultTypeInternal;
extern InitSDKParamsDefaultTypeInternal _InitSDKParams_default_instance_;
class InputMeetingIDAndScreenNameParams;
class InputMeetingIDAndScreenNameParamsDefaultTypeInternal;
extern InputMeetingIDAndScreenNameParamsDefaultTypeInternal _InputMeetingIDAndScreenNameParams_default_instance_;
class InputMeetingPasswordAndScreenNameParams;
class InputMeetingPasswordAndScreenNameParamsDefaultTypeInternal;
extern InputMeetingPasswordAndScreenNameParamsDefaultTypeInternal _InputMeetingPasswordAndScreenNameParams_default_instance_;
class InputMeetingScreenNameParams;
class InputMeetingScreenNameParamsDefaultTypeInternal;
extern InputMeetingScreenNameParamsDefaultTypeInternal _InputMeetingScreenNameParams_default_instance_;
class InputWebinarRegisterEmailAndScreenNameParams;
class InputWebinarRegisterEmailAndScreenNameParamsDefaultTypeInternal;
extern InputWebinarRegisterEmailAndScreenNameParamsDefaultTypeInternal _InputWebinarRegisterEmailAndScreenNameParams_default_instance_;
class IsHardwareEncodeEnabledParams;
class IsHardwareEncodeEnabledParamsDefaultTypeInternal;
extern IsHardwareEncodeEnabledParamsDefaultTypeInternal _IsHardwareEncodeEnabledParams_default_instance_;
class IsSupportLocalRecordingParams;
class IsSupportLocalRecordingParamsDefaultTypeInternal;
extern IsSupportLocalRecordingParamsDefaultTypeInternal _IsSupportLocalRecordingParams_default_instance_;
class JoinMeetingParams;
class JoinMeetingParamsDefaultTypeInternal;
extern JoinMeetingParamsDefaultTypeInternal _JoinMeetingParams_default_instance_;
class JoinWithoutLoginParams;
class JoinWithoutLoginParamsDefaultTypeInternal;
extern JoinWithoutLoginParamsDefaultTypeInternal _JoinWithoutLoginParams_default_instance_;
class LeaveMeetingParams;
class LeaveMeetingParamsDefaultTypeInternal;
extern LeaveMeetingParamsDefaultTypeInternal _LeaveMeetingParams_default_instance_;
class LoginParams;
class LoginParamsDefaultTypeInternal;
extern LoginParamsDefaultTypeInternal _LoginParams_default_instance_;
class LoginWithSSOTokenParams;
class LoginWithSSOTokenParamsDefaultTypeInternal;
extern LoginWithSSOTokenParamsDefaultTypeInternal _LoginWithSSOTokenParams_default_instance_;
class MoveFloatVideoWndParams;
class MoveFloatVideoWndParamsDefaultTypeInternal;
extern MoveFloatVideoWndParamsDefaultTypeInternal _MoveFloatVideoWndParams_default_instance_;
class MuteAudioParams;
class MuteAudioParamsDefaultTypeInternal;
extern MuteAudioParamsDefaultTypeInternal _MuteAudioParams_default_instance_;
class MuteVideoParams;
class MuteVideoParamsDefaultTypeInternal;
extern MuteVideoParamsDefaultTypeInternal _MuteVideoParams_default_instance_;
class PinVideoParams;
class PinVideoParamsDefaultTypeInternal;
extern PinVideoParamsDefaultTypeInternal _PinVideoParams_default_instance_;
class PrePopulateWebinarRegistrationInfoParams;
class PrePopulateWebinarRegistrationInfoParamsDefaultTypeInternal;
extern PrePopulateWebinarRegistrationInfoParamsDefaultTypeInternal _PrePopulateWebinarRegistrationInfoParams_default_instance_;
class RedirectClickAudioBTNEventParams;
class RedirectClickAudioBTNEventParamsDefaultTypeInternal;
extern RedirectClickAudioBTNEventParamsDefaultTypeInternal _RedirectClickAudioBTNEventParams_default_instance_;
class RedirectClickAudioMenuBTNEventParams;
class RedirectClickAudioMenuBTNEventParamsDefaultTypeInternal;
extern RedirectClickAudioMenuBTNEventParamsDefaultTypeInternal _RedirectClickAudioMenuBTNEventParams_default_instance_;
class RedirectClickCCBTNEventParams;
class RedirectClickCCBTNEventParamsDefaultTypeInternal;
extern RedirectClickCCBTNEventParamsDefaultTypeInternal _RedirectClickCCBTNEventParams_default_instance_;
class RedirectClickCustomLiveStreamMenuEventParams;
class RedirectClickCustomLiveStreamMenuEventParamsDefaultTypeInternal;
extern RedirectClickCustomLiveStreamMenuEventParamsDefaultTypeInternal _RedirectClickCustomLiveStreamMenuEventParams_default_instance_;
class RedirectClickEndMeetingBTNEventParams;
class RedirectClickEndMeetingBTNEventParamsDefaultTypeInternal;
extern RedirectClickEndMeetingBTNEventParamsDefaultTypeInternal _RedirectClickEndMeetingBTNEventParams_default_instance_;
class RedirectClickParticipantListBTNEventParams;
class RedirectClickParticipantListBTNEventParamsDefaultTypeInternal;
extern RedirectClickParticipantListBTNEventParamsDefaultTypeInternal _RedirectClickParticipantListBTNEventParams_default_instance_;
class RedirectClickShareBTNEventParams;
class RedirectClickShareBTNEventParamsDefaultTypeInternal;
extern RedirectClickShareBTNEventParamsDefaultTypeInternal _RedirectClickShareBTNEventParams_default_instance_;
class RedirectEndOtherMeetingParams;
class RedirectEndOtherMeetingParamsDefaultTypeInternal;
extern RedirectEndOtherMeetingParamsDefaultTypeInternal _RedirectEndOtherMeetingParams_default_instance_;
class RedirectFreeMeetingEndingReminderDlgParams;
class RedirectFreeMeetingEndingReminderDlgParamsDefaultTypeInternal;
extern RedirectFreeMeetingEndingReminderDlgParamsDefaultTypeInternal _RedirectFreeMeetingEndingReminderDlgParams_default_instance_;
class RedirectMeetingWarningMsgParams;
class RedirectMeetingWarningMsgParamsDefaultTypeInternal;
extern RedirectMeetingWarningMsgParamsDefaultTypeInternal _RedirectMeetingWarningMsgParams_default_instance_;
class RedirectWebinarNeedRegisterParams;
class RedirectWebinarNeedRegisterParamsDefaultTypeInternal;
extern RedirectWebinarNeedRegisterParamsDefaultTypeInternal _RedirectWebinarNeedRegisterParams_default_instance_;
class RedoParams;
class RedoParamsDefaultTypeInternal;
extern RedoParamsDefaultTypeInternal _RedoParams_default_instance_;
class RetrieveParams;
class RetrieveParamsDefaultTypeInternal;
extern RetrieveParamsDefaultTypeInternal _RetrieveParams_default_instance_;
class ScheduleMeetingWithWndParams;
class ScheduleMeetingWithWndParamsDefaultTypeInternal;
extern ScheduleMeetingWithWndParamsDefaultTypeInternal _ScheduleMeetingWithWndParams_default_instance_;
class SelectMicParams;
class SelectMicParamsDefaultTypeInternal;
extern SelectMicParamsDefaultTypeInternal _SelectMicParams_default_instance_;
class SelectSpeakerParams;
class SelectSpeakerParamsDefaultTypeInternal;
extern SelectSpeakerParamsDefaultTypeInternal _SelectSpeakerParams_default_instance_;
class SelectVideoCameraParams;
class SelectVideoCameraParamsDefaultTypeInternal;
extern SelectVideoCameraParamsDefaultTypeInternal _SelectVideoCameraParams_default_instance_;
class SetBottomFloatToolBarWndVisibilityParams;
class SetBottomFloatToolBarWndVisibilityParamsDefaultTypeInternal;
extern SetBottomFloatToolBarWndVisibilityParamsDefaultTypeInternal _SetBottomFloatToolBarWndVisibilityParams_default_instance_;
class SetColorParams;
class SetColorParamsDefaultTypeInternal;
extern SetColorParamsDefaultTypeInternal _SetColorParams_default_instance_;
class SetDefaultCellPhoneInfoParams;
class SetDefaultCellPhoneInfoParamsDefaultTypeInternal;
extern SetDefaultCellPhoneInfoParamsDefaultTypeInternal _SetDefaultCellPhoneInfoParams_default_instance_;
class SetDirectShareMonitorIDParams;
class SetDirectShareMonitorIDParamsDefaultTypeInternal;
extern SetDirectShareMonitorIDParamsDefaultTypeInternal _SetDirectShareMonitorIDParams_default_instance_;
class SetEchoCancellationLevelParams;
class SetEchoCancellationLevelParamsDefaultTypeInternal;
extern SetEchoCancellationLevelParamsDefaultTypeInternal _SetEchoCancellationLevelParams_default_instance_;
class SetFloatVideoPosParams;
class SetFloatVideoPosParamsDefaultTypeInternal;
extern SetFloatVideoPosParamsDefaultTypeInternal _SetFloatVideoPosParams_default_instance_;
class SetFloatVideoWndVisibilityParams;
class SetFloatVideoWndVisibilityParamsDefaultTypeInternal;
extern SetFloatVideoWndVisibilityParamsDefaultTypeInternal _SetFloatVideoWndVisibilityParams_default_instance_;
class SetLineWidthParams;
class SetLineWidthParamsDefaultTypeInternal;
extern SetLineWidthParamsDefaultTypeInternal _SetLineWidthParams_default_instance_;
class SetMaxDurationForOnlyHostInMeetingParams;
class SetMaxDurationForOnlyHostInMeetingParamsDefaultTypeInternal;
extern SetMaxDurationForOnlyHostInMeetingParamsDefaultTypeInternal _SetMaxDurationForOnlyHostInMeetingParams_default_instance_;
class SetMeetingUIPosParams;
class SetMeetingUIPosParamsDefaultTypeInternal;
extern SetMeetingUIPosParamsDefaultTypeInternal _SetMeetingUIPosParams_default_instance_;
class SetMicVolParams;
class SetMicVolParamsDefaultTypeInternal;
extern SetMicVolParamsDefaultTypeInternal _SetMicVolParams_default_instance_;
class SetRawDataResolutionParams;
class SetRawDataResolutionParamsDefaultTypeInternal;
extern SetRawDataResolutionParamsDefaultTypeInternal _SetRawDataResolutionParams_default_instance_;
class SetRecordingPathParams;
class SetRecordingPathParamsDefaultTypeInternal;
extern SetRecordingPathParamsDefaultTypeInternal _SetRecordingPathParams_default_instance_;
class SetSharingToolBarVisibilityParams;
class SetSharingToolBarVisibilityParamsDefaultTypeInternal;
extern SetSharingToolBarVisibilityParamsDefaultTypeInternal _SetSharingToolBarVisibilityParams_default_instance_;
class SetShowAudioUseComputerSoundChkboxParams;
class SetShowAudioUseComputerSoundChkboxParamsDefaultTypeInternal;
extern SetShowAudioUseComputerSoundChkboxParamsDefaultTypeInternal _SetShowAudioUseComputerSoundChkboxParams_default_instance_;
class SetShowCallInTabParams;
class SetShowCallInTabParamsDefaultTypeInternal;
extern SetShowCallInTabParamsDefaultTypeInternal _SetShowCallInTabParams_default_instance_;
class SetShowCallMeTabParams;
class SetShowCallMeTabParamsDefaultTypeInternal;
extern SetShowCallMeTabParamsDefaultTypeInternal _SetShowCallMeTabParams_default_instance_;
class SetShowH323SubTabPageParams;
class SetShowH323SubTabPageParamsDefaultTypeInternal;
extern SetShowH323SubTabPageParamsDefaultTypeInternal _SetShowH323SubTabPageParams_default_instance_;
class SetShowInviteDlgTabPageParams;
class SetShowInviteDlgTabPageParamsDefaultTypeInternal;
extern SetShowInviteDlgTabPageParamsDefaultTypeInternal _SetShowInviteDlgTabPageParams_default_instance_;
class SetShowVideoOptimizeChkboxParams;
class SetShowVideoOptimizeChkboxParamsDefaultTypeInternal;
extern SetShowVideoOptimizeChkboxParamsDefaultTypeInternal _SetShowVideoOptimizeChkboxParams_default_instance_;
class SetSpeakerVolParams;
class SetSpeakerVolParamsDefaultTypeInternal;
extern SetSpeakerVolParamsDefaultTypeInternal _SetSpeakerVolParams_default_instance_;
class SetTeamIdentifierParams;
class SetTeamIdentifierParamsDefaultTypeInternal;
extern SetTeamIdentifierParamsDefaultTypeInternal _SetTeamIdentifierParams_default_instance_;
class SetToolParams;
class SetToolParamsDefaultTypeInternal;
extern SetToolParamsDefaultTypeInternal _SetToolParams_default_instance_;
class ShowBottomFloatToolbarWndParams;
class ShowBottomFloatToolbarWndParamsDefaultTypeInternal;
extern ShowBottomFloatToolbarWndParamsDefaultTypeInternal _ShowBottomFloatToolbarWndParams_default_instance_;
class ShowChatDlgParams;
class ShowChatDlgParamsDefaultTypeInternal;
extern ShowChatDlgParamsDefaultTypeInternal _ShowChatDlgParams_default_instance_;
class ShowParticipantsListWndParams;
class ShowParticipantsListWndParamsDefaultTypeInternal;
extern ShowParticipantsListWndParamsDefaultTypeInternal _ShowParticipantsListWndParams_default_instance_;
class ShowPreOrNextPageVideoParams;
class ShowPreOrNextPageVideoParamsDefaultTypeInternal;
extern ShowPreOrNextPageVideoParamsDefaultTypeInternal _ShowPreOrNextPageVideoParams_default_instance_;
class ShowSettingDlgParams;
class ShowSettingDlgParamsDefaultTypeInternal;
extern ShowSettingDlgParamsDefaultTypeInternal _ShowSettingDlgParams_default_instance_;
class ShowSharingFrameWindowsParams;
class ShowSharingFrameWindowsParamsDefaultTypeInternal;
extern ShowSharingFrameWindowsParamsDefaultTypeInternal _ShowSharingFrameWindowsParams_default_instance_;
class ShowSharingToolbarParams;
class ShowSharingToolbarParamsDefaultTypeInternal;
extern ShowSharingToolbarParamsDefaultTypeInternal _ShowSharingToolbarParams_default_instance_;
class SpotlightVideoParams;
class SpotlightVideoParamsDefaultTypeInternal;
extern SpotlightVideoParamsDefaultTypeInternal _SpotlightVideoParams_default_instance_;
class StartAnnotationParams;
class StartAnnotationParamsDefaultTypeInternal;
extern StartAnnotationParamsDefaultTypeInternal _StartAnnotationParams_default_instance_;
class StartAppShareParams;
class StartAppShareParamsDefaultTypeInternal;
extern StartAppShareParamsDefaultTypeInternal _StartAppShareParams_default_instance_;
class StartMeetingParams;
class StartMeetingParamsDefaultTypeInternal;
extern StartMeetingParamsDefaultTypeInternal _StartMeetingParams_default_instance_;
class StartMonitorShareParams;
class StartMonitorShareParamsDefaultTypeInternal;
extern StartMonitorShareParamsDefaultTypeInternal _StartMonitorShareParams_default_instance_;
class StartRecordingParams;
class StartRecordingParamsDefaultTypeInternal;
extern StartRecordingParamsDefaultTypeInternal _StartRecordingParams_default_instance_;
class StartWithoutLoginParams;
class StartWithoutLoginParamsDefaultTypeInternal;
extern StartWithoutLoginParamsDefaultTypeInternal _StartWithoutLoginParams_default_instance_;
class StopAnnotationParams;
class StopAnnotationParamsDefaultTypeInternal;
extern StopAnnotationParamsDefaultTypeInternal _StopAnnotationParams_default_instance_;
class SubscribeParams;
class SubscribeParamsDefaultTypeInternal;
extern SubscribeParamsDefaultTypeInternal _SubscribeParams_default_instance_;
class SwapToShowShareViewOrVideoParams;
class SwapToShowShareViewOrVideoParamsDefaultTypeInternal;
extern SwapToShowShareViewOrVideoParamsDefaultTypeInternal _SwapToShowShareViewOrVideoParams_default_instance_;
class SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams;
class SwitchMinimizeUIMode4FirstScreenMeetingUIWndParamsDefaultTypeInternal;
extern SwitchMinimizeUIMode4FirstScreenMeetingUIWndParamsDefaultTypeInternal _SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams_default_instance_;
class SwitchSplitScreenModeParams;
class SwitchSplitScreenModeParamsDefaultTypeInternal;
extern SwitchSplitScreenModeParamsDefaultTypeInternal _SwitchSplitScreenModeParams_default_instance_;
class TryWithMeetingNumberParams;
class TryWithMeetingNumberParamsDefaultTypeInternal;
extern TryWithMeetingNumberParamsDefaultTypeInternal _TryWithMeetingNumberParams_default_instance_;
class TryWithPairingCodeParams;
class TryWithPairingCodeParamsDefaultTypeInternal;
extern TryWithPairingCodeParamsDefaultTypeInternal _TryWithPairingCodeParams_default_instance_;
class TurnOffAeroModeInSharingParams;
class TurnOffAeroModeInSharingParamsDefaultTypeInternal;
extern TurnOffAeroModeInSharingParamsDefaultTypeInternal _TurnOffAeroModeInSharingParams_default_instance_;
class UnMuteVideoParams;
class UnMuteVideoParamsDefaultTypeInternal;
extern UnMuteVideoParamsDefaultTypeInternal _UnMuteVideoParams_default_instance_;
class UnSubscribeParams;
class UnSubscribeParamsDefaultTypeInternal;
extern UnSubscribeParamsDefaultTypeInternal _UnSubscribeParams_default_instance_;
class UndoParams;
class UndoParamsDefaultTypeInternal;
extern UndoParamsDefaultTypeInternal _UndoParams_default_instance_;
class UnmuteAudioParams;
class UnmuteAudioParamsDefaultTypeInternal;
extern UnmuteAudioParamsDefaultTypeInternal _UnmuteAudioParams_default_instance_;
class VerifyParams;
class VerifyParamsDefaultTypeInternal;
extern VerifyParamsDefaultTypeInternal _VerifyParams_default_instance_;
}  // namespace proto
}  // namespace sdk
}  // namespace electron
}  // namespace com

namespace com {
namespace electron {
namespace sdk {
namespace proto {

namespace protobuf_electron_5fsdk_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_electron_5fsdk_2eproto

// ===================================================================

class InitSDKParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.InitSDKParams) */ {
 public:
  InitSDKParams();
  virtual ~InitSDKParams();

  InitSDKParams(const InitSDKParams& from);

  inline InitSDKParams& operator=(const InitSDKParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitSDKParams(InitSDKParams&& from) noexcept
    : InitSDKParams() {
    *this = ::std::move(from);
  }

  inline InitSDKParams& operator=(InitSDKParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InitSDKParams& default_instance();

  static inline const InitSDKParams* internal_default_instance() {
    return reinterpret_cast<const InitSDKParams*>(
               &_InitSDKParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InitSDKParams* other);
  friend void swap(InitSDKParams& a, InitSDKParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitSDKParams* New() const PROTOBUF_FINAL { return New(NULL); }

  InitSDKParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InitSDKParams& from);
  void MergeFrom(const InitSDKParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitSDKParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string domain = 2;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional string customizedLanguageName = 3;
  bool has_customizedlanguagename() const;
  void clear_customizedlanguagename();
  static const int kCustomizedLanguageNameFieldNumber = 3;
  const ::std::string& customizedlanguagename() const;
  void set_customizedlanguagename(const ::std::string& value);
  #if LANG_CXX11
  void set_customizedlanguagename(::std::string&& value);
  #endif
  void set_customizedlanguagename(const char* value);
  void set_customizedlanguagename(const char* value, size_t size);
  ::std::string* mutable_customizedlanguagename();
  ::std::string* release_customizedlanguagename();
  void set_allocated_customizedlanguagename(::std::string* customizedlanguagename);

  // optional string customizedLanguageInfo = 4;
  bool has_customizedlanguageinfo() const;
  void clear_customizedlanguageinfo();
  static const int kCustomizedLanguageInfoFieldNumber = 4;
  const ::std::string& customizedlanguageinfo() const;
  void set_customizedlanguageinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_customizedlanguageinfo(::std::string&& value);
  #endif
  void set_customizedlanguageinfo(const char* value);
  void set_customizedlanguageinfo(const char* value, size_t size);
  ::std::string* mutable_customizedlanguageinfo();
  ::std::string* release_customizedlanguageinfo();
  void set_allocated_customizedlanguageinfo(::std::string* customizedlanguageinfo);

  // optional string strSupportUrl = 6;
  bool has_strsupporturl() const;
  void clear_strsupporturl();
  static const int kStrSupportUrlFieldNumber = 6;
  const ::std::string& strsupporturl() const;
  void set_strsupporturl(const ::std::string& value);
  #if LANG_CXX11
  void set_strsupporturl(::std::string&& value);
  #endif
  void set_strsupporturl(const char* value);
  void set_strsupporturl(const char* value, size_t size);
  ::std::string* mutable_strsupporturl();
  ::std::string* release_strsupporturl();
  void set_allocated_strsupporturl(::std::string* strsupporturl);

  // optional int32 customizedLanguageType = 5;
  bool has_customizedlanguagetype() const;
  void clear_customizedlanguagetype();
  static const int kCustomizedLanguageTypeFieldNumber = 5;
  ::google::protobuf::int32 customizedlanguagetype() const;
  void set_customizedlanguagetype(::google::protobuf::int32 value);

  // optional int32 langID = 7;
  bool has_langid() const;
  void clear_langid();
  static const int kLangIDFieldNumber = 7;
  ::google::protobuf::int32 langid() const;
  void set_langid(::google::protobuf::int32 value);

  // optional int32 appLocale = 9;
  bool has_applocale() const;
  void clear_applocale();
  static const int kAppLocaleFieldNumber = 9;
  ::google::protobuf::int32 applocale() const;
  void set_applocale(::google::protobuf::int32 value);

  // optional int32 logFileSize = 10;
  bool has_logfilesize() const;
  void clear_logfilesize();
  static const int kLogFileSizeFieldNumber = 10;
  ::google::protobuf::int32 logfilesize() const;
  void set_logfilesize(::google::protobuf::int32 value);

  // optional bool enableLog = 8;
  bool has_enablelog() const;
  void clear_enablelog();
  static const int kEnableLogFieldNumber = 8;
  bool enablelog() const;
  void set_enablelog(bool value);

  // optional bool enableGeneralDump = 11;
  bool has_enablegeneraldump() const;
  void clear_enablegeneraldump();
  static const int kEnableGeneralDumpFieldNumber = 11;
  bool enablegeneraldump() const;
  void set_enablegeneraldump(bool value);

  // optional bool permonitorAwarenessMode = 12;
  bool has_permonitorawarenessmode() const;
  void clear_permonitorawarenessmode();
  static const int kPermonitorAwarenessModeFieldNumber = 12;
  bool permonitorawarenessmode() const;
  void set_permonitorawarenessmode(bool value);

  // optional bool enableRawdataIntermediateMode = 17;
  bool has_enablerawdataintermediatemode() const;
  void clear_enablerawdataintermediatemode();
  static const int kEnableRawdataIntermediateModeFieldNumber = 17;
  bool enablerawdataintermediatemode() const;
  void set_enablerawdataintermediatemode(bool value);

  // optional int32 videoRenderMode = 13;
  bool has_videorendermode() const;
  void clear_videorendermode();
  static const int kVideoRenderModeFieldNumber = 13;
  ::google::protobuf::int32 videorendermode() const;
  void set_videorendermode(::google::protobuf::int32 value);

  // optional int32 videoRawdataMemoryMode = 14;
  bool has_videorawdatamemorymode() const;
  void clear_videorawdatamemorymode();
  static const int kVideoRawdataMemoryModeFieldNumber = 14;
  ::google::protobuf::int32 videorawdatamemorymode() const;
  void set_videorawdatamemorymode(::google::protobuf::int32 value);

  // optional int32 shareRawdataMemoryMode = 15;
  bool has_sharerawdatamemorymode() const;
  void clear_sharerawdatamemorymode();
  static const int kShareRawdataMemoryModeFieldNumber = 15;
  ::google::protobuf::int32 sharerawdatamemorymode() const;
  void set_sharerawdatamemorymode(::google::protobuf::int32 value);

  // optional int32 audioRawdataMemoryMode = 16;
  bool has_audiorawdatamemorymode() const;
  void clear_audiorawdatamemorymode();
  static const int kAudioRawdataMemoryModeFieldNumber = 16;
  ::google::protobuf::int32 audiorawdatamemorymode() const;
  void set_audiorawdatamemorymode(::google::protobuf::int32 value);

  // optional int32 renderPostProcessing = 18;
  bool has_renderpostprocessing() const;
  void clear_renderpostprocessing();
  static const int kRenderPostProcessingFieldNumber = 18;
  ::google::protobuf::int32 renderpostprocessing() const;
  void set_renderpostprocessing(::google::protobuf::int32 value);

  // optional int32 videoCaptureMethod = 19;
  bool has_videocapturemethod() const;
  void clear_videocapturemethod();
  static const int kVideoCaptureMethodFieldNumber = 19;
  ::google::protobuf::int32 videocapturemethod() const;
  void set_videocapturemethod(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.InitSDKParams)
 private:
  void set_has_path();
  void clear_has_path();
  void set_has_domain();
  void clear_has_domain();
  void set_has_customizedlanguagename();
  void clear_has_customizedlanguagename();
  void set_has_customizedlanguageinfo();
  void clear_has_customizedlanguageinfo();
  void set_has_customizedlanguagetype();
  void clear_has_customizedlanguagetype();
  void set_has_strsupporturl();
  void clear_has_strsupporturl();
  void set_has_langid();
  void clear_has_langid();
  void set_has_enablelog();
  void clear_has_enablelog();
  void set_has_applocale();
  void clear_has_applocale();
  void set_has_logfilesize();
  void clear_has_logfilesize();
  void set_has_enablegeneraldump();
  void clear_has_enablegeneraldump();
  void set_has_permonitorawarenessmode();
  void clear_has_permonitorawarenessmode();
  void set_has_videorendermode();
  void clear_has_videorendermode();
  void set_has_videorawdatamemorymode();
  void clear_has_videorawdatamemorymode();
  void set_has_sharerawdatamemorymode();
  void clear_has_sharerawdatamemorymode();
  void set_has_audiorawdatamemorymode();
  void clear_has_audiorawdatamemorymode();
  void set_has_enablerawdataintermediatemode();
  void clear_has_enablerawdataintermediatemode();
  void set_has_renderpostprocessing();
  void clear_has_renderpostprocessing();
  void set_has_videocapturemethod();
  void clear_has_videocapturemethod();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr customizedlanguagename_;
  ::google::protobuf::internal::ArenaStringPtr customizedlanguageinfo_;
  ::google::protobuf::internal::ArenaStringPtr strsupporturl_;
  ::google::protobuf::int32 customizedlanguagetype_;
  ::google::protobuf::int32 langid_;
  ::google::protobuf::int32 applocale_;
  ::google::protobuf::int32 logfilesize_;
  bool enablelog_;
  bool enablegeneraldump_;
  bool permonitorawarenessmode_;
  bool enablerawdataintermediatemode_;
  ::google::protobuf::int32 videorendermode_;
  ::google::protobuf::int32 videorawdatamemorymode_;
  ::google::protobuf::int32 sharerawdatamemorymode_;
  ::google::protobuf::int32 audiorawdatamemorymode_;
  ::google::protobuf::int32 renderpostprocessing_;
  ::google::protobuf::int32 videocapturemethod_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AuthParams) */ {
 public:
  AuthParams();
  virtual ~AuthParams();

  AuthParams(const AuthParams& from);

  inline AuthParams& operator=(const AuthParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthParams(AuthParams&& from) noexcept
    : AuthParams() {
    *this = ::std::move(from);
  }

  inline AuthParams& operator=(AuthParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthParams& default_instance();

  static inline const AuthParams* internal_default_instance() {
    return reinterpret_cast<const AuthParams*>(
               &_AuthParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AuthParams* other);
  friend void swap(AuthParams& a, AuthParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AuthParams& from);
  void MergeFrom(const AuthParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string secret = 2;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AuthParams)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_secret();
  void clear_has_secret();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthWithJwtTokenParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AuthWithJwtTokenParams) */ {
 public:
  AuthWithJwtTokenParams();
  virtual ~AuthWithJwtTokenParams();

  AuthWithJwtTokenParams(const AuthWithJwtTokenParams& from);

  inline AuthWithJwtTokenParams& operator=(const AuthWithJwtTokenParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthWithJwtTokenParams(AuthWithJwtTokenParams&& from) noexcept
    : AuthWithJwtTokenParams() {
    *this = ::std::move(from);
  }

  inline AuthWithJwtTokenParams& operator=(AuthWithJwtTokenParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthWithJwtTokenParams& default_instance();

  static inline const AuthWithJwtTokenParams* internal_default_instance() {
    return reinterpret_cast<const AuthWithJwtTokenParams*>(
               &_AuthWithJwtTokenParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AuthWithJwtTokenParams* other);
  friend void swap(AuthWithJwtTokenParams& a, AuthWithJwtTokenParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthWithJwtTokenParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthWithJwtTokenParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AuthWithJwtTokenParams& from);
  void MergeFrom(const AuthWithJwtTokenParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthWithJwtTokenParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sdkJwtToken = 1;
  bool has_sdkjwttoken() const;
  void clear_sdkjwttoken();
  static const int kSdkJwtTokenFieldNumber = 1;
  const ::std::string& sdkjwttoken() const;
  void set_sdkjwttoken(const ::std::string& value);
  #if LANG_CXX11
  void set_sdkjwttoken(::std::string&& value);
  #endif
  void set_sdkjwttoken(const char* value);
  void set_sdkjwttoken(const char* value, size_t size);
  ::std::string* mutable_sdkjwttoken();
  ::std::string* release_sdkjwttoken();
  void set_allocated_sdkjwttoken(::std::string* sdkjwttoken);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AuthWithJwtTokenParams)
 private:
  void set_has_sdkjwttoken();
  void clear_has_sdkjwttoken();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sdkjwttoken_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.LoginParams) */ {
 public:
  LoginParams();
  virtual ~LoginParams();

  LoginParams(const LoginParams& from);

  inline LoginParams& operator=(const LoginParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginParams(LoginParams&& from) noexcept
    : LoginParams() {
    *this = ::std::move(from);
  }

  inline LoginParams& operator=(LoginParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginParams& default_instance();

  static inline const LoginParams* internal_default_instance() {
    return reinterpret_cast<const LoginParams*>(
               &_LoginParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoginParams* other);
  friend void swap(LoginParams& a, LoginParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginParams* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginParams& from);
  void MergeFrom(const LoginParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string psw = 2;
  bool has_psw() const;
  void clear_psw();
  static const int kPswFieldNumber = 2;
  const ::std::string& psw() const;
  void set_psw(const ::std::string& value);
  #if LANG_CXX11
  void set_psw(::std::string&& value);
  #endif
  void set_psw(const char* value);
  void set_psw(const char* value, size_t size);
  ::std::string* mutable_psw();
  ::std::string* release_psw();
  void set_allocated_psw(::std::string* psw);

  // optional bool rememberMe = 3;
  bool has_rememberme() const;
  void clear_rememberme();
  static const int kRememberMeFieldNumber = 3;
  bool rememberme() const;
  void set_rememberme(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.LoginParams)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_psw();
  void clear_has_psw();
  void set_has_rememberme();
  void clear_has_rememberme();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr psw_;
  bool rememberme_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginWithSSOTokenParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.LoginWithSSOTokenParams) */ {
 public:
  LoginWithSSOTokenParams();
  virtual ~LoginWithSSOTokenParams();

  LoginWithSSOTokenParams(const LoginWithSSOTokenParams& from);

  inline LoginWithSSOTokenParams& operator=(const LoginWithSSOTokenParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginWithSSOTokenParams(LoginWithSSOTokenParams&& from) noexcept
    : LoginWithSSOTokenParams() {
    *this = ::std::move(from);
  }

  inline LoginWithSSOTokenParams& operator=(LoginWithSSOTokenParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginWithSSOTokenParams& default_instance();

  static inline const LoginWithSSOTokenParams* internal_default_instance() {
    return reinterpret_cast<const LoginWithSSOTokenParams*>(
               &_LoginWithSSOTokenParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LoginWithSSOTokenParams* other);
  friend void swap(LoginWithSSOTokenParams& a, LoginWithSSOTokenParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginWithSSOTokenParams* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginWithSSOTokenParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginWithSSOTokenParams& from);
  void MergeFrom(const LoginWithSSOTokenParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginWithSSOTokenParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ssoToken = 1;
  bool has_ssotoken() const;
  void clear_ssotoken();
  static const int kSsoTokenFieldNumber = 1;
  const ::std::string& ssotoken() const;
  void set_ssotoken(const ::std::string& value);
  #if LANG_CXX11
  void set_ssotoken(::std::string&& value);
  #endif
  void set_ssotoken(const char* value);
  void set_ssotoken(const char* value, size_t size);
  ::std::string* mutable_ssotoken();
  ::std::string* release_ssotoken();
  void set_allocated_ssotoken(::std::string* ssotoken);

  // optional bool rememberMe = 2;
  bool has_rememberme() const;
  void clear_rememberme();
  static const int kRememberMeFieldNumber = 2;
  bool rememberme() const;
  void set_rememberme(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.LoginWithSSOTokenParams)
 private:
  void set_has_ssotoken();
  void clear_has_ssotoken();
  void set_has_rememberme();
  void clear_has_rememberme();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ssotoken_;
  bool rememberme_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartMeetingParams) */ {
 public:
  StartMeetingParams();
  virtual ~StartMeetingParams();

  StartMeetingParams(const StartMeetingParams& from);

  inline StartMeetingParams& operator=(const StartMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartMeetingParams(StartMeetingParams&& from) noexcept
    : StartMeetingParams() {
    *this = ::std::move(from);
  }

  inline StartMeetingParams& operator=(StartMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartMeetingParams& default_instance();

  static inline const StartMeetingParams* internal_default_instance() {
    return reinterpret_cast<const StartMeetingParams*>(
               &_StartMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StartMeetingParams* other);
  friend void swap(StartMeetingParams& a, StartMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartMeetingParams& from);
  void MergeFrom(const StartMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hDirectShareAppWnd = 2;
  bool has_hdirectshareappwnd() const;
  void clear_hdirectshareappwnd();
  static const int kHDirectShareAppWndFieldNumber = 2;
  const ::std::string& hdirectshareappwnd() const;
  void set_hdirectshareappwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hdirectshareappwnd(::std::string&& value);
  #endif
  void set_hdirectshareappwnd(const char* value);
  void set_hdirectshareappwnd(const char* value, size_t size);
  ::std::string* mutable_hdirectshareappwnd();
  ::std::string* release_hdirectshareappwnd();
  void set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd);

  // optional string participantID = 3;
  bool has_participantid() const;
  void clear_participantid();
  static const int kParticipantIDFieldNumber = 3;
  const ::std::string& participantid() const;
  void set_participantid(const ::std::string& value);
  #if LANG_CXX11
  void set_participantid(::std::string&& value);
  #endif
  void set_participantid(const char* value);
  void set_participantid(const char* value, size_t size);
  ::std::string* mutable_participantid();
  ::std::string* release_participantid();
  void set_allocated_participantid(::std::string* participantid);

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // optional bool isVideoOff = 4;
  bool has_isvideooff() const;
  void clear_isvideooff();
  static const int kIsVideoOffFieldNumber = 4;
  bool isvideooff() const;
  void set_isvideooff(bool value);

  // optional bool isAudioOff = 5;
  bool has_isaudiooff() const;
  void clear_isaudiooff();
  static const int kIsAudioOffFieldNumber = 5;
  bool isaudiooff() const;
  void set_isaudiooff(bool value);

  // optional bool isDirectShareDesktop = 6;
  bool has_isdirectsharedesktop() const;
  void clear_isdirectsharedesktop();
  static const int kIsDirectShareDesktopFieldNumber = 6;
  bool isdirectsharedesktop() const;
  void set_isdirectsharedesktop(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartMeetingParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();
  void set_has_hdirectshareappwnd();
  void clear_has_hdirectshareappwnd();
  void set_has_participantid();
  void clear_has_participantid();
  void set_has_isvideooff();
  void clear_has_isvideooff();
  void set_has_isaudiooff();
  void clear_has_isaudiooff();
  void set_has_isdirectsharedesktop();
  void clear_has_isdirectsharedesktop();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hdirectshareappwnd_;
  ::google::protobuf::internal::ArenaStringPtr participantid_;
  ::google::protobuf::uint64 meetingnumber_;
  bool isvideooff_;
  bool isaudiooff_;
  bool isdirectsharedesktop_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartWithoutLoginParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartWithoutLoginParams) */ {
 public:
  StartWithoutLoginParams();
  virtual ~StartWithoutLoginParams();

  StartWithoutLoginParams(const StartWithoutLoginParams& from);

  inline StartWithoutLoginParams& operator=(const StartWithoutLoginParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartWithoutLoginParams(StartWithoutLoginParams&& from) noexcept
    : StartWithoutLoginParams() {
    *this = ::std::move(from);
  }

  inline StartWithoutLoginParams& operator=(StartWithoutLoginParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartWithoutLoginParams& default_instance();

  static inline const StartWithoutLoginParams* internal_default_instance() {
    return reinterpret_cast<const StartWithoutLoginParams*>(
               &_StartWithoutLoginParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(StartWithoutLoginParams* other);
  friend void swap(StartWithoutLoginParams& a, StartWithoutLoginParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartWithoutLoginParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartWithoutLoginParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartWithoutLoginParams& from);
  void MergeFrom(const StartWithoutLoginParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartWithoutLoginParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional string userZAK = 2;
  bool has_userzak() const;
  void clear_userzak();
  static const int kUserZAKFieldNumber = 2;
  const ::std::string& userzak() const;
  void set_userzak(const ::std::string& value);
  #if LANG_CXX11
  void set_userzak(::std::string&& value);
  #endif
  void set_userzak(const char* value);
  void set_userzak(const char* value, size_t size);
  ::std::string* mutable_userzak();
  ::std::string* release_userzak();
  void set_allocated_userzak(::std::string* userzak);

  // optional string userName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string sdkVanityID = 6;
  bool has_sdkvanityid() const;
  void clear_sdkvanityid();
  static const int kSdkVanityIDFieldNumber = 6;
  const ::std::string& sdkvanityid() const;
  void set_sdkvanityid(const ::std::string& value);
  #if LANG_CXX11
  void set_sdkvanityid(::std::string&& value);
  #endif
  void set_sdkvanityid(const char* value);
  void set_sdkvanityid(const char* value, size_t size);
  ::std::string* mutable_sdkvanityid();
  ::std::string* release_sdkvanityid();
  void set_allocated_sdkvanityid(::std::string* sdkvanityid);

  // optional string hDirectShareAppWnd = 7;
  bool has_hdirectshareappwnd() const;
  void clear_hdirectshareappwnd();
  static const int kHDirectShareAppWndFieldNumber = 7;
  const ::std::string& hdirectshareappwnd() const;
  void set_hdirectshareappwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hdirectshareappwnd(::std::string&& value);
  #endif
  void set_hdirectshareappwnd(const char* value);
  void set_hdirectshareappwnd(const char* value, size_t size);
  ::std::string* mutable_hdirectshareappwnd();
  ::std::string* release_hdirectshareappwnd();
  void set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd);

  // optional string participantID = 8;
  bool has_participantid() const;
  void clear_participantid();
  static const int kParticipantIDFieldNumber = 8;
  const ::std::string& participantid() const;
  void set_participantid(const ::std::string& value);
  #if LANG_CXX11
  void set_participantid(::std::string&& value);
  #endif
  void set_participantid(const char* value);
  void set_participantid(const char* value, size_t size);
  ::std::string* mutable_participantid();
  ::std::string* release_participantid();
  void set_allocated_participantid(::std::string* participantid);

  // optional uint64 meetingNumber = 5;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 5;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // optional int32 nodeUserType = 4;
  bool has_nodeusertype() const;
  void clear_nodeusertype();
  static const int kNodeUserTypeFieldNumber = 4;
  ::google::protobuf::int32 nodeusertype() const;
  void set_nodeusertype(::google::protobuf::int32 value);

  // optional bool isDirectShareDesktop = 9;
  bool has_isdirectsharedesktop() const;
  void clear_isdirectsharedesktop();
  static const int kIsDirectShareDesktopFieldNumber = 9;
  bool isdirectsharedesktop() const;
  void set_isdirectsharedesktop(bool value);

  // optional bool isVideoOff = 10;
  bool has_isvideooff() const;
  void clear_isvideooff();
  static const int kIsVideoOffFieldNumber = 10;
  bool isvideooff() const;
  void set_isvideooff(bool value);

  // optional bool isAudioOff = 11;
  bool has_isaudiooff() const;
  void clear_isaudiooff();
  static const int kIsAudioOffFieldNumber = 11;
  bool isaudiooff() const;
  void set_isaudiooff(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartWithoutLoginParams)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_userzak();
  void clear_has_userzak();
  void set_has_username();
  void clear_has_username();
  void set_has_nodeusertype();
  void clear_has_nodeusertype();
  void set_has_meetingnumber();
  void clear_has_meetingnumber();
  void set_has_sdkvanityid();
  void clear_has_sdkvanityid();
  void set_has_hdirectshareappwnd();
  void clear_has_hdirectshareappwnd();
  void set_has_participantid();
  void clear_has_participantid();
  void set_has_isdirectsharedesktop();
  void clear_has_isdirectsharedesktop();
  void set_has_isvideooff();
  void clear_has_isvideooff();
  void set_has_isaudiooff();
  void clear_has_isaudiooff();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr userzak_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr sdkvanityid_;
  ::google::protobuf::internal::ArenaStringPtr hdirectshareappwnd_;
  ::google::protobuf::internal::ArenaStringPtr participantid_;
  ::google::protobuf::uint64 meetingnumber_;
  ::google::protobuf::int32 nodeusertype_;
  bool isdirectsharedesktop_;
  bool isvideooff_;
  bool isaudiooff_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.JoinMeetingParams) */ {
 public:
  JoinMeetingParams();
  virtual ~JoinMeetingParams();

  JoinMeetingParams(const JoinMeetingParams& from);

  inline JoinMeetingParams& operator=(const JoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinMeetingParams(JoinMeetingParams&& from) noexcept
    : JoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline JoinMeetingParams& operator=(JoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JoinMeetingParams& default_instance();

  static inline const JoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const JoinMeetingParams*>(
               &_JoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(JoinMeetingParams* other);
  friend void swap(JoinMeetingParams& a, JoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const JoinMeetingParams& from);
  void MergeFrom(const JoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string vanityID = 2;
  bool has_vanityid() const;
  void clear_vanityid();
  static const int kVanityIDFieldNumber = 2;
  const ::std::string& vanityid() const;
  void set_vanityid(const ::std::string& value);
  #if LANG_CXX11
  void set_vanityid(::std::string&& value);
  #endif
  void set_vanityid(const char* value);
  void set_vanityid(const char* value, size_t size);
  ::std::string* mutable_vanityid();
  ::std::string* release_vanityid();
  void set_allocated_vanityid(::std::string* vanityid);

  // optional string userName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string psw = 4;
  bool has_psw() const;
  void clear_psw();
  static const int kPswFieldNumber = 4;
  const ::std::string& psw() const;
  void set_psw(const ::std::string& value);
  #if LANG_CXX11
  void set_psw(::std::string&& value);
  #endif
  void set_psw(const char* value);
  void set_psw(const char* value, size_t size);
  ::std::string* mutable_psw();
  ::std::string* release_psw();
  void set_allocated_psw(::std::string* psw);

  // optional string hDirectShareAppWnd = 5;
  bool has_hdirectshareappwnd() const;
  void clear_hdirectshareappwnd();
  static const int kHDirectShareAppWndFieldNumber = 5;
  const ::std::string& hdirectshareappwnd() const;
  void set_hdirectshareappwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hdirectshareappwnd(::std::string&& value);
  #endif
  void set_hdirectshareappwnd(const char* value);
  void set_hdirectshareappwnd(const char* value, size_t size);
  ::std::string* mutable_hdirectshareappwnd();
  ::std::string* release_hdirectshareappwnd();
  void set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd);

  // optional string participantID = 6;
  bool has_participantid() const;
  void clear_participantid();
  static const int kParticipantIDFieldNumber = 6;
  const ::std::string& participantid() const;
  void set_participantid(const ::std::string& value);
  #if LANG_CXX11
  void set_participantid(::std::string&& value);
  #endif
  void set_participantid(const char* value);
  void set_participantid(const char* value, size_t size);
  ::std::string* mutable_participantid();
  ::std::string* release_participantid();
  void set_allocated_participantid(::std::string* participantid);

  // optional string webinarToken = 7;
  bool has_webinartoken() const;
  void clear_webinartoken();
  static const int kWebinarTokenFieldNumber = 7;
  const ::std::string& webinartoken() const;
  void set_webinartoken(const ::std::string& value);
  #if LANG_CXX11
  void set_webinartoken(::std::string&& value);
  #endif
  void set_webinartoken(const char* value);
  void set_webinartoken(const char* value, size_t size);
  ::std::string* mutable_webinartoken();
  ::std::string* release_webinartoken();
  void set_allocated_webinartoken(::std::string* webinartoken);

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // optional bool isVideoOff = 8;
  bool has_isvideooff() const;
  void clear_isvideooff();
  static const int kIsVideoOffFieldNumber = 8;
  bool isvideooff() const;
  void set_isvideooff(bool value);

  // optional bool isAudioOff = 9;
  bool has_isaudiooff() const;
  void clear_isaudiooff();
  static const int kIsAudioOffFieldNumber = 9;
  bool isaudiooff() const;
  void set_isaudiooff(bool value);

  // optional bool isDirectShareDesktop = 10;
  bool has_isdirectsharedesktop() const;
  void clear_isdirectsharedesktop();
  static const int kIsDirectShareDesktopFieldNumber = 10;
  bool isdirectsharedesktop() const;
  void set_isdirectsharedesktop(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.JoinMeetingParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();
  void set_has_vanityid();
  void clear_has_vanityid();
  void set_has_username();
  void clear_has_username();
  void set_has_psw();
  void clear_has_psw();
  void set_has_hdirectshareappwnd();
  void clear_has_hdirectshareappwnd();
  void set_has_participantid();
  void clear_has_participantid();
  void set_has_webinartoken();
  void clear_has_webinartoken();
  void set_has_isvideooff();
  void clear_has_isvideooff();
  void set_has_isaudiooff();
  void clear_has_isaudiooff();
  void set_has_isdirectsharedesktop();
  void clear_has_isdirectsharedesktop();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr vanityid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr psw_;
  ::google::protobuf::internal::ArenaStringPtr hdirectshareappwnd_;
  ::google::protobuf::internal::ArenaStringPtr participantid_;
  ::google::protobuf::internal::ArenaStringPtr webinartoken_;
  ::google::protobuf::uint64 meetingnumber_;
  bool isvideooff_;
  bool isaudiooff_;
  bool isdirectsharedesktop_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinWithoutLoginParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.JoinWithoutLoginParams) */ {
 public:
  JoinWithoutLoginParams();
  virtual ~JoinWithoutLoginParams();

  JoinWithoutLoginParams(const JoinWithoutLoginParams& from);

  inline JoinWithoutLoginParams& operator=(const JoinWithoutLoginParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinWithoutLoginParams(JoinWithoutLoginParams&& from) noexcept
    : JoinWithoutLoginParams() {
    *this = ::std::move(from);
  }

  inline JoinWithoutLoginParams& operator=(JoinWithoutLoginParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JoinWithoutLoginParams& default_instance();

  static inline const JoinWithoutLoginParams* internal_default_instance() {
    return reinterpret_cast<const JoinWithoutLoginParams*>(
               &_JoinWithoutLoginParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(JoinWithoutLoginParams* other);
  friend void swap(JoinWithoutLoginParams& a, JoinWithoutLoginParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinWithoutLoginParams* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinWithoutLoginParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const JoinWithoutLoginParams& from);
  void MergeFrom(const JoinWithoutLoginParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinWithoutLoginParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string vanityID = 2;
  bool has_vanityid() const;
  void clear_vanityid();
  static const int kVanityIDFieldNumber = 2;
  const ::std::string& vanityid() const;
  void set_vanityid(const ::std::string& value);
  #if LANG_CXX11
  void set_vanityid(::std::string&& value);
  #endif
  void set_vanityid(const char* value);
  void set_vanityid(const char* value, size_t size);
  ::std::string* mutable_vanityid();
  ::std::string* release_vanityid();
  void set_allocated_vanityid(::std::string* vanityid);

  // optional string userName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string psw = 4;
  bool has_psw() const;
  void clear_psw();
  static const int kPswFieldNumber = 4;
  const ::std::string& psw() const;
  void set_psw(const ::std::string& value);
  #if LANG_CXX11
  void set_psw(::std::string&& value);
  #endif
  void set_psw(const char* value);
  void set_psw(const char* value, size_t size);
  ::std::string* mutable_psw();
  ::std::string* release_psw();
  void set_allocated_psw(::std::string* psw);

  // optional string hDirectShareAppWnd = 5;
  bool has_hdirectshareappwnd() const;
  void clear_hdirectshareappwnd();
  static const int kHDirectShareAppWndFieldNumber = 5;
  const ::std::string& hdirectshareappwnd() const;
  void set_hdirectshareappwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hdirectshareappwnd(::std::string&& value);
  #endif
  void set_hdirectshareappwnd(const char* value);
  void set_hdirectshareappwnd(const char* value, size_t size);
  ::std::string* mutable_hdirectshareappwnd();
  ::std::string* release_hdirectshareappwnd();
  void set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd);

  // optional string userZAK = 6;
  bool has_userzak() const;
  void clear_userzak();
  static const int kUserZAKFieldNumber = 6;
  const ::std::string& userzak() const;
  void set_userzak(const ::std::string& value);
  #if LANG_CXX11
  void set_userzak(::std::string&& value);
  #endif
  void set_userzak(const char* value);
  void set_userzak(const char* value, size_t size);
  ::std::string* mutable_userzak();
  ::std::string* release_userzak();
  void set_allocated_userzak(::std::string* userzak);

  // optional string participantID = 7;
  bool has_participantid() const;
  void clear_participantid();
  static const int kParticipantIDFieldNumber = 7;
  const ::std::string& participantid() const;
  void set_participantid(const ::std::string& value);
  #if LANG_CXX11
  void set_participantid(::std::string&& value);
  #endif
  void set_participantid(const char* value);
  void set_participantid(const char* value, size_t size);
  ::std::string* mutable_participantid();
  ::std::string* release_participantid();
  void set_allocated_participantid(::std::string* participantid);

  // optional string webinarToken = 8;
  bool has_webinartoken() const;
  void clear_webinartoken();
  static const int kWebinarTokenFieldNumber = 8;
  const ::std::string& webinartoken() const;
  void set_webinartoken(const ::std::string& value);
  #if LANG_CXX11
  void set_webinartoken(::std::string&& value);
  #endif
  void set_webinartoken(const char* value);
  void set_webinartoken(const char* value, size_t size);
  ::std::string* mutable_webinartoken();
  ::std::string* release_webinartoken();
  void set_allocated_webinartoken(::std::string* webinartoken);

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // optional bool isDirectShareDesktop = 9;
  bool has_isdirectsharedesktop() const;
  void clear_isdirectsharedesktop();
  static const int kIsDirectShareDesktopFieldNumber = 9;
  bool isdirectsharedesktop() const;
  void set_isdirectsharedesktop(bool value);

  // optional bool isVideoOff = 10;
  bool has_isvideooff() const;
  void clear_isvideooff();
  static const int kIsVideoOffFieldNumber = 10;
  bool isvideooff() const;
  void set_isvideooff(bool value);

  // optional bool isAudioOff = 11;
  bool has_isaudiooff() const;
  void clear_isaudiooff();
  static const int kIsAudioOffFieldNumber = 11;
  bool isaudiooff() const;
  void set_isaudiooff(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.JoinWithoutLoginParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();
  void set_has_vanityid();
  void clear_has_vanityid();
  void set_has_username();
  void clear_has_username();
  void set_has_psw();
  void clear_has_psw();
  void set_has_hdirectshareappwnd();
  void clear_has_hdirectshareappwnd();
  void set_has_userzak();
  void clear_has_userzak();
  void set_has_participantid();
  void clear_has_participantid();
  void set_has_webinartoken();
  void clear_has_webinartoken();
  void set_has_isdirectsharedesktop();
  void clear_has_isdirectsharedesktop();
  void set_has_isvideooff();
  void clear_has_isvideooff();
  void set_has_isaudiooff();
  void clear_has_isaudiooff();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr vanityid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr psw_;
  ::google::protobuf::internal::ArenaStringPtr hdirectshareappwnd_;
  ::google::protobuf::internal::ArenaStringPtr userzak_;
  ::google::protobuf::internal::ArenaStringPtr participantid_;
  ::google::protobuf::internal::ArenaStringPtr webinartoken_;
  ::google::protobuf::uint64 meetingnumber_;
  bool isdirectsharedesktop_;
  bool isvideooff_;
  bool isaudiooff_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.LeaveMeetingParams) */ {
 public:
  LeaveMeetingParams();
  virtual ~LeaveMeetingParams();

  LeaveMeetingParams(const LeaveMeetingParams& from);

  inline LeaveMeetingParams& operator=(const LeaveMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveMeetingParams(LeaveMeetingParams&& from) noexcept
    : LeaveMeetingParams() {
    *this = ::std::move(from);
  }

  inline LeaveMeetingParams& operator=(LeaveMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LeaveMeetingParams& default_instance();

  static inline const LeaveMeetingParams* internal_default_instance() {
    return reinterpret_cast<const LeaveMeetingParams*>(
               &_LeaveMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LeaveMeetingParams* other);
  friend void swap(LeaveMeetingParams& a, LeaveMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LeaveMeetingParams& from);
  void MergeFrom(const LeaveMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnd = 1;
  bool has_bend() const;
  void clear_bend();
  static const int kBEndFieldNumber = 1;
  bool bend() const;
  void set_bend(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.LeaveMeetingParams)
 private:
  void set_has_bend();
  void clear_has_bend();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bend_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HandleZoomWebUriProtocolActionParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams) */ {
 public:
  HandleZoomWebUriProtocolActionParams();
  virtual ~HandleZoomWebUriProtocolActionParams();

  HandleZoomWebUriProtocolActionParams(const HandleZoomWebUriProtocolActionParams& from);

  inline HandleZoomWebUriProtocolActionParams& operator=(const HandleZoomWebUriProtocolActionParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandleZoomWebUriProtocolActionParams(HandleZoomWebUriProtocolActionParams&& from) noexcept
    : HandleZoomWebUriProtocolActionParams() {
    *this = ::std::move(from);
  }

  inline HandleZoomWebUriProtocolActionParams& operator=(HandleZoomWebUriProtocolActionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HandleZoomWebUriProtocolActionParams& default_instance();

  static inline const HandleZoomWebUriProtocolActionParams* internal_default_instance() {
    return reinterpret_cast<const HandleZoomWebUriProtocolActionParams*>(
               &_HandleZoomWebUriProtocolActionParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(HandleZoomWebUriProtocolActionParams* other);
  friend void swap(HandleZoomWebUriProtocolActionParams& a, HandleZoomWebUriProtocolActionParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandleZoomWebUriProtocolActionParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HandleZoomWebUriProtocolActionParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HandleZoomWebUriProtocolActionParams& from);
  void MergeFrom(const HandleZoomWebUriProtocolActionParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HandleZoomWebUriProtocolActionParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string protocolAction = 1;
  bool has_protocolaction() const;
  void clear_protocolaction();
  static const int kProtocolActionFieldNumber = 1;
  const ::std::string& protocolaction() const;
  void set_protocolaction(const ::std::string& value);
  #if LANG_CXX11
  void set_protocolaction(::std::string&& value);
  #endif
  void set_protocolaction(const char* value);
  void set_protocolaction(const char* value, size_t size);
  ::std::string* mutable_protocolaction();
  ::std::string* release_protocolaction();
  void set_allocated_protocolaction(::std::string* protocolaction);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
 private:
  void set_has_protocolaction();
  void clear_has_protocolaction();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr protocolaction_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowChatDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowChatDlgParams) */ {
 public:
  ShowChatDlgParams();
  virtual ~ShowChatDlgParams();

  ShowChatDlgParams(const ShowChatDlgParams& from);

  inline ShowChatDlgParams& operator=(const ShowChatDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowChatDlgParams(ShowChatDlgParams&& from) noexcept
    : ShowChatDlgParams() {
    *this = ::std::move(from);
  }

  inline ShowChatDlgParams& operator=(ShowChatDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowChatDlgParams& default_instance();

  static inline const ShowChatDlgParams* internal_default_instance() {
    return reinterpret_cast<const ShowChatDlgParams*>(
               &_ShowChatDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ShowChatDlgParams* other);
  friend void swap(ShowChatDlgParams& a, ShowChatDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowChatDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowChatDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowChatDlgParams& from);
  void MergeFrom(const ShowChatDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowChatDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hParent = 1;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 1;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // optional string rectLeft = 2;
  bool has_rectleft() const;
  void clear_rectleft();
  static const int kRectLeftFieldNumber = 2;
  const ::std::string& rectleft() const;
  void set_rectleft(const ::std::string& value);
  #if LANG_CXX11
  void set_rectleft(::std::string&& value);
  #endif
  void set_rectleft(const char* value);
  void set_rectleft(const char* value, size_t size);
  ::std::string* mutable_rectleft();
  ::std::string* release_rectleft();
  void set_allocated_rectleft(::std::string* rectleft);

  // optional string rectTop = 3;
  bool has_recttop() const;
  void clear_recttop();
  static const int kRectTopFieldNumber = 3;
  const ::std::string& recttop() const;
  void set_recttop(const ::std::string& value);
  #if LANG_CXX11
  void set_recttop(::std::string&& value);
  #endif
  void set_recttop(const char* value);
  void set_recttop(const char* value, size_t size);
  ::std::string* mutable_recttop();
  ::std::string* release_recttop();
  void set_allocated_recttop(::std::string* recttop);

  // optional string rectRight = 4;
  bool has_rectright() const;
  void clear_rectright();
  static const int kRectRightFieldNumber = 4;
  const ::std::string& rectright() const;
  void set_rectright(const ::std::string& value);
  #if LANG_CXX11
  void set_rectright(::std::string&& value);
  #endif
  void set_rectright(const char* value);
  void set_rectright(const char* value, size_t size);
  ::std::string* mutable_rectright();
  ::std::string* release_rectright();
  void set_allocated_rectright(::std::string* rectright);

  // optional string rectBottom = 5;
  bool has_rectbottom() const;
  void clear_rectbottom();
  static const int kRectBottomFieldNumber = 5;
  const ::std::string& rectbottom() const;
  void set_rectbottom(const ::std::string& value);
  #if LANG_CXX11
  void set_rectbottom(::std::string&& value);
  #endif
  void set_rectbottom(const char* value);
  void set_rectbottom(const char* value, size_t size);
  ::std::string* mutable_rectbottom();
  ::std::string* release_rectbottom();
  void set_allocated_rectbottom(::std::string* rectbottom);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowChatDlgParams)
 private:
  void set_has_hparent();
  void clear_has_hparent();
  void set_has_rectleft();
  void clear_has_rectleft();
  void set_has_recttop();
  void clear_has_recttop();
  void set_has_rectright();
  void clear_has_rectright();
  void set_has_rectbottom();
  void clear_has_rectbottom();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  ::google::protobuf::internal::ArenaStringPtr rectleft_;
  ::google::protobuf::internal::ArenaStringPtr recttop_;
  ::google::protobuf::internal::ArenaStringPtr rectright_;
  ::google::protobuf::internal::ArenaStringPtr rectbottom_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterFullScreenParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnterFullScreenParams) */ {
 public:
  EnterFullScreenParams();
  virtual ~EnterFullScreenParams();

  EnterFullScreenParams(const EnterFullScreenParams& from);

  inline EnterFullScreenParams& operator=(const EnterFullScreenParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterFullScreenParams(EnterFullScreenParams&& from) noexcept
    : EnterFullScreenParams() {
    *this = ::std::move(from);
  }

  inline EnterFullScreenParams& operator=(EnterFullScreenParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnterFullScreenParams& default_instance();

  static inline const EnterFullScreenParams* internal_default_instance() {
    return reinterpret_cast<const EnterFullScreenParams*>(
               &_EnterFullScreenParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(EnterFullScreenParams* other);
  friend void swap(EnterFullScreenParams& a, EnterFullScreenParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterFullScreenParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterFullScreenParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnterFullScreenParams& from);
  void MergeFrom(const EnterFullScreenParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterFullScreenParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bFirstView = 1;
  bool has_bfirstview() const;
  void clear_bfirstview();
  static const int kBFirstViewFieldNumber = 1;
  bool bfirstview() const;
  void set_bfirstview(bool value);

  // optional bool bSecView = 2;
  bool has_bsecview() const;
  void clear_bsecview();
  static const int kBSecViewFieldNumber = 2;
  bool bsecview() const;
  void set_bsecview(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnterFullScreenParams)
 private:
  void set_has_bfirstview();
  void clear_has_bfirstview();
  void set_has_bsecview();
  void clear_has_bsecview();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bfirstview_;
  bool bsecview_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitFullScreenParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ExitFullScreenParams) */ {
 public:
  ExitFullScreenParams();
  virtual ~ExitFullScreenParams();

  ExitFullScreenParams(const ExitFullScreenParams& from);

  inline ExitFullScreenParams& operator=(const ExitFullScreenParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitFullScreenParams(ExitFullScreenParams&& from) noexcept
    : ExitFullScreenParams() {
    *this = ::std::move(from);
  }

  inline ExitFullScreenParams& operator=(ExitFullScreenParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ExitFullScreenParams& default_instance();

  static inline const ExitFullScreenParams* internal_default_instance() {
    return reinterpret_cast<const ExitFullScreenParams*>(
               &_ExitFullScreenParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ExitFullScreenParams* other);
  friend void swap(ExitFullScreenParams& a, ExitFullScreenParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitFullScreenParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitFullScreenParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ExitFullScreenParams& from);
  void MergeFrom(const ExitFullScreenParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExitFullScreenParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bFirstView = 1;
  bool has_bfirstview() const;
  void clear_bfirstview();
  static const int kBFirstViewFieldNumber = 1;
  bool bfirstview() const;
  void set_bfirstview(bool value);

  // optional bool bSecView = 2;
  bool has_bsecview() const;
  void clear_bsecview();
  static const int kBSecViewFieldNumber = 2;
  bool bsecview() const;
  void set_bsecview(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ExitFullScreenParams)
 private:
  void set_has_bfirstview();
  void clear_has_bfirstview();
  void set_has_bsecview();
  void clear_has_bsecview();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bfirstview_;
  bool bsecview_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveFloatVideoWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.MoveFloatVideoWndParams) */ {
 public:
  MoveFloatVideoWndParams();
  virtual ~MoveFloatVideoWndParams();

  MoveFloatVideoWndParams(const MoveFloatVideoWndParams& from);

  inline MoveFloatVideoWndParams& operator=(const MoveFloatVideoWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveFloatVideoWndParams(MoveFloatVideoWndParams&& from) noexcept
    : MoveFloatVideoWndParams() {
    *this = ::std::move(from);
  }

  inline MoveFloatVideoWndParams& operator=(MoveFloatVideoWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MoveFloatVideoWndParams& default_instance();

  static inline const MoveFloatVideoWndParams* internal_default_instance() {
    return reinterpret_cast<const MoveFloatVideoWndParams*>(
               &_MoveFloatVideoWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(MoveFloatVideoWndParams* other);
  friend void swap(MoveFloatVideoWndParams& a, MoveFloatVideoWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveFloatVideoWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveFloatVideoWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MoveFloatVideoWndParams& from);
  void MergeFrom(const MoveFloatVideoWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MoveFloatVideoWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.MoveFloatVideoWndParams)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowSharingToolbarParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowSharingToolbarParams) */ {
 public:
  ShowSharingToolbarParams();
  virtual ~ShowSharingToolbarParams();

  ShowSharingToolbarParams(const ShowSharingToolbarParams& from);

  inline ShowSharingToolbarParams& operator=(const ShowSharingToolbarParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowSharingToolbarParams(ShowSharingToolbarParams&& from) noexcept
    : ShowSharingToolbarParams() {
    *this = ::std::move(from);
  }

  inline ShowSharingToolbarParams& operator=(ShowSharingToolbarParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowSharingToolbarParams& default_instance();

  static inline const ShowSharingToolbarParams* internal_default_instance() {
    return reinterpret_cast<const ShowSharingToolbarParams*>(
               &_ShowSharingToolbarParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ShowSharingToolbarParams* other);
  friend void swap(ShowSharingToolbarParams& a, ShowSharingToolbarParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowSharingToolbarParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowSharingToolbarParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowSharingToolbarParams& from);
  void MergeFrom(const ShowSharingToolbarParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowSharingToolbarParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowSharingToolbarParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeFloatoActiveSpkVideoSizeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams) */ {
 public:
  ChangeFloatoActiveSpkVideoSizeParams();
  virtual ~ChangeFloatoActiveSpkVideoSizeParams();

  ChangeFloatoActiveSpkVideoSizeParams(const ChangeFloatoActiveSpkVideoSizeParams& from);

  inline ChangeFloatoActiveSpkVideoSizeParams& operator=(const ChangeFloatoActiveSpkVideoSizeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeFloatoActiveSpkVideoSizeParams(ChangeFloatoActiveSpkVideoSizeParams&& from) noexcept
    : ChangeFloatoActiveSpkVideoSizeParams() {
    *this = ::std::move(from);
  }

  inline ChangeFloatoActiveSpkVideoSizeParams& operator=(ChangeFloatoActiveSpkVideoSizeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ChangeFloatoActiveSpkVideoSizeParams& default_instance();

  static inline const ChangeFloatoActiveSpkVideoSizeParams* internal_default_instance() {
    return reinterpret_cast<const ChangeFloatoActiveSpkVideoSizeParams*>(
               &_ChangeFloatoActiveSpkVideoSizeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ChangeFloatoActiveSpkVideoSizeParams* other);
  friend void swap(ChangeFloatoActiveSpkVideoSizeParams& a, ChangeFloatoActiveSpkVideoSizeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeFloatoActiveSpkVideoSizeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeFloatoActiveSpkVideoSizeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ChangeFloatoActiveSpkVideoSizeParams& from);
  void MergeFrom(const ChangeFloatoActiveSpkVideoSizeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeFloatoActiveSpkVideoSizeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 floatVideoType = 1;
  bool has_floatvideotype() const;
  void clear_floatvideotype();
  static const int kFloatVideoTypeFieldNumber = 1;
  ::google::protobuf::int32 floatvideotype() const;
  void set_floatvideotype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
 private:
  void set_has_floatvideotype();
  void clear_has_floatvideotype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 floatvideotype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowParticipantsListWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowParticipantsListWndParams) */ {
 public:
  ShowParticipantsListWndParams();
  virtual ~ShowParticipantsListWndParams();

  ShowParticipantsListWndParams(const ShowParticipantsListWndParams& from);

  inline ShowParticipantsListWndParams& operator=(const ShowParticipantsListWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowParticipantsListWndParams(ShowParticipantsListWndParams&& from) noexcept
    : ShowParticipantsListWndParams() {
    *this = ::std::move(from);
  }

  inline ShowParticipantsListWndParams& operator=(ShowParticipantsListWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowParticipantsListWndParams& default_instance();

  static inline const ShowParticipantsListWndParams* internal_default_instance() {
    return reinterpret_cast<const ShowParticipantsListWndParams*>(
               &_ShowParticipantsListWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ShowParticipantsListWndParams* other);
  friend void swap(ShowParticipantsListWndParams& a, ShowParticipantsListWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowParticipantsListWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowParticipantsListWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowParticipantsListWndParams& from);
  void MergeFrom(const ShowParticipantsListWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowParticipantsListWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowParticipantsListWndParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowBottomFloatToolbarWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams) */ {
 public:
  ShowBottomFloatToolbarWndParams();
  virtual ~ShowBottomFloatToolbarWndParams();

  ShowBottomFloatToolbarWndParams(const ShowBottomFloatToolbarWndParams& from);

  inline ShowBottomFloatToolbarWndParams& operator=(const ShowBottomFloatToolbarWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowBottomFloatToolbarWndParams(ShowBottomFloatToolbarWndParams&& from) noexcept
    : ShowBottomFloatToolbarWndParams() {
    *this = ::std::move(from);
  }

  inline ShowBottomFloatToolbarWndParams& operator=(ShowBottomFloatToolbarWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowBottomFloatToolbarWndParams& default_instance();

  static inline const ShowBottomFloatToolbarWndParams* internal_default_instance() {
    return reinterpret_cast<const ShowBottomFloatToolbarWndParams*>(
               &_ShowBottomFloatToolbarWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ShowBottomFloatToolbarWndParams* other);
  friend void swap(ShowBottomFloatToolbarWndParams& a, ShowBottomFloatToolbarWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowBottomFloatToolbarWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowBottomFloatToolbarWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowBottomFloatToolbarWndParams& from);
  void MergeFrom(const ShowBottomFloatToolbarWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowBottomFloatToolbarWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowPreOrNextPageVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowPreOrNextPageVideoParams) */ {
 public:
  ShowPreOrNextPageVideoParams();
  virtual ~ShowPreOrNextPageVideoParams();

  ShowPreOrNextPageVideoParams(const ShowPreOrNextPageVideoParams& from);

  inline ShowPreOrNextPageVideoParams& operator=(const ShowPreOrNextPageVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowPreOrNextPageVideoParams(ShowPreOrNextPageVideoParams&& from) noexcept
    : ShowPreOrNextPageVideoParams() {
    *this = ::std::move(from);
  }

  inline ShowPreOrNextPageVideoParams& operator=(ShowPreOrNextPageVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowPreOrNextPageVideoParams& default_instance();

  static inline const ShowPreOrNextPageVideoParams* internal_default_instance() {
    return reinterpret_cast<const ShowPreOrNextPageVideoParams*>(
               &_ShowPreOrNextPageVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ShowPreOrNextPageVideoParams* other);
  friend void swap(ShowPreOrNextPageVideoParams& a, ShowPreOrNextPageVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowPreOrNextPageVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowPreOrNextPageVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowPreOrNextPageVideoParams& from);
  void MergeFrom(const ShowPreOrNextPageVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowPreOrNextPageVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bPageUp = 1;
  bool has_bpageup() const;
  void clear_bpageup();
  static const int kBPageUpFieldNumber = 1;
  bool bpageup() const;
  void set_bpageup(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
 private:
  void set_has_bpageup();
  void clear_has_bpageup();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bpageup_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowSharingFrameWindowsParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowSharingFrameWindowsParams) */ {
 public:
  ShowSharingFrameWindowsParams();
  virtual ~ShowSharingFrameWindowsParams();

  ShowSharingFrameWindowsParams(const ShowSharingFrameWindowsParams& from);

  inline ShowSharingFrameWindowsParams& operator=(const ShowSharingFrameWindowsParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowSharingFrameWindowsParams(ShowSharingFrameWindowsParams&& from) noexcept
    : ShowSharingFrameWindowsParams() {
    *this = ::std::move(from);
  }

  inline ShowSharingFrameWindowsParams& operator=(ShowSharingFrameWindowsParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowSharingFrameWindowsParams& default_instance();

  static inline const ShowSharingFrameWindowsParams* internal_default_instance() {
    return reinterpret_cast<const ShowSharingFrameWindowsParams*>(
               &_ShowSharingFrameWindowsParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ShowSharingFrameWindowsParams* other);
  friend void swap(ShowSharingFrameWindowsParams& a, ShowSharingFrameWindowsParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowSharingFrameWindowsParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowSharingFrameWindowsParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowSharingFrameWindowsParams& from);
  void MergeFrom(const ShowSharingFrameWindowsParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowSharingFrameWindowsParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchSplitScreenModeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SwitchSplitScreenModeParams) */ {
 public:
  SwitchSplitScreenModeParams();
  virtual ~SwitchSplitScreenModeParams();

  SwitchSplitScreenModeParams(const SwitchSplitScreenModeParams& from);

  inline SwitchSplitScreenModeParams& operator=(const SwitchSplitScreenModeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwitchSplitScreenModeParams(SwitchSplitScreenModeParams&& from) noexcept
    : SwitchSplitScreenModeParams() {
    *this = ::std::move(from);
  }

  inline SwitchSplitScreenModeParams& operator=(SwitchSplitScreenModeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SwitchSplitScreenModeParams& default_instance();

  static inline const SwitchSplitScreenModeParams* internal_default_instance() {
    return reinterpret_cast<const SwitchSplitScreenModeParams*>(
               &_SwitchSplitScreenModeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SwitchSplitScreenModeParams* other);
  friend void swap(SwitchSplitScreenModeParams& a, SwitchSplitScreenModeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwitchSplitScreenModeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchSplitScreenModeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SwitchSplitScreenModeParams& from);
  void MergeFrom(const SwitchSplitScreenModeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchSplitScreenModeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bSplit = 1;
  bool has_bsplit() const;
  void clear_bsplit();
  static const int kBSplitFieldNumber = 1;
  bool bsplit() const;
  void set_bsplit(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SwitchSplitScreenModeParams)
 private:
  void set_has_bsplit();
  void clear_has_bsplit();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bsplit_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams) */ {
 public:
  SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams();
  virtual ~SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams();

  SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from);

  inline SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& operator=(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams&& from) noexcept
    : SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams() {
    *this = ::std::move(from);
  }

  inline SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& operator=(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& default_instance();

  static inline const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* internal_default_instance() {
    return reinterpret_cast<const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams*>(
               &_SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* other);
  friend void swap(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& a, SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from);
  void MergeFrom(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 minimizeUIMOde = 1;
  bool has_minimizeuimode() const;
  void clear_minimizeuimode();
  static const int kMinimizeUIMOdeFieldNumber = 1;
  ::google::protobuf::int32 minimizeuimode() const;
  void set_minimizeuimode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
 private:
  void set_has_minimizeuimode();
  void clear_has_minimizeuimode();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 minimizeuimode_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwapToShowShareViewOrVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams) */ {
 public:
  SwapToShowShareViewOrVideoParams();
  virtual ~SwapToShowShareViewOrVideoParams();

  SwapToShowShareViewOrVideoParams(const SwapToShowShareViewOrVideoParams& from);

  inline SwapToShowShareViewOrVideoParams& operator=(const SwapToShowShareViewOrVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwapToShowShareViewOrVideoParams(SwapToShowShareViewOrVideoParams&& from) noexcept
    : SwapToShowShareViewOrVideoParams() {
    *this = ::std::move(from);
  }

  inline SwapToShowShareViewOrVideoParams& operator=(SwapToShowShareViewOrVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SwapToShowShareViewOrVideoParams& default_instance();

  static inline const SwapToShowShareViewOrVideoParams* internal_default_instance() {
    return reinterpret_cast<const SwapToShowShareViewOrVideoParams*>(
               &_SwapToShowShareViewOrVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SwapToShowShareViewOrVideoParams* other);
  friend void swap(SwapToShowShareViewOrVideoParams& a, SwapToShowShareViewOrVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwapToShowShareViewOrVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SwapToShowShareViewOrVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SwapToShowShareViewOrVideoParams& from);
  void MergeFrom(const SwapToShowShareViewOrVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwapToShowShareViewOrVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bToDisplayShare = 1;
  bool has_btodisplayshare() const;
  void clear_btodisplayshare();
  static const int kBToDisplayShareFieldNumber = 1;
  bool btodisplayshare() const;
  void set_btodisplayshare(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
 private:
  void set_has_btodisplayshare();
  void clear_has_btodisplayshare();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool btodisplayshare_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowSettingDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ShowSettingDlgParams) */ {
 public:
  ShowSettingDlgParams();
  virtual ~ShowSettingDlgParams();

  ShowSettingDlgParams(const ShowSettingDlgParams& from);

  inline ShowSettingDlgParams& operator=(const ShowSettingDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowSettingDlgParams(ShowSettingDlgParams&& from) noexcept
    : ShowSettingDlgParams() {
    *this = ::std::move(from);
  }

  inline ShowSettingDlgParams& operator=(ShowSettingDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ShowSettingDlgParams& default_instance();

  static inline const ShowSettingDlgParams* internal_default_instance() {
    return reinterpret_cast<const ShowSettingDlgParams*>(
               &_ShowSettingDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ShowSettingDlgParams* other);
  friend void swap(ShowSettingDlgParams& a, ShowSettingDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowSettingDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowSettingDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ShowSettingDlgParams& from);
  void MergeFrom(const ShowSettingDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShowSettingDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hParent = 1;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 1;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // optional string left = 2;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 2;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 3;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 3;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // optional string hSettingWnd = 4;
  bool has_hsettingwnd() const;
  void clear_hsettingwnd();
  static const int kHSettingWndFieldNumber = 4;
  const ::std::string& hsettingwnd() const;
  void set_hsettingwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hsettingwnd(::std::string&& value);
  #endif
  void set_hsettingwnd(const char* value);
  void set_hsettingwnd(const char* value, size_t size);
  ::std::string* mutable_hsettingwnd();
  ::std::string* release_hsettingwnd();
  void set_allocated_hsettingwnd(::std::string* hsettingwnd);

  // optional bool bShow = 5;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 5;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ShowSettingDlgParams)
 private:
  void set_has_hparent();
  void clear_has_hparent();
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_hsettingwnd();
  void clear_has_hsettingwnd();
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  ::google::protobuf::internal::ArenaStringPtr hsettingwnd_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScheduleMeetingWithWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ScheduleMeetingWithWndParams) */ {
 public:
  ScheduleMeetingWithWndParams();
  virtual ~ScheduleMeetingWithWndParams();

  ScheduleMeetingWithWndParams(const ScheduleMeetingWithWndParams& from);

  inline ScheduleMeetingWithWndParams& operator=(const ScheduleMeetingWithWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleMeetingWithWndParams(ScheduleMeetingWithWndParams&& from) noexcept
    : ScheduleMeetingWithWndParams() {
    *this = ::std::move(from);
  }

  inline ScheduleMeetingWithWndParams& operator=(ScheduleMeetingWithWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ScheduleMeetingWithWndParams& default_instance();

  static inline const ScheduleMeetingWithWndParams* internal_default_instance() {
    return reinterpret_cast<const ScheduleMeetingWithWndParams*>(
               &_ScheduleMeetingWithWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ScheduleMeetingWithWndParams* other);
  friend void swap(ScheduleMeetingWithWndParams& a, ScheduleMeetingWithWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleMeetingWithWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleMeetingWithWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ScheduleMeetingWithWndParams& from);
  void MergeFrom(const ScheduleMeetingWithWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleMeetingWithWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hSelfWnd = 1;
  bool has_hselfwnd() const;
  void clear_hselfwnd();
  static const int kHSelfWndFieldNumber = 1;
  const ::std::string& hselfwnd() const;
  void set_hselfwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hselfwnd(::std::string&& value);
  #endif
  void set_hselfwnd(const char* value);
  void set_hselfwnd(const char* value, size_t size);
  ::std::string* mutable_hselfwnd();
  ::std::string* release_hselfwnd();
  void set_allocated_hselfwnd(::std::string* hselfwnd);

  // optional string hParent = 2;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 2;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // optional string left = 3;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 3;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 4;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 4;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
 private:
  void set_has_hselfwnd();
  void clear_has_hselfwnd();
  void set_has_hparent();
  void clear_has_hparent();
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hselfwnd_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EditMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EditMeetingParams) */ {
 public:
  EditMeetingParams();
  virtual ~EditMeetingParams();

  EditMeetingParams(const EditMeetingParams& from);

  inline EditMeetingParams& operator=(const EditMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditMeetingParams(EditMeetingParams&& from) noexcept
    : EditMeetingParams() {
    *this = ::std::move(from);
  }

  inline EditMeetingParams& operator=(EditMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EditMeetingParams& default_instance();

  static inline const EditMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EditMeetingParams*>(
               &_EditMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(EditMeetingParams* other);
  friend void swap(EditMeetingParams& a, EditMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EditMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EditMeetingParams& from);
  void MergeFrom(const EditMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EditMeetingParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 meetingnumber_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EditMeetingWithWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EditMeetingWithWndParams) */ {
 public:
  EditMeetingWithWndParams();
  virtual ~EditMeetingWithWndParams();

  EditMeetingWithWndParams(const EditMeetingWithWndParams& from);

  inline EditMeetingWithWndParams& operator=(const EditMeetingWithWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditMeetingWithWndParams(EditMeetingWithWndParams&& from) noexcept
    : EditMeetingWithWndParams() {
    *this = ::std::move(from);
  }

  inline EditMeetingWithWndParams& operator=(EditMeetingWithWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EditMeetingWithWndParams& default_instance();

  static inline const EditMeetingWithWndParams* internal_default_instance() {
    return reinterpret_cast<const EditMeetingWithWndParams*>(
               &_EditMeetingWithWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(EditMeetingWithWndParams* other);
  friend void swap(EditMeetingWithWndParams& a, EditMeetingWithWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditMeetingWithWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EditMeetingWithWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EditMeetingWithWndParams& from);
  void MergeFrom(const EditMeetingWithWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditMeetingWithWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hSelfWnd = 1;
  bool has_hselfwnd() const;
  void clear_hselfwnd();
  static const int kHSelfWndFieldNumber = 1;
  const ::std::string& hselfwnd() const;
  void set_hselfwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hselfwnd(::std::string&& value);
  #endif
  void set_hselfwnd(const char* value);
  void set_hselfwnd(const char* value, size_t size);
  ::std::string* mutable_hselfwnd();
  ::std::string* release_hselfwnd();
  void set_allocated_hselfwnd(::std::string* hselfwnd);

  // optional string hParent = 2;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 2;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // optional string left = 3;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 3;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 4;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 4;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // optional uint64 meetingNumber = 5;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 5;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EditMeetingWithWndParams)
 private:
  void set_has_hselfwnd();
  void clear_has_hselfwnd();
  void set_has_hparent();
  void clear_has_hparent();
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_meetingnumber();
  void clear_has_meetingnumber();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hselfwnd_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  ::google::protobuf::uint64 meetingnumber_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DeleteMeetingParams) */ {
 public:
  DeleteMeetingParams();
  virtual ~DeleteMeetingParams();

  DeleteMeetingParams(const DeleteMeetingParams& from);

  inline DeleteMeetingParams& operator=(const DeleteMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteMeetingParams(DeleteMeetingParams&& from) noexcept
    : DeleteMeetingParams() {
    *this = ::std::move(from);
  }

  inline DeleteMeetingParams& operator=(DeleteMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DeleteMeetingParams& default_instance();

  static inline const DeleteMeetingParams* internal_default_instance() {
    return reinterpret_cast<const DeleteMeetingParams*>(
               &_DeleteMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(DeleteMeetingParams* other);
  friend void swap(DeleteMeetingParams& a, DeleteMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DeleteMeetingParams& from);
  void MergeFrom(const DeleteMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DeleteMeetingParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 meetingnumber_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddCustomizedPictureResourceParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AddCustomizedPictureResourceParams) */ {
 public:
  AddCustomizedPictureResourceParams();
  virtual ~AddCustomizedPictureResourceParams();

  AddCustomizedPictureResourceParams(const AddCustomizedPictureResourceParams& from);

  inline AddCustomizedPictureResourceParams& operator=(const AddCustomizedPictureResourceParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddCustomizedPictureResourceParams(AddCustomizedPictureResourceParams&& from) noexcept
    : AddCustomizedPictureResourceParams() {
    *this = ::std::move(from);
  }

  inline AddCustomizedPictureResourceParams& operator=(AddCustomizedPictureResourceParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AddCustomizedPictureResourceParams& default_instance();

  static inline const AddCustomizedPictureResourceParams* internal_default_instance() {
    return reinterpret_cast<const AddCustomizedPictureResourceParams*>(
               &_AddCustomizedPictureResourceParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AddCustomizedPictureResourceParams* other);
  friend void swap(AddCustomizedPictureResourceParams& a, AddCustomizedPictureResourceParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddCustomizedPictureResourceParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AddCustomizedPictureResourceParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AddCustomizedPictureResourceParams& from);
  void MergeFrom(const AddCustomizedPictureResourceParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddCustomizedPictureResourceParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strPNGID = 1;
  bool has_strpngid() const;
  void clear_strpngid();
  static const int kStrPNGIDFieldNumber = 1;
  const ::std::string& strpngid() const;
  void set_strpngid(const ::std::string& value);
  #if LANG_CXX11
  void set_strpngid(::std::string&& value);
  #endif
  void set_strpngid(const char* value);
  void set_strpngid(const char* value, size_t size);
  ::std::string* mutable_strpngid();
  ::std::string* release_strpngid();
  void set_allocated_strpngid(::std::string* strpngid);

  // optional string strPNGPath = 2;
  bool has_strpngpath() const;
  void clear_strpngpath();
  static const int kStrPNGPathFieldNumber = 2;
  const ::std::string& strpngpath() const;
  void set_strpngpath(const ::std::string& value);
  #if LANG_CXX11
  void set_strpngpath(::std::string&& value);
  #endif
  void set_strpngpath(const char* value);
  void set_strpngpath(const char* value, size_t size);
  ::std::string* mutable_strpngpath();
  ::std::string* release_strpngpath();
  void set_allocated_strpngpath(::std::string* strpngpath);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
 private:
  void set_has_strpngid();
  void clear_has_strpngid();
  void set_has_strpngpath();
  void clear_has_strpngpath();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strpngid_;
  ::google::protobuf::internal::ArenaStringPtr strpngpath_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddCustomizedStringResourceParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AddCustomizedStringResourceParams) */ {
 public:
  AddCustomizedStringResourceParams();
  virtual ~AddCustomizedStringResourceParams();

  AddCustomizedStringResourceParams(const AddCustomizedStringResourceParams& from);

  inline AddCustomizedStringResourceParams& operator=(const AddCustomizedStringResourceParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddCustomizedStringResourceParams(AddCustomizedStringResourceParams&& from) noexcept
    : AddCustomizedStringResourceParams() {
    *this = ::std::move(from);
  }

  inline AddCustomizedStringResourceParams& operator=(AddCustomizedStringResourceParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AddCustomizedStringResourceParams& default_instance();

  static inline const AddCustomizedStringResourceParams* internal_default_instance() {
    return reinterpret_cast<const AddCustomizedStringResourceParams*>(
               &_AddCustomizedStringResourceParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(AddCustomizedStringResourceParams* other);
  friend void swap(AddCustomizedStringResourceParams& a, AddCustomizedStringResourceParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddCustomizedStringResourceParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AddCustomizedStringResourceParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AddCustomizedStringResourceParams& from);
  void MergeFrom(const AddCustomizedStringResourceParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddCustomizedStringResourceParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strCustomizedString = 2;
  bool has_strcustomizedstring() const;
  void clear_strcustomizedstring();
  static const int kStrCustomizedStringFieldNumber = 2;
  const ::std::string& strcustomizedstring() const;
  void set_strcustomizedstring(const ::std::string& value);
  #if LANG_CXX11
  void set_strcustomizedstring(::std::string&& value);
  #endif
  void set_strcustomizedstring(const char* value);
  void set_strcustomizedstring(const char* value, size_t size);
  ::std::string* mutable_strcustomizedstring();
  ::std::string* release_strcustomizedstring();
  void set_allocated_strcustomizedstring(::std::string* strcustomizedstring);

  // optional int32 customizedStringType = 1;
  bool has_customizedstringtype() const;
  void clear_customizedstringtype();
  static const int kCustomizedStringTypeFieldNumber = 1;
  ::google::protobuf::int32 customizedstringtype() const;
  void set_customizedstringtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AddCustomizedStringResourceParams)
 private:
  void set_has_customizedstringtype();
  void clear_has_customizedstringtype();
  void set_has_strcustomizedstring();
  void clear_has_strcustomizedstring();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strcustomizedstring_;
  ::google::protobuf::int32 customizedstringtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddCustomizedURLResourceParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AddCustomizedURLResourceParams) */ {
 public:
  AddCustomizedURLResourceParams();
  virtual ~AddCustomizedURLResourceParams();

  AddCustomizedURLResourceParams(const AddCustomizedURLResourceParams& from);

  inline AddCustomizedURLResourceParams& operator=(const AddCustomizedURLResourceParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddCustomizedURLResourceParams(AddCustomizedURLResourceParams&& from) noexcept
    : AddCustomizedURLResourceParams() {
    *this = ::std::move(from);
  }

  inline AddCustomizedURLResourceParams& operator=(AddCustomizedURLResourceParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AddCustomizedURLResourceParams& default_instance();

  static inline const AddCustomizedURLResourceParams* internal_default_instance() {
    return reinterpret_cast<const AddCustomizedURLResourceParams*>(
               &_AddCustomizedURLResourceParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AddCustomizedURLResourceParams* other);
  friend void swap(AddCustomizedURLResourceParams& a, AddCustomizedURLResourceParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddCustomizedURLResourceParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AddCustomizedURLResourceParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AddCustomizedURLResourceParams& from);
  void MergeFrom(const AddCustomizedURLResourceParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddCustomizedURLResourceParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strCustomizedURL = 2;
  bool has_strcustomizedurl() const;
  void clear_strcustomizedurl();
  static const int kStrCustomizedURLFieldNumber = 2;
  const ::std::string& strcustomizedurl() const;
  void set_strcustomizedurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strcustomizedurl(::std::string&& value);
  #endif
  void set_strcustomizedurl(const char* value);
  void set_strcustomizedurl(const char* value, size_t size);
  ::std::string* mutable_strcustomizedurl();
  ::std::string* release_strcustomizedurl();
  void set_allocated_strcustomizedurl(::std::string* strcustomizedurl);

  // optional int32 customizedURLType = 1;
  bool has_customizedurltype() const;
  void clear_customizedurltype();
  static const int kCustomizedURLTypeFieldNumber = 1;
  ::google::protobuf::int32 customizedurltype() const;
  void set_customizedurltype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AddCustomizedURLResourceParams)
 private:
  void set_has_customizedurltype();
  void clear_has_customizedurltype();
  void set_has_strcustomizedurl();
  void clear_has_strcustomizedurl();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strcustomizedurl_;
  ::google::protobuf::int32 customizedurltype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TryWithMeetingNumberParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.TryWithMeetingNumberParams) */ {
 public:
  TryWithMeetingNumberParams();
  virtual ~TryWithMeetingNumberParams();

  TryWithMeetingNumberParams(const TryWithMeetingNumberParams& from);

  inline TryWithMeetingNumberParams& operator=(const TryWithMeetingNumberParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TryWithMeetingNumberParams(TryWithMeetingNumberParams&& from) noexcept
    : TryWithMeetingNumberParams() {
    *this = ::std::move(from);
  }

  inline TryWithMeetingNumberParams& operator=(TryWithMeetingNumberParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TryWithMeetingNumberParams& default_instance();

  static inline const TryWithMeetingNumberParams* internal_default_instance() {
    return reinterpret_cast<const TryWithMeetingNumberParams*>(
               &_TryWithMeetingNumberParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TryWithMeetingNumberParams* other);
  friend void swap(TryWithMeetingNumberParams& a, TryWithMeetingNumberParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TryWithMeetingNumberParams* New() const PROTOBUF_FINAL { return New(NULL); }

  TryWithMeetingNumberParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TryWithMeetingNumberParams& from);
  void MergeFrom(const TryWithMeetingNumberParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TryWithMeetingNumberParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 meetingNumber = 1;
  bool has_meetingnumber() const;
  void clear_meetingnumber();
  static const int kMeetingNumberFieldNumber = 1;
  ::google::protobuf::uint64 meetingnumber() const;
  void set_meetingnumber(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.TryWithMeetingNumberParams)
 private:
  void set_has_meetingnumber();
  void clear_has_meetingnumber();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 meetingnumber_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TryWithPairingCodeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.TryWithPairingCodeParams) */ {
 public:
  TryWithPairingCodeParams();
  virtual ~TryWithPairingCodeParams();

  TryWithPairingCodeParams(const TryWithPairingCodeParams& from);

  inline TryWithPairingCodeParams& operator=(const TryWithPairingCodeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TryWithPairingCodeParams(TryWithPairingCodeParams&& from) noexcept
    : TryWithPairingCodeParams() {
    *this = ::std::move(from);
  }

  inline TryWithPairingCodeParams& operator=(TryWithPairingCodeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TryWithPairingCodeParams& default_instance();

  static inline const TryWithPairingCodeParams* internal_default_instance() {
    return reinterpret_cast<const TryWithPairingCodeParams*>(
               &_TryWithPairingCodeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(TryWithPairingCodeParams* other);
  friend void swap(TryWithPairingCodeParams& a, TryWithPairingCodeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TryWithPairingCodeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  TryWithPairingCodeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TryWithPairingCodeParams& from);
  void MergeFrom(const TryWithPairingCodeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TryWithPairingCodeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string paringCode = 1;
  bool has_paringcode() const;
  void clear_paringcode();
  static const int kParingCodeFieldNumber = 1;
  const ::std::string& paringcode() const;
  void set_paringcode(const ::std::string& value);
  #if LANG_CXX11
  void set_paringcode(::std::string&& value);
  #endif
  void set_paringcode(const char* value);
  void set_paringcode(const char* value, size_t size);
  ::std::string* mutable_paringcode();
  ::std::string* release_paringcode();
  void set_allocated_paringcode(::std::string* paringcode);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.TryWithPairingCodeParams)
 private:
  void set_has_paringcode();
  void clear_has_paringcode();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr paringcode_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartAnnotationParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartAnnotationParams) */ {
 public:
  StartAnnotationParams();
  virtual ~StartAnnotationParams();

  StartAnnotationParams(const StartAnnotationParams& from);

  inline StartAnnotationParams& operator=(const StartAnnotationParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartAnnotationParams(StartAnnotationParams&& from) noexcept
    : StartAnnotationParams() {
    *this = ::std::move(from);
  }

  inline StartAnnotationParams& operator=(StartAnnotationParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartAnnotationParams& default_instance();

  static inline const StartAnnotationParams* internal_default_instance() {
    return reinterpret_cast<const StartAnnotationParams*>(
               &_StartAnnotationParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(StartAnnotationParams* other);
  friend void swap(StartAnnotationParams& a, StartAnnotationParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartAnnotationParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartAnnotationParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartAnnotationParams& from);
  void MergeFrom(const StartAnnotationParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartAnnotationParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string left = 2;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 2;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 3;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 3;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartAnnotationParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopAnnotationParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StopAnnotationParams) */ {
 public:
  StopAnnotationParams();
  virtual ~StopAnnotationParams();

  StopAnnotationParams(const StopAnnotationParams& from);

  inline StopAnnotationParams& operator=(const StopAnnotationParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopAnnotationParams(StopAnnotationParams&& from) noexcept
    : StopAnnotationParams() {
    *this = ::std::move(from);
  }

  inline StopAnnotationParams& operator=(StopAnnotationParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StopAnnotationParams& default_instance();

  static inline const StopAnnotationParams* internal_default_instance() {
    return reinterpret_cast<const StopAnnotationParams*>(
               &_StopAnnotationParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(StopAnnotationParams* other);
  friend void swap(StopAnnotationParams& a, StopAnnotationParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopAnnotationParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StopAnnotationParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StopAnnotationParams& from);
  void MergeFrom(const StopAnnotationParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StopAnnotationParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StopAnnotationParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetToolParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetToolParams) */ {
 public:
  SetToolParams();
  virtual ~SetToolParams();

  SetToolParams(const SetToolParams& from);

  inline SetToolParams& operator=(const SetToolParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetToolParams(SetToolParams&& from) noexcept
    : SetToolParams() {
    *this = ::std::move(from);
  }

  inline SetToolParams& operator=(SetToolParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetToolParams& default_instance();

  static inline const SetToolParams* internal_default_instance() {
    return reinterpret_cast<const SetToolParams*>(
               &_SetToolParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SetToolParams* other);
  friend void swap(SetToolParams& a, SetToolParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetToolParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetToolParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetToolParams& from);
  void MergeFrom(const SetToolParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetToolParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // optional int32 toolType = 2;
  bool has_tooltype() const;
  void clear_tooltype();
  static const int kToolTypeFieldNumber = 2;
  ::google::protobuf::int32 tooltype() const;
  void set_tooltype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetToolParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();
  void set_has_tooltype();
  void clear_has_tooltype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 viewtype_;
  ::google::protobuf::int32 tooltype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClearAnnotationParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ClearAnnotationParams) */ {
 public:
  ClearAnnotationParams();
  virtual ~ClearAnnotationParams();

  ClearAnnotationParams(const ClearAnnotationParams& from);

  inline ClearAnnotationParams& operator=(const ClearAnnotationParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClearAnnotationParams(ClearAnnotationParams&& from) noexcept
    : ClearAnnotationParams() {
    *this = ::std::move(from);
  }

  inline ClearAnnotationParams& operator=(ClearAnnotationParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClearAnnotationParams& default_instance();

  static inline const ClearAnnotationParams* internal_default_instance() {
    return reinterpret_cast<const ClearAnnotationParams*>(
               &_ClearAnnotationParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(ClearAnnotationParams* other);
  friend void swap(ClearAnnotationParams& a, ClearAnnotationParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClearAnnotationParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ClearAnnotationParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClearAnnotationParams& from);
  void MergeFrom(const ClearAnnotationParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClearAnnotationParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // optional int32 clearType = 2;
  bool has_cleartype() const;
  void clear_cleartype();
  static const int kClearTypeFieldNumber = 2;
  ::google::protobuf::int32 cleartype() const;
  void set_cleartype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ClearAnnotationParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();
  void set_has_cleartype();
  void clear_has_cleartype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 viewtype_;
  ::google::protobuf::int32 cleartype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetColorParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetColorParams) */ {
 public:
  SetColorParams();
  virtual ~SetColorParams();

  SetColorParams(const SetColorParams& from);

  inline SetColorParams& operator=(const SetColorParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetColorParams(SetColorParams&& from) noexcept
    : SetColorParams() {
    *this = ::std::move(from);
  }

  inline SetColorParams& operator=(SetColorParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetColorParams& default_instance();

  static inline const SetColorParams* internal_default_instance() {
    return reinterpret_cast<const SetColorParams*>(
               &_SetColorParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SetColorParams* other);
  friend void swap(SetColorParams& a, SetColorParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetColorParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetColorParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetColorParams& from);
  void MergeFrom(const SetColorParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetColorParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string color = 2;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 2;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetColorParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();
  void set_has_color();
  void clear_has_color();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetLineWidthParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetLineWidthParams) */ {
 public:
  SetLineWidthParams();
  virtual ~SetLineWidthParams();

  SetLineWidthParams(const SetLineWidthParams& from);

  inline SetLineWidthParams& operator=(const SetLineWidthParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetLineWidthParams(SetLineWidthParams&& from) noexcept
    : SetLineWidthParams() {
    *this = ::std::move(from);
  }

  inline SetLineWidthParams& operator=(SetLineWidthParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetLineWidthParams& default_instance();

  static inline const SetLineWidthParams* internal_default_instance() {
    return reinterpret_cast<const SetLineWidthParams*>(
               &_SetLineWidthParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SetLineWidthParams* other);
  friend void swap(SetLineWidthParams& a, SetLineWidthParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetLineWidthParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetLineWidthParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetLineWidthParams& from);
  void MergeFrom(const SetLineWidthParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetLineWidthParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string lineWidth = 2;
  bool has_linewidth() const;
  void clear_linewidth();
  static const int kLineWidthFieldNumber = 2;
  const ::std::string& linewidth() const;
  void set_linewidth(const ::std::string& value);
  #if LANG_CXX11
  void set_linewidth(::std::string&& value);
  #endif
  void set_linewidth(const char* value);
  void set_linewidth(const char* value, size_t size);
  ::std::string* mutable_linewidth();
  ::std::string* release_linewidth();
  void set_allocated_linewidth(::std::string* linewidth);

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetLineWidthParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();
  void set_has_linewidth();
  void clear_has_linewidth();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr linewidth_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UndoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.UndoParams) */ {
 public:
  UndoParams();
  virtual ~UndoParams();

  UndoParams(const UndoParams& from);

  inline UndoParams& operator=(const UndoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UndoParams(UndoParams&& from) noexcept
    : UndoParams() {
    *this = ::std::move(from);
  }

  inline UndoParams& operator=(UndoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UndoParams& default_instance();

  static inline const UndoParams* internal_default_instance() {
    return reinterpret_cast<const UndoParams*>(
               &_UndoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(UndoParams* other);
  friend void swap(UndoParams& a, UndoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UndoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  UndoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UndoParams& from);
  void MergeFrom(const UndoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UndoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.UndoParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedoParams) */ {
 public:
  RedoParams();
  virtual ~RedoParams();

  RedoParams(const RedoParams& from);

  inline RedoParams& operator=(const RedoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedoParams(RedoParams&& from) noexcept
    : RedoParams() {
    *this = ::std::move(from);
  }

  inline RedoParams& operator=(RedoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedoParams& default_instance();

  static inline const RedoParams* internal_default_instance() {
    return reinterpret_cast<const RedoParams*>(
               &_RedoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(RedoParams* other);
  friend void swap(RedoParams& a, RedoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedoParams& from);
  void MergeFrom(const RedoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  bool has_viewtype() const;
  void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  ::google::protobuf::int32 viewtype() const;
  void set_viewtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedoParams)
 private:
  void set_has_viewtype();
  void clear_has_viewtype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 viewtype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MuteAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.MuteAudioParams) */ {
 public:
  MuteAudioParams();
  virtual ~MuteAudioParams();

  MuteAudioParams(const MuteAudioParams& from);

  inline MuteAudioParams& operator=(const MuteAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MuteAudioParams(MuteAudioParams&& from) noexcept
    : MuteAudioParams() {
    *this = ::std::move(from);
  }

  inline MuteAudioParams& operator=(MuteAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MuteAudioParams& default_instance();

  static inline const MuteAudioParams* internal_default_instance() {
    return reinterpret_cast<const MuteAudioParams*>(
               &_MuteAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(MuteAudioParams* other);
  friend void swap(MuteAudioParams& a, MuteAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MuteAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  MuteAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MuteAudioParams& from);
  void MergeFrom(const MuteAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MuteAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional bool allowUnmuteBySelf = 2;
  bool has_allowunmutebyself() const;
  void clear_allowunmutebyself();
  static const int kAllowUnmuteBySelfFieldNumber = 2;
  bool allowunmutebyself() const;
  void set_allowunmutebyself(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.MuteAudioParams)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_allowunmutebyself();
  void clear_has_allowunmutebyself();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  bool allowunmutebyself_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnmuteAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.UnmuteAudioParams) */ {
 public:
  UnmuteAudioParams();
  virtual ~UnmuteAudioParams();

  UnmuteAudioParams(const UnmuteAudioParams& from);

  inline UnmuteAudioParams& operator=(const UnmuteAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnmuteAudioParams(UnmuteAudioParams&& from) noexcept
    : UnmuteAudioParams() {
    *this = ::std::move(from);
  }

  inline UnmuteAudioParams& operator=(UnmuteAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UnmuteAudioParams& default_instance();

  static inline const UnmuteAudioParams* internal_default_instance() {
    return reinterpret_cast<const UnmuteAudioParams*>(
               &_UnmuteAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(UnmuteAudioParams* other);
  friend void swap(UnmuteAudioParams& a, UnmuteAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnmuteAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  UnmuteAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UnmuteAudioParams& from);
  void MergeFrom(const UnmuteAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnmuteAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.UnmuteAudioParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnablePlayChimeWhenEnterOrExitParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams) */ {
 public:
  EnablePlayChimeWhenEnterOrExitParams();
  virtual ~EnablePlayChimeWhenEnterOrExitParams();

  EnablePlayChimeWhenEnterOrExitParams(const EnablePlayChimeWhenEnterOrExitParams& from);

  inline EnablePlayChimeWhenEnterOrExitParams& operator=(const EnablePlayChimeWhenEnterOrExitParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnablePlayChimeWhenEnterOrExitParams(EnablePlayChimeWhenEnterOrExitParams&& from) noexcept
    : EnablePlayChimeWhenEnterOrExitParams() {
    *this = ::std::move(from);
  }

  inline EnablePlayChimeWhenEnterOrExitParams& operator=(EnablePlayChimeWhenEnterOrExitParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnablePlayChimeWhenEnterOrExitParams& default_instance();

  static inline const EnablePlayChimeWhenEnterOrExitParams* internal_default_instance() {
    return reinterpret_cast<const EnablePlayChimeWhenEnterOrExitParams*>(
               &_EnablePlayChimeWhenEnterOrExitParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(EnablePlayChimeWhenEnterOrExitParams* other);
  friend void swap(EnablePlayChimeWhenEnterOrExitParams& a, EnablePlayChimeWhenEnterOrExitParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnablePlayChimeWhenEnterOrExitParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnablePlayChimeWhenEnterOrExitParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnablePlayChimeWhenEnterOrExitParams& from);
  void MergeFrom(const EnablePlayChimeWhenEnterOrExitParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnablePlayChimeWhenEnterOrExitParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableInviteButtonOnMeeitngUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams) */ {
 public:
  EnableInviteButtonOnMeeitngUIParams();
  virtual ~EnableInviteButtonOnMeeitngUIParams();

  EnableInviteButtonOnMeeitngUIParams(const EnableInviteButtonOnMeeitngUIParams& from);

  inline EnableInviteButtonOnMeeitngUIParams& operator=(const EnableInviteButtonOnMeeitngUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableInviteButtonOnMeeitngUIParams(EnableInviteButtonOnMeeitngUIParams&& from) noexcept
    : EnableInviteButtonOnMeeitngUIParams() {
    *this = ::std::move(from);
  }

  inline EnableInviteButtonOnMeeitngUIParams& operator=(EnableInviteButtonOnMeeitngUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableInviteButtonOnMeeitngUIParams& default_instance();

  static inline const EnableInviteButtonOnMeeitngUIParams* internal_default_instance() {
    return reinterpret_cast<const EnableInviteButtonOnMeeitngUIParams*>(
               &_EnableInviteButtonOnMeeitngUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(EnableInviteButtonOnMeeitngUIParams* other);
  friend void swap(EnableInviteButtonOnMeeitngUIParams& a, EnableInviteButtonOnMeeitngUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableInviteButtonOnMeeitngUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableInviteButtonOnMeeitngUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableInviteButtonOnMeeitngUIParams& from);
  void MergeFrom(const EnableInviteButtonOnMeeitngUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableInviteButtonOnMeeitngUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFloatVideoPosParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetFloatVideoPosParams) */ {
 public:
  SetFloatVideoPosParams();
  virtual ~SetFloatVideoPosParams();

  SetFloatVideoPosParams(const SetFloatVideoPosParams& from);

  inline SetFloatVideoPosParams& operator=(const SetFloatVideoPosParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFloatVideoPosParams(SetFloatVideoPosParams&& from) noexcept
    : SetFloatVideoPosParams() {
    *this = ::std::move(from);
  }

  inline SetFloatVideoPosParams& operator=(SetFloatVideoPosParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetFloatVideoPosParams& default_instance();

  static inline const SetFloatVideoPosParams* internal_default_instance() {
    return reinterpret_cast<const SetFloatVideoPosParams*>(
               &_SetFloatVideoPosParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SetFloatVideoPosParams* other);
  friend void swap(SetFloatVideoPosParams& a, SetFloatVideoPosParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFloatVideoPosParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFloatVideoPosParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetFloatVideoPosParams& from);
  void MergeFrom(const SetFloatVideoPosParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetFloatVideoPosParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // optional string hSelfWnd = 3;
  bool has_hselfwnd() const;
  void clear_hselfwnd();
  static const int kHSelfWndFieldNumber = 3;
  const ::std::string& hselfwnd() const;
  void set_hselfwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hselfwnd(::std::string&& value);
  #endif
  void set_hselfwnd(const char* value);
  void set_hselfwnd(const char* value, size_t size);
  ::std::string* mutable_hselfwnd();
  ::std::string* release_hselfwnd();
  void set_allocated_hselfwnd(::std::string* hselfwnd);

  // optional string hParent = 4;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 4;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetFloatVideoPosParams)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_hselfwnd();
  void clear_has_hselfwnd();
  void set_has_hparent();
  void clear_has_hparent();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  ::google::protobuf::internal::ArenaStringPtr hselfwnd_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetBottomFloatToolBarWndVisibilityParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams) */ {
 public:
  SetBottomFloatToolBarWndVisibilityParams();
  virtual ~SetBottomFloatToolBarWndVisibilityParams();

  SetBottomFloatToolBarWndVisibilityParams(const SetBottomFloatToolBarWndVisibilityParams& from);

  inline SetBottomFloatToolBarWndVisibilityParams& operator=(const SetBottomFloatToolBarWndVisibilityParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetBottomFloatToolBarWndVisibilityParams(SetBottomFloatToolBarWndVisibilityParams&& from) noexcept
    : SetBottomFloatToolBarWndVisibilityParams() {
    *this = ::std::move(from);
  }

  inline SetBottomFloatToolBarWndVisibilityParams& operator=(SetBottomFloatToolBarWndVisibilityParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetBottomFloatToolBarWndVisibilityParams& default_instance();

  static inline const SetBottomFloatToolBarWndVisibilityParams* internal_default_instance() {
    return reinterpret_cast<const SetBottomFloatToolBarWndVisibilityParams*>(
               &_SetBottomFloatToolBarWndVisibilityParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SetBottomFloatToolBarWndVisibilityParams* other);
  friend void swap(SetBottomFloatToolBarWndVisibilityParams& a, SetBottomFloatToolBarWndVisibilityParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetBottomFloatToolBarWndVisibilityParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetBottomFloatToolBarWndVisibilityParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetBottomFloatToolBarWndVisibilityParams& from);
  void MergeFrom(const SetBottomFloatToolBarWndVisibilityParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetBottomFloatToolBarWndVisibilityParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSharingToolBarVisibilityParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetSharingToolBarVisibilityParams) */ {
 public:
  SetSharingToolBarVisibilityParams();
  virtual ~SetSharingToolBarVisibilityParams();

  SetSharingToolBarVisibilityParams(const SetSharingToolBarVisibilityParams& from);

  inline SetSharingToolBarVisibilityParams& operator=(const SetSharingToolBarVisibilityParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSharingToolBarVisibilityParams(SetSharingToolBarVisibilityParams&& from) noexcept
    : SetSharingToolBarVisibilityParams() {
    *this = ::std::move(from);
  }

  inline SetSharingToolBarVisibilityParams& operator=(SetSharingToolBarVisibilityParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetSharingToolBarVisibilityParams& default_instance();

  static inline const SetSharingToolBarVisibilityParams* internal_default_instance() {
    return reinterpret_cast<const SetSharingToolBarVisibilityParams*>(
               &_SetSharingToolBarVisibilityParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SetSharingToolBarVisibilityParams* other);
  friend void swap(SetSharingToolBarVisibilityParams& a, SetSharingToolBarVisibilityParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSharingToolBarVisibilityParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSharingToolBarVisibilityParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetSharingToolBarVisibilityParams& from);
  void MergeFrom(const SetSharingToolBarVisibilityParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetSharingToolBarVisibilityParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetDirectShareMonitorIDParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetDirectShareMonitorIDParams) */ {
 public:
  SetDirectShareMonitorIDParams();
  virtual ~SetDirectShareMonitorIDParams();

  SetDirectShareMonitorIDParams(const SetDirectShareMonitorIDParams& from);

  inline SetDirectShareMonitorIDParams& operator=(const SetDirectShareMonitorIDParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDirectShareMonitorIDParams(SetDirectShareMonitorIDParams&& from) noexcept
    : SetDirectShareMonitorIDParams() {
    *this = ::std::move(from);
  }

  inline SetDirectShareMonitorIDParams& operator=(SetDirectShareMonitorIDParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetDirectShareMonitorIDParams& default_instance();

  static inline const SetDirectShareMonitorIDParams* internal_default_instance() {
    return reinterpret_cast<const SetDirectShareMonitorIDParams*>(
               &_SetDirectShareMonitorIDParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SetDirectShareMonitorIDParams* other);
  friend void swap(SetDirectShareMonitorIDParams& a, SetDirectShareMonitorIDParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDirectShareMonitorIDParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDirectShareMonitorIDParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetDirectShareMonitorIDParams& from);
  void MergeFrom(const SetDirectShareMonitorIDParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetDirectShareMonitorIDParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string monitorID = 1;
  bool has_monitorid() const;
  void clear_monitorid();
  static const int kMonitorIDFieldNumber = 1;
  const ::std::string& monitorid() const;
  void set_monitorid(const ::std::string& value);
  #if LANG_CXX11
  void set_monitorid(::std::string&& value);
  #endif
  void set_monitorid(const char* value);
  void set_monitorid(const char* value, size_t size);
  ::std::string* mutable_monitorid();
  ::std::string* release_monitorid();
  void set_allocated_monitorid(::std::string* monitorid);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
 private:
  void set_has_monitorid();
  void clear_has_monitorid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr monitorid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMeetingUIPosParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetMeetingUIPosParams) */ {
 public:
  SetMeetingUIPosParams();
  virtual ~SetMeetingUIPosParams();

  SetMeetingUIPosParams(const SetMeetingUIPosParams& from);

  inline SetMeetingUIPosParams& operator=(const SetMeetingUIPosParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMeetingUIPosParams(SetMeetingUIPosParams&& from) noexcept
    : SetMeetingUIPosParams() {
    *this = ::std::move(from);
  }

  inline SetMeetingUIPosParams& operator=(SetMeetingUIPosParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetMeetingUIPosParams& default_instance();

  static inline const SetMeetingUIPosParams* internal_default_instance() {
    return reinterpret_cast<const SetMeetingUIPosParams*>(
               &_SetMeetingUIPosParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(SetMeetingUIPosParams* other);
  friend void swap(SetMeetingUIPosParams& a, SetMeetingUIPosParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMeetingUIPosParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetMeetingUIPosParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetMeetingUIPosParams& from);
  void MergeFrom(const SetMeetingUIPosParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetMeetingUIPosParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  const ::std::string& left() const;
  void set_left(const ::std::string& value);
  #if LANG_CXX11
  void set_left(::std::string&& value);
  #endif
  void set_left(const char* value);
  void set_left(const char* value, size_t size);
  ::std::string* mutable_left();
  ::std::string* release_left();
  void set_allocated_left(::std::string* left);

  // optional string top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  const ::std::string& top() const;
  void set_top(const ::std::string& value);
  #if LANG_CXX11
  void set_top(::std::string&& value);
  #endif
  void set_top(const char* value);
  void set_top(const char* value, size_t size);
  ::std::string* mutable_top();
  ::std::string* release_top();
  void set_allocated_top(::std::string* top);

  // optional string hSelfWnd = 3;
  bool has_hselfwnd() const;
  void clear_hselfwnd();
  static const int kHSelfWndFieldNumber = 3;
  const ::std::string& hselfwnd() const;
  void set_hselfwnd(const ::std::string& value);
  #if LANG_CXX11
  void set_hselfwnd(::std::string&& value);
  #endif
  void set_hselfwnd(const char* value);
  void set_hselfwnd(const char* value, size_t size);
  ::std::string* mutable_hselfwnd();
  ::std::string* release_hselfwnd();
  void set_allocated_hselfwnd(::std::string* hselfwnd);

  // optional string hParent = 4;
  bool has_hparent() const;
  void clear_hparent();
  static const int kHParentFieldNumber = 4;
  const ::std::string& hparent() const;
  void set_hparent(const ::std::string& value);
  #if LANG_CXX11
  void set_hparent(::std::string&& value);
  #endif
  void set_hparent(const char* value);
  void set_hparent(const char* value, size_t size);
  ::std::string* mutable_hparent();
  ::std::string* release_hparent();
  void set_allocated_hparent(::std::string* hparent);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetMeetingUIPosParams)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_hselfwnd();
  void clear_has_hselfwnd();
  void set_has_hparent();
  void clear_has_hparent();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr left_;
  ::google::protobuf::internal::ArenaStringPtr top_;
  ::google::protobuf::internal::ArenaStringPtr hselfwnd_;
  ::google::protobuf::internal::ArenaStringPtr hparent_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableWaitingForHostDialogParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableWaitingForHostDialogParams) */ {
 public:
  DisableWaitingForHostDialogParams();
  virtual ~DisableWaitingForHostDialogParams();

  DisableWaitingForHostDialogParams(const DisableWaitingForHostDialogParams& from);

  inline DisableWaitingForHostDialogParams& operator=(const DisableWaitingForHostDialogParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableWaitingForHostDialogParams(DisableWaitingForHostDialogParams&& from) noexcept
    : DisableWaitingForHostDialogParams() {
    *this = ::std::move(from);
  }

  inline DisableWaitingForHostDialogParams& operator=(DisableWaitingForHostDialogParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableWaitingForHostDialogParams& default_instance();

  static inline const DisableWaitingForHostDialogParams* internal_default_instance() {
    return reinterpret_cast<const DisableWaitingForHostDialogParams*>(
               &_DisableWaitingForHostDialogParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(DisableWaitingForHostDialogParams* other);
  friend void swap(DisableWaitingForHostDialogParams& a, DisableWaitingForHostDialogParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableWaitingForHostDialogParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableWaitingForHostDialogParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableWaitingForHostDialogParams& from);
  void MergeFrom(const DisableWaitingForHostDialogParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableWaitingForHostDialogParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisablePopupMeetingWrongPSWDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams) */ {
 public:
  DisablePopupMeetingWrongPSWDlgParams();
  virtual ~DisablePopupMeetingWrongPSWDlgParams();

  DisablePopupMeetingWrongPSWDlgParams(const DisablePopupMeetingWrongPSWDlgParams& from);

  inline DisablePopupMeetingWrongPSWDlgParams& operator=(const DisablePopupMeetingWrongPSWDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisablePopupMeetingWrongPSWDlgParams(DisablePopupMeetingWrongPSWDlgParams&& from) noexcept
    : DisablePopupMeetingWrongPSWDlgParams() {
    *this = ::std::move(from);
  }

  inline DisablePopupMeetingWrongPSWDlgParams& operator=(DisablePopupMeetingWrongPSWDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisablePopupMeetingWrongPSWDlgParams& default_instance();

  static inline const DisablePopupMeetingWrongPSWDlgParams* internal_default_instance() {
    return reinterpret_cast<const DisablePopupMeetingWrongPSWDlgParams*>(
               &_DisablePopupMeetingWrongPSWDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(DisablePopupMeetingWrongPSWDlgParams* other);
  friend void swap(DisablePopupMeetingWrongPSWDlgParams& a, DisablePopupMeetingWrongPSWDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisablePopupMeetingWrongPSWDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisablePopupMeetingWrongPSWDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisablePopupMeetingWrongPSWDlgParams& from);
  void MergeFrom(const DisablePopupMeetingWrongPSWDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisablePopupMeetingWrongPSWDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoEndOtherMeetingWhenStartMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams) */ {
 public:
  EnableAutoEndOtherMeetingWhenStartMeetingParams();
  virtual ~EnableAutoEndOtherMeetingWhenStartMeetingParams();

  EnableAutoEndOtherMeetingWhenStartMeetingParams(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from);

  inline EnableAutoEndOtherMeetingWhenStartMeetingParams& operator=(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoEndOtherMeetingWhenStartMeetingParams(EnableAutoEndOtherMeetingWhenStartMeetingParams&& from) noexcept
    : EnableAutoEndOtherMeetingWhenStartMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoEndOtherMeetingWhenStartMeetingParams& operator=(EnableAutoEndOtherMeetingWhenStartMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoEndOtherMeetingWhenStartMeetingParams& default_instance();

  static inline const EnableAutoEndOtherMeetingWhenStartMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoEndOtherMeetingWhenStartMeetingParams*>(
               &_EnableAutoEndOtherMeetingWhenStartMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(EnableAutoEndOtherMeetingWhenStartMeetingParams* other);
  friend void swap(EnableAutoEndOtherMeetingWhenStartMeetingParams& a, EnableAutoEndOtherMeetingWhenStartMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoEndOtherMeetingWhenStartMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoEndOtherMeetingWhenStartMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from);
  void MergeFrom(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoEndOtherMeetingWhenStartMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableLButtonDBClick4SwitchFullScreenModeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams) */ {
 public:
  EnableLButtonDBClick4SwitchFullScreenModeParams();
  virtual ~EnableLButtonDBClick4SwitchFullScreenModeParams();

  EnableLButtonDBClick4SwitchFullScreenModeParams(const EnableLButtonDBClick4SwitchFullScreenModeParams& from);

  inline EnableLButtonDBClick4SwitchFullScreenModeParams& operator=(const EnableLButtonDBClick4SwitchFullScreenModeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableLButtonDBClick4SwitchFullScreenModeParams(EnableLButtonDBClick4SwitchFullScreenModeParams&& from) noexcept
    : EnableLButtonDBClick4SwitchFullScreenModeParams() {
    *this = ::std::move(from);
  }

  inline EnableLButtonDBClick4SwitchFullScreenModeParams& operator=(EnableLButtonDBClick4SwitchFullScreenModeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableLButtonDBClick4SwitchFullScreenModeParams& default_instance();

  static inline const EnableLButtonDBClick4SwitchFullScreenModeParams* internal_default_instance() {
    return reinterpret_cast<const EnableLButtonDBClick4SwitchFullScreenModeParams*>(
               &_EnableLButtonDBClick4SwitchFullScreenModeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(EnableLButtonDBClick4SwitchFullScreenModeParams* other);
  friend void swap(EnableLButtonDBClick4SwitchFullScreenModeParams& a, EnableLButtonDBClick4SwitchFullScreenModeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableLButtonDBClick4SwitchFullScreenModeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableLButtonDBClick4SwitchFullScreenModeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableLButtonDBClick4SwitchFullScreenModeParams& from);
  void MergeFrom(const EnableLButtonDBClick4SwitchFullScreenModeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableLButtonDBClick4SwitchFullScreenModeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFloatVideoWndVisibilityParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams) */ {
 public:
  SetFloatVideoWndVisibilityParams();
  virtual ~SetFloatVideoWndVisibilityParams();

  SetFloatVideoWndVisibilityParams(const SetFloatVideoWndVisibilityParams& from);

  inline SetFloatVideoWndVisibilityParams& operator=(const SetFloatVideoWndVisibilityParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFloatVideoWndVisibilityParams(SetFloatVideoWndVisibilityParams&& from) noexcept
    : SetFloatVideoWndVisibilityParams() {
    *this = ::std::move(from);
  }

  inline SetFloatVideoWndVisibilityParams& operator=(SetFloatVideoWndVisibilityParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetFloatVideoWndVisibilityParams& default_instance();

  static inline const SetFloatVideoWndVisibilityParams* internal_default_instance() {
    return reinterpret_cast<const SetFloatVideoWndVisibilityParams*>(
               &_SetFloatVideoWndVisibilityParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(SetFloatVideoWndVisibilityParams* other);
  friend void swap(SetFloatVideoWndVisibilityParams& a, SetFloatVideoWndVisibilityParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFloatVideoWndVisibilityParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFloatVideoWndVisibilityParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetFloatVideoWndVisibilityParams& from);
  void MergeFrom(const SetFloatVideoWndVisibilityParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetFloatVideoWndVisibilityParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrePopulateWebinarRegistrationInfoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams) */ {
 public:
  PrePopulateWebinarRegistrationInfoParams();
  virtual ~PrePopulateWebinarRegistrationInfoParams();

  PrePopulateWebinarRegistrationInfoParams(const PrePopulateWebinarRegistrationInfoParams& from);

  inline PrePopulateWebinarRegistrationInfoParams& operator=(const PrePopulateWebinarRegistrationInfoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrePopulateWebinarRegistrationInfoParams(PrePopulateWebinarRegistrationInfoParams&& from) noexcept
    : PrePopulateWebinarRegistrationInfoParams() {
    *this = ::std::move(from);
  }

  inline PrePopulateWebinarRegistrationInfoParams& operator=(PrePopulateWebinarRegistrationInfoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PrePopulateWebinarRegistrationInfoParams& default_instance();

  static inline const PrePopulateWebinarRegistrationInfoParams* internal_default_instance() {
    return reinterpret_cast<const PrePopulateWebinarRegistrationInfoParams*>(
               &_PrePopulateWebinarRegistrationInfoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(PrePopulateWebinarRegistrationInfoParams* other);
  friend void swap(PrePopulateWebinarRegistrationInfoParams& a, PrePopulateWebinarRegistrationInfoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrePopulateWebinarRegistrationInfoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PrePopulateWebinarRegistrationInfoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PrePopulateWebinarRegistrationInfoParams& from);
  void MergeFrom(const PrePopulateWebinarRegistrationInfoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrePopulateWebinarRegistrationInfoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
 private:
  void set_has_email();
  void clear_has_email();
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams) */ {
 public:
  EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams();
  virtual ~EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams();

  EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from);

  inline EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& operator=(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams&& from) noexcept
    : EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& operator=(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& default_instance();

  static inline const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams*>(
               &_EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* other);
  friend void swap(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& a, EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from);
  void MergeFrom(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoAdjustMicVolumeWhenJoinAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams) */ {
 public:
  EnableAutoAdjustMicVolumeWhenJoinAudioParams();
  virtual ~EnableAutoAdjustMicVolumeWhenJoinAudioParams();

  EnableAutoAdjustMicVolumeWhenJoinAudioParams(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from);

  inline EnableAutoAdjustMicVolumeWhenJoinAudioParams& operator=(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoAdjustMicVolumeWhenJoinAudioParams(EnableAutoAdjustMicVolumeWhenJoinAudioParams&& from) noexcept
    : EnableAutoAdjustMicVolumeWhenJoinAudioParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoAdjustMicVolumeWhenJoinAudioParams& operator=(EnableAutoAdjustMicVolumeWhenJoinAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoAdjustMicVolumeWhenJoinAudioParams& default_instance();

  static inline const EnableAutoAdjustMicVolumeWhenJoinAudioParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoAdjustMicVolumeWhenJoinAudioParams*>(
               &_EnableAutoAdjustMicVolumeWhenJoinAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(EnableAutoAdjustMicVolumeWhenJoinAudioParams* other);
  friend void swap(EnableAutoAdjustMicVolumeWhenJoinAudioParams& a, EnableAutoAdjustMicVolumeWhenJoinAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoAdjustMicVolumeWhenJoinAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoAdjustMicVolumeWhenJoinAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from);
  void MergeFrom(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoAdjustMicVolumeWhenJoinAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigDSCPParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ConfigDSCPParams) */ {
 public:
  ConfigDSCPParams();
  virtual ~ConfigDSCPParams();

  ConfigDSCPParams(const ConfigDSCPParams& from);

  inline ConfigDSCPParams& operator=(const ConfigDSCPParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigDSCPParams(ConfigDSCPParams&& from) noexcept
    : ConfigDSCPParams() {
    *this = ::std::move(from);
  }

  inline ConfigDSCPParams& operator=(ConfigDSCPParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConfigDSCPParams& default_instance();

  static inline const ConfigDSCPParams* internal_default_instance() {
    return reinterpret_cast<const ConfigDSCPParams*>(
               &_ConfigDSCPParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(ConfigDSCPParams* other);
  friend void swap(ConfigDSCPParams& a, ConfigDSCPParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigDSCPParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigDSCPParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ConfigDSCPParams& from);
  void MergeFrom(const ConfigDSCPParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigDSCPParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dscpAudio = 1;
  bool has_dscpaudio() const;
  void clear_dscpaudio();
  static const int kDscpAudioFieldNumber = 1;
  ::google::protobuf::int32 dscpaudio() const;
  void set_dscpaudio(::google::protobuf::int32 value);

  // optional int32 dscpVideo = 2;
  bool has_dscpvideo() const;
  void clear_dscpvideo();
  static const int kDscpVideoFieldNumber = 2;
  ::google::protobuf::int32 dscpvideo() const;
  void set_dscpvideo(::google::protobuf::int32 value);

  // optional bool bReset = 3;
  bool has_breset() const;
  void clear_breset();
  static const int kBResetFieldNumber = 3;
  bool breset() const;
  void set_breset(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ConfigDSCPParams)
 private:
  void set_has_dscpaudio();
  void clear_has_dscpaudio();
  void set_has_dscpvideo();
  void clear_has_dscpvideo();
  void set_has_breset();
  void clear_has_breset();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dscpaudio_;
  ::google::protobuf::int32 dscpvideo_;
  bool breset_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableHIdeFullPhoneNumber4PureCallinUserParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams) */ {
 public:
  EnableHIdeFullPhoneNumber4PureCallinUserParams();
  virtual ~EnableHIdeFullPhoneNumber4PureCallinUserParams();

  EnableHIdeFullPhoneNumber4PureCallinUserParams(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from);

  inline EnableHIdeFullPhoneNumber4PureCallinUserParams& operator=(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableHIdeFullPhoneNumber4PureCallinUserParams(EnableHIdeFullPhoneNumber4PureCallinUserParams&& from) noexcept
    : EnableHIdeFullPhoneNumber4PureCallinUserParams() {
    *this = ::std::move(from);
  }

  inline EnableHIdeFullPhoneNumber4PureCallinUserParams& operator=(EnableHIdeFullPhoneNumber4PureCallinUserParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableHIdeFullPhoneNumber4PureCallinUserParams& default_instance();

  static inline const EnableHIdeFullPhoneNumber4PureCallinUserParams* internal_default_instance() {
    return reinterpret_cast<const EnableHIdeFullPhoneNumber4PureCallinUserParams*>(
               &_EnableHIdeFullPhoneNumber4PureCallinUserParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(EnableHIdeFullPhoneNumber4PureCallinUserParams* other);
  friend void swap(EnableHIdeFullPhoneNumber4PureCallinUserParams& a, EnableHIdeFullPhoneNumber4PureCallinUserParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableHIdeFullPhoneNumber4PureCallinUserParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableHIdeFullPhoneNumber4PureCallinUserParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from);
  void MergeFrom(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableHIdeFullPhoneNumber4PureCallinUserParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableShareIOSDeviceParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableShareIOSDeviceParams) */ {
 public:
  EnableShareIOSDeviceParams();
  virtual ~EnableShareIOSDeviceParams();

  EnableShareIOSDeviceParams(const EnableShareIOSDeviceParams& from);

  inline EnableShareIOSDeviceParams& operator=(const EnableShareIOSDeviceParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableShareIOSDeviceParams(EnableShareIOSDeviceParams&& from) noexcept
    : EnableShareIOSDeviceParams() {
    *this = ::std::move(from);
  }

  inline EnableShareIOSDeviceParams& operator=(EnableShareIOSDeviceParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableShareIOSDeviceParams& default_instance();

  static inline const EnableShareIOSDeviceParams* internal_default_instance() {
    return reinterpret_cast<const EnableShareIOSDeviceParams*>(
               &_EnableShareIOSDeviceParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(EnableShareIOSDeviceParams* other);
  friend void swap(EnableShareIOSDeviceParams& a, EnableShareIOSDeviceParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableShareIOSDeviceParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableShareIOSDeviceParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableShareIOSDeviceParams& from);
  void MergeFrom(const EnableShareIOSDeviceParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableShareIOSDeviceParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableShareIOSDeviceParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableShareWhiteBoardParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableShareWhiteBoardParams) */ {
 public:
  EnableShareWhiteBoardParams();
  virtual ~EnableShareWhiteBoardParams();

  EnableShareWhiteBoardParams(const EnableShareWhiteBoardParams& from);

  inline EnableShareWhiteBoardParams& operator=(const EnableShareWhiteBoardParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableShareWhiteBoardParams(EnableShareWhiteBoardParams&& from) noexcept
    : EnableShareWhiteBoardParams() {
    *this = ::std::move(from);
  }

  inline EnableShareWhiteBoardParams& operator=(EnableShareWhiteBoardParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableShareWhiteBoardParams& default_instance();

  static inline const EnableShareWhiteBoardParams* internal_default_instance() {
    return reinterpret_cast<const EnableShareWhiteBoardParams*>(
               &_EnableShareWhiteBoardParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(EnableShareWhiteBoardParams* other);
  friend void swap(EnableShareWhiteBoardParams& a, EnableShareWhiteBoardParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableShareWhiteBoardParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableShareWhiteBoardParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableShareWhiteBoardParams& from);
  void MergeFrom(const EnableShareWhiteBoardParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableShareWhiteBoardParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableShareWhiteBoardParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableLengthLimitationOfMeetingNumberParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams) */ {
 public:
  EnableLengthLimitationOfMeetingNumberParams();
  virtual ~EnableLengthLimitationOfMeetingNumberParams();

  EnableLengthLimitationOfMeetingNumberParams(const EnableLengthLimitationOfMeetingNumberParams& from);

  inline EnableLengthLimitationOfMeetingNumberParams& operator=(const EnableLengthLimitationOfMeetingNumberParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableLengthLimitationOfMeetingNumberParams(EnableLengthLimitationOfMeetingNumberParams&& from) noexcept
    : EnableLengthLimitationOfMeetingNumberParams() {
    *this = ::std::move(from);
  }

  inline EnableLengthLimitationOfMeetingNumberParams& operator=(EnableLengthLimitationOfMeetingNumberParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableLengthLimitationOfMeetingNumberParams& default_instance();

  static inline const EnableLengthLimitationOfMeetingNumberParams* internal_default_instance() {
    return reinterpret_cast<const EnableLengthLimitationOfMeetingNumberParams*>(
               &_EnableLengthLimitationOfMeetingNumberParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(EnableLengthLimitationOfMeetingNumberParams* other);
  friend void swap(EnableLengthLimitationOfMeetingNumberParams& a, EnableLengthLimitationOfMeetingNumberParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableLengthLimitationOfMeetingNumberParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableLengthLimitationOfMeetingNumberParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableLengthLimitationOfMeetingNumberParams& from);
  void MergeFrom(const EnableLengthLimitationOfMeetingNumberParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableLengthLimitationOfMeetingNumberParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceDisableMultiShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ForceDisableMultiShareParams) */ {
 public:
  ForceDisableMultiShareParams();
  virtual ~ForceDisableMultiShareParams();

  ForceDisableMultiShareParams(const ForceDisableMultiShareParams& from);

  inline ForceDisableMultiShareParams& operator=(const ForceDisableMultiShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceDisableMultiShareParams(ForceDisableMultiShareParams&& from) noexcept
    : ForceDisableMultiShareParams() {
    *this = ::std::move(from);
  }

  inline ForceDisableMultiShareParams& operator=(ForceDisableMultiShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ForceDisableMultiShareParams& default_instance();

  static inline const ForceDisableMultiShareParams* internal_default_instance() {
    return reinterpret_cast<const ForceDisableMultiShareParams*>(
               &_ForceDisableMultiShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(ForceDisableMultiShareParams* other);
  friend void swap(ForceDisableMultiShareParams& a, ForceDisableMultiShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceDisableMultiShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceDisableMultiShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ForceDisableMultiShareParams& from);
  void MergeFrom(const ForceDisableMultiShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForceDisableMultiShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ForceDisableMultiShareParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableLocalRecordingConverProgressBarDialogParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams) */ {
 public:
  EnableLocalRecordingConverProgressBarDialogParams();
  virtual ~EnableLocalRecordingConverProgressBarDialogParams();

  EnableLocalRecordingConverProgressBarDialogParams(const EnableLocalRecordingConverProgressBarDialogParams& from);

  inline EnableLocalRecordingConverProgressBarDialogParams& operator=(const EnableLocalRecordingConverProgressBarDialogParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableLocalRecordingConverProgressBarDialogParams(EnableLocalRecordingConverProgressBarDialogParams&& from) noexcept
    : EnableLocalRecordingConverProgressBarDialogParams() {
    *this = ::std::move(from);
  }

  inline EnableLocalRecordingConverProgressBarDialogParams& operator=(EnableLocalRecordingConverProgressBarDialogParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableLocalRecordingConverProgressBarDialogParams& default_instance();

  static inline const EnableLocalRecordingConverProgressBarDialogParams* internal_default_instance() {
    return reinterpret_cast<const EnableLocalRecordingConverProgressBarDialogParams*>(
               &_EnableLocalRecordingConverProgressBarDialogParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(EnableLocalRecordingConverProgressBarDialogParams* other);
  friend void swap(EnableLocalRecordingConverProgressBarDialogParams& a, EnableLocalRecordingConverProgressBarDialogParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableLocalRecordingConverProgressBarDialogParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableLocalRecordingConverProgressBarDialogParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableLocalRecordingConverProgressBarDialogParams& from);
  void MergeFrom(const EnableLocalRecordingConverProgressBarDialogParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableLocalRecordingConverProgressBarDialogParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMaxDurationForOnlyHostInMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams) */ {
 public:
  SetMaxDurationForOnlyHostInMeetingParams();
  virtual ~SetMaxDurationForOnlyHostInMeetingParams();

  SetMaxDurationForOnlyHostInMeetingParams(const SetMaxDurationForOnlyHostInMeetingParams& from);

  inline SetMaxDurationForOnlyHostInMeetingParams& operator=(const SetMaxDurationForOnlyHostInMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMaxDurationForOnlyHostInMeetingParams(SetMaxDurationForOnlyHostInMeetingParams&& from) noexcept
    : SetMaxDurationForOnlyHostInMeetingParams() {
    *this = ::std::move(from);
  }

  inline SetMaxDurationForOnlyHostInMeetingParams& operator=(SetMaxDurationForOnlyHostInMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetMaxDurationForOnlyHostInMeetingParams& default_instance();

  static inline const SetMaxDurationForOnlyHostInMeetingParams* internal_default_instance() {
    return reinterpret_cast<const SetMaxDurationForOnlyHostInMeetingParams*>(
               &_SetMaxDurationForOnlyHostInMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(SetMaxDurationForOnlyHostInMeetingParams* other);
  friend void swap(SetMaxDurationForOnlyHostInMeetingParams& a, SetMaxDurationForOnlyHostInMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMaxDurationForOnlyHostInMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetMaxDurationForOnlyHostInMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetMaxDurationForOnlyHostInMeetingParams& from);
  void MergeFrom(const SetMaxDurationForOnlyHostInMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetMaxDurationForOnlyHostInMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nDuration = 1;
  bool has_nduration() const;
  void clear_nduration();
  static const int kNDurationFieldNumber = 1;
  ::google::protobuf::int32 nduration() const;
  void set_nduration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
 private:
  void set_has_nduration();
  void clear_has_nduration();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 nduration_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableApproveRemoteControlDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams) */ {
 public:
  EnableApproveRemoteControlDlgParams();
  virtual ~EnableApproveRemoteControlDlgParams();

  EnableApproveRemoteControlDlgParams(const EnableApproveRemoteControlDlgParams& from);

  inline EnableApproveRemoteControlDlgParams& operator=(const EnableApproveRemoteControlDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableApproveRemoteControlDlgParams(EnableApproveRemoteControlDlgParams&& from) noexcept
    : EnableApproveRemoteControlDlgParams() {
    *this = ::std::move(from);
  }

  inline EnableApproveRemoteControlDlgParams& operator=(EnableApproveRemoteControlDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableApproveRemoteControlDlgParams& default_instance();

  static inline const EnableApproveRemoteControlDlgParams* internal_default_instance() {
    return reinterpret_cast<const EnableApproveRemoteControlDlgParams*>(
               &_EnableApproveRemoteControlDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(EnableApproveRemoteControlDlgParams* other);
  friend void swap(EnableApproveRemoteControlDlgParams& a, EnableApproveRemoteControlDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableApproveRemoteControlDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableApproveRemoteControlDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableApproveRemoteControlDlgParams& from);
  void MergeFrom(const EnableApproveRemoteControlDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableApproveRemoteControlDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableDeclineRemoteControlResponseDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams) */ {
 public:
  EnableDeclineRemoteControlResponseDlgParams();
  virtual ~EnableDeclineRemoteControlResponseDlgParams();

  EnableDeclineRemoteControlResponseDlgParams(const EnableDeclineRemoteControlResponseDlgParams& from);

  inline EnableDeclineRemoteControlResponseDlgParams& operator=(const EnableDeclineRemoteControlResponseDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableDeclineRemoteControlResponseDlgParams(EnableDeclineRemoteControlResponseDlgParams&& from) noexcept
    : EnableDeclineRemoteControlResponseDlgParams() {
    *this = ::std::move(from);
  }

  inline EnableDeclineRemoteControlResponseDlgParams& operator=(EnableDeclineRemoteControlResponseDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableDeclineRemoteControlResponseDlgParams& default_instance();

  static inline const EnableDeclineRemoteControlResponseDlgParams* internal_default_instance() {
    return reinterpret_cast<const EnableDeclineRemoteControlResponseDlgParams*>(
               &_EnableDeclineRemoteControlResponseDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(EnableDeclineRemoteControlResponseDlgParams* other);
  friend void swap(EnableDeclineRemoteControlResponseDlgParams& a, EnableDeclineRemoteControlResponseDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableDeclineRemoteControlResponseDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableDeclineRemoteControlResponseDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableDeclineRemoteControlResponseDlgParams& from);
  void MergeFrom(const EnableDeclineRemoteControlResponseDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableDeclineRemoteControlResponseDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableLeaveMeetingOptionForHostParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams) */ {
 public:
  EnableLeaveMeetingOptionForHostParams();
  virtual ~EnableLeaveMeetingOptionForHostParams();

  EnableLeaveMeetingOptionForHostParams(const EnableLeaveMeetingOptionForHostParams& from);

  inline EnableLeaveMeetingOptionForHostParams& operator=(const EnableLeaveMeetingOptionForHostParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableLeaveMeetingOptionForHostParams(EnableLeaveMeetingOptionForHostParams&& from) noexcept
    : EnableLeaveMeetingOptionForHostParams() {
    *this = ::std::move(from);
  }

  inline EnableLeaveMeetingOptionForHostParams& operator=(EnableLeaveMeetingOptionForHostParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableLeaveMeetingOptionForHostParams& default_instance();

  static inline const EnableLeaveMeetingOptionForHostParams* internal_default_instance() {
    return reinterpret_cast<const EnableLeaveMeetingOptionForHostParams*>(
               &_EnableLeaveMeetingOptionForHostParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(EnableLeaveMeetingOptionForHostParams* other);
  friend void swap(EnableLeaveMeetingOptionForHostParams& a, EnableLeaveMeetingOptionForHostParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableLeaveMeetingOptionForHostParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableLeaveMeetingOptionForHostParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableLeaveMeetingOptionForHostParams& from);
  void MergeFrom(const EnableLeaveMeetingOptionForHostParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableLeaveMeetingOptionForHostParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableVideoButtonOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams) */ {
 public:
  EnableVideoButtonOnMeetingUIParams();
  virtual ~EnableVideoButtonOnMeetingUIParams();

  EnableVideoButtonOnMeetingUIParams(const EnableVideoButtonOnMeetingUIParams& from);

  inline EnableVideoButtonOnMeetingUIParams& operator=(const EnableVideoButtonOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableVideoButtonOnMeetingUIParams(EnableVideoButtonOnMeetingUIParams&& from) noexcept
    : EnableVideoButtonOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline EnableVideoButtonOnMeetingUIParams& operator=(EnableVideoButtonOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableVideoButtonOnMeetingUIParams& default_instance();

  static inline const EnableVideoButtonOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const EnableVideoButtonOnMeetingUIParams*>(
               &_EnableVideoButtonOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(EnableVideoButtonOnMeetingUIParams* other);
  friend void swap(EnableVideoButtonOnMeetingUIParams& a, EnableVideoButtonOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableVideoButtonOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableVideoButtonOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableVideoButtonOnMeetingUIParams& from);
  void MergeFrom(const EnableVideoButtonOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableVideoButtonOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAudioButtonOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams) */ {
 public:
  EnableAudioButtonOnMeetingUIParams();
  virtual ~EnableAudioButtonOnMeetingUIParams();

  EnableAudioButtonOnMeetingUIParams(const EnableAudioButtonOnMeetingUIParams& from);

  inline EnableAudioButtonOnMeetingUIParams& operator=(const EnableAudioButtonOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAudioButtonOnMeetingUIParams(EnableAudioButtonOnMeetingUIParams&& from) noexcept
    : EnableAudioButtonOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline EnableAudioButtonOnMeetingUIParams& operator=(EnableAudioButtonOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAudioButtonOnMeetingUIParams& default_instance();

  static inline const EnableAudioButtonOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const EnableAudioButtonOnMeetingUIParams*>(
               &_EnableAudioButtonOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(EnableAudioButtonOnMeetingUIParams* other);
  friend void swap(EnableAudioButtonOnMeetingUIParams& a, EnableAudioButtonOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAudioButtonOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAudioButtonOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAudioButtonOnMeetingUIParams& from);
  void MergeFrom(const EnableAudioButtonOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAudioButtonOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableEnterAndExitFullScreenButtonOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams) */ {
 public:
  EnableEnterAndExitFullScreenButtonOnMeetingUIParams();
  virtual ~EnableEnterAndExitFullScreenButtonOnMeetingUIParams();

  EnableEnterAndExitFullScreenButtonOnMeetingUIParams(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from);

  inline EnableEnterAndExitFullScreenButtonOnMeetingUIParams& operator=(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableEnterAndExitFullScreenButtonOnMeetingUIParams(EnableEnterAndExitFullScreenButtonOnMeetingUIParams&& from) noexcept
    : EnableEnterAndExitFullScreenButtonOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline EnableEnterAndExitFullScreenButtonOnMeetingUIParams& operator=(EnableEnterAndExitFullScreenButtonOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& default_instance();

  static inline const EnableEnterAndExitFullScreenButtonOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const EnableEnterAndExitFullScreenButtonOnMeetingUIParams*>(
               &_EnableEnterAndExitFullScreenButtonOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(EnableEnterAndExitFullScreenButtonOnMeetingUIParams* other);
  friend void swap(EnableEnterAndExitFullScreenButtonOnMeetingUIParams& a, EnableEnterAndExitFullScreenButtonOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableEnterAndExitFullScreenButtonOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableEnterAndExitFullScreenButtonOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from);
  void MergeFrom(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableEnterAndExitFullScreenButtonOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickShareBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickShareBTNEventParams) */ {
 public:
  RedirectClickShareBTNEventParams();
  virtual ~RedirectClickShareBTNEventParams();

  RedirectClickShareBTNEventParams(const RedirectClickShareBTNEventParams& from);

  inline RedirectClickShareBTNEventParams& operator=(const RedirectClickShareBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickShareBTNEventParams(RedirectClickShareBTNEventParams&& from) noexcept
    : RedirectClickShareBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickShareBTNEventParams& operator=(RedirectClickShareBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickShareBTNEventParams& default_instance();

  static inline const RedirectClickShareBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickShareBTNEventParams*>(
               &_RedirectClickShareBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(RedirectClickShareBTNEventParams* other);
  friend void swap(RedirectClickShareBTNEventParams& a, RedirectClickShareBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickShareBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickShareBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickShareBTNEventParams& from);
  void MergeFrom(const RedirectClickShareBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickShareBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickEndMeetingBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams) */ {
 public:
  RedirectClickEndMeetingBTNEventParams();
  virtual ~RedirectClickEndMeetingBTNEventParams();

  RedirectClickEndMeetingBTNEventParams(const RedirectClickEndMeetingBTNEventParams& from);

  inline RedirectClickEndMeetingBTNEventParams& operator=(const RedirectClickEndMeetingBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickEndMeetingBTNEventParams(RedirectClickEndMeetingBTNEventParams&& from) noexcept
    : RedirectClickEndMeetingBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickEndMeetingBTNEventParams& operator=(RedirectClickEndMeetingBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickEndMeetingBTNEventParams& default_instance();

  static inline const RedirectClickEndMeetingBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickEndMeetingBTNEventParams*>(
               &_RedirectClickEndMeetingBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(RedirectClickEndMeetingBTNEventParams* other);
  friend void swap(RedirectClickEndMeetingBTNEventParams& a, RedirectClickEndMeetingBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickEndMeetingBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickEndMeetingBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickEndMeetingBTNEventParams& from);
  void MergeFrom(const RedirectClickEndMeetingBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickEndMeetingBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectFreeMeetingEndingReminderDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams) */ {
 public:
  RedirectFreeMeetingEndingReminderDlgParams();
  virtual ~RedirectFreeMeetingEndingReminderDlgParams();

  RedirectFreeMeetingEndingReminderDlgParams(const RedirectFreeMeetingEndingReminderDlgParams& from);

  inline RedirectFreeMeetingEndingReminderDlgParams& operator=(const RedirectFreeMeetingEndingReminderDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectFreeMeetingEndingReminderDlgParams(RedirectFreeMeetingEndingReminderDlgParams&& from) noexcept
    : RedirectFreeMeetingEndingReminderDlgParams() {
    *this = ::std::move(from);
  }

  inline RedirectFreeMeetingEndingReminderDlgParams& operator=(RedirectFreeMeetingEndingReminderDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectFreeMeetingEndingReminderDlgParams& default_instance();

  static inline const RedirectFreeMeetingEndingReminderDlgParams* internal_default_instance() {
    return reinterpret_cast<const RedirectFreeMeetingEndingReminderDlgParams*>(
               &_RedirectFreeMeetingEndingReminderDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(RedirectFreeMeetingEndingReminderDlgParams* other);
  friend void swap(RedirectFreeMeetingEndingReminderDlgParams& a, RedirectFreeMeetingEndingReminderDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectFreeMeetingEndingReminderDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectFreeMeetingEndingReminderDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectFreeMeetingEndingReminderDlgParams& from);
  void MergeFrom(const RedirectFreeMeetingEndingReminderDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectFreeMeetingEndingReminderDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickCustomLiveStreamMenuEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams) */ {
 public:
  RedirectClickCustomLiveStreamMenuEventParams();
  virtual ~RedirectClickCustomLiveStreamMenuEventParams();

  RedirectClickCustomLiveStreamMenuEventParams(const RedirectClickCustomLiveStreamMenuEventParams& from);

  inline RedirectClickCustomLiveStreamMenuEventParams& operator=(const RedirectClickCustomLiveStreamMenuEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickCustomLiveStreamMenuEventParams(RedirectClickCustomLiveStreamMenuEventParams&& from) noexcept
    : RedirectClickCustomLiveStreamMenuEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickCustomLiveStreamMenuEventParams& operator=(RedirectClickCustomLiveStreamMenuEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickCustomLiveStreamMenuEventParams& default_instance();

  static inline const RedirectClickCustomLiveStreamMenuEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickCustomLiveStreamMenuEventParams*>(
               &_RedirectClickCustomLiveStreamMenuEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(RedirectClickCustomLiveStreamMenuEventParams* other);
  friend void swap(RedirectClickCustomLiveStreamMenuEventParams& a, RedirectClickCustomLiveStreamMenuEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickCustomLiveStreamMenuEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickCustomLiveStreamMenuEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickCustomLiveStreamMenuEventParams& from);
  void MergeFrom(const RedirectClickCustomLiveStreamMenuEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickCustomLiveStreamMenuEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickParticipantListBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams) */ {
 public:
  RedirectClickParticipantListBTNEventParams();
  virtual ~RedirectClickParticipantListBTNEventParams();

  RedirectClickParticipantListBTNEventParams(const RedirectClickParticipantListBTNEventParams& from);

  inline RedirectClickParticipantListBTNEventParams& operator=(const RedirectClickParticipantListBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickParticipantListBTNEventParams(RedirectClickParticipantListBTNEventParams&& from) noexcept
    : RedirectClickParticipantListBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickParticipantListBTNEventParams& operator=(RedirectClickParticipantListBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickParticipantListBTNEventParams& default_instance();

  static inline const RedirectClickParticipantListBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickParticipantListBTNEventParams*>(
               &_RedirectClickParticipantListBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(RedirectClickParticipantListBTNEventParams* other);
  friend void swap(RedirectClickParticipantListBTNEventParams& a, RedirectClickParticipantListBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickParticipantListBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickParticipantListBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickParticipantListBTNEventParams& from);
  void MergeFrom(const RedirectClickParticipantListBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickParticipantListBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickCCBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickCCBTNEventParams) */ {
 public:
  RedirectClickCCBTNEventParams();
  virtual ~RedirectClickCCBTNEventParams();

  RedirectClickCCBTNEventParams(const RedirectClickCCBTNEventParams& from);

  inline RedirectClickCCBTNEventParams& operator=(const RedirectClickCCBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickCCBTNEventParams(RedirectClickCCBTNEventParams&& from) noexcept
    : RedirectClickCCBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickCCBTNEventParams& operator=(RedirectClickCCBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickCCBTNEventParams& default_instance();

  static inline const RedirectClickCCBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickCCBTNEventParams*>(
               &_RedirectClickCCBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(RedirectClickCCBTNEventParams* other);
  friend void swap(RedirectClickCCBTNEventParams& a, RedirectClickCCBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickCCBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickCCBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickCCBTNEventParams& from);
  void MergeFrom(const RedirectClickCCBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickCCBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickAudioBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickAudioBTNEventParams) */ {
 public:
  RedirectClickAudioBTNEventParams();
  virtual ~RedirectClickAudioBTNEventParams();

  RedirectClickAudioBTNEventParams(const RedirectClickAudioBTNEventParams& from);

  inline RedirectClickAudioBTNEventParams& operator=(const RedirectClickAudioBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickAudioBTNEventParams(RedirectClickAudioBTNEventParams&& from) noexcept
    : RedirectClickAudioBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickAudioBTNEventParams& operator=(RedirectClickAudioBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickAudioBTNEventParams& default_instance();

  static inline const RedirectClickAudioBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickAudioBTNEventParams*>(
               &_RedirectClickAudioBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(RedirectClickAudioBTNEventParams* other);
  friend void swap(RedirectClickAudioBTNEventParams& a, RedirectClickAudioBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickAudioBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickAudioBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickAudioBTNEventParams& from);
  void MergeFrom(const RedirectClickAudioBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickAudioBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectClickAudioMenuBTNEventParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams) */ {
 public:
  RedirectClickAudioMenuBTNEventParams();
  virtual ~RedirectClickAudioMenuBTNEventParams();

  RedirectClickAudioMenuBTNEventParams(const RedirectClickAudioMenuBTNEventParams& from);

  inline RedirectClickAudioMenuBTNEventParams& operator=(const RedirectClickAudioMenuBTNEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectClickAudioMenuBTNEventParams(RedirectClickAudioMenuBTNEventParams&& from) noexcept
    : RedirectClickAudioMenuBTNEventParams() {
    *this = ::std::move(from);
  }

  inline RedirectClickAudioMenuBTNEventParams& operator=(RedirectClickAudioMenuBTNEventParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectClickAudioMenuBTNEventParams& default_instance();

  static inline const RedirectClickAudioMenuBTNEventParams* internal_default_instance() {
    return reinterpret_cast<const RedirectClickAudioMenuBTNEventParams*>(
               &_RedirectClickAudioMenuBTNEventParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(RedirectClickAudioMenuBTNEventParams* other);
  friend void swap(RedirectClickAudioMenuBTNEventParams& a, RedirectClickAudioMenuBTNEventParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectClickAudioMenuBTNEventParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectClickAudioMenuBTNEventParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectClickAudioMenuBTNEventParams& from);
  void MergeFrom(const RedirectClickAudioMenuBTNEventParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectClickAudioMenuBTNEventParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectMeetingWarningMsgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectMeetingWarningMsgParams) */ {
 public:
  RedirectMeetingWarningMsgParams();
  virtual ~RedirectMeetingWarningMsgParams();

  RedirectMeetingWarningMsgParams(const RedirectMeetingWarningMsgParams& from);

  inline RedirectMeetingWarningMsgParams& operator=(const RedirectMeetingWarningMsgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectMeetingWarningMsgParams(RedirectMeetingWarningMsgParams&& from) noexcept
    : RedirectMeetingWarningMsgParams() {
    *this = ::std::move(from);
  }

  inline RedirectMeetingWarningMsgParams& operator=(RedirectMeetingWarningMsgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectMeetingWarningMsgParams& default_instance();

  static inline const RedirectMeetingWarningMsgParams* internal_default_instance() {
    return reinterpret_cast<const RedirectMeetingWarningMsgParams*>(
               &_RedirectMeetingWarningMsgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(RedirectMeetingWarningMsgParams* other);
  friend void swap(RedirectMeetingWarningMsgParams& a, RedirectMeetingWarningMsgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectMeetingWarningMsgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectMeetingWarningMsgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectMeetingWarningMsgParams& from);
  void MergeFrom(const RedirectMeetingWarningMsgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectMeetingWarningMsgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirectBadNetwork = 1;
  bool has_bredirectbadnetwork() const;
  void clear_bredirectbadnetwork();
  static const int kBRedirectBadNetworkFieldNumber = 1;
  bool bredirectbadnetwork() const;
  void set_bredirectbadnetwork(bool value);

  // optional bool bRedirectWarnHighCPU = 2;
  bool has_bredirectwarnhighcpu() const;
  void clear_bredirectwarnhighcpu();
  static const int kBRedirectWarnHighCPUFieldNumber = 2;
  bool bredirectwarnhighcpu() const;
  void set_bredirectwarnhighcpu(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
 private:
  void set_has_bredirectbadnetwork();
  void clear_has_bredirectbadnetwork();
  void set_has_bredirectwarnhighcpu();
  void clear_has_bredirectwarnhighcpu();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirectbadnetwork_;
  bool bredirectwarnhighcpu_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableToolTipsShowParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableToolTipsShowParams) */ {
 public:
  EnableToolTipsShowParams();
  virtual ~EnableToolTipsShowParams();

  EnableToolTipsShowParams(const EnableToolTipsShowParams& from);

  inline EnableToolTipsShowParams& operator=(const EnableToolTipsShowParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableToolTipsShowParams(EnableToolTipsShowParams&& from) noexcept
    : EnableToolTipsShowParams() {
    *this = ::std::move(from);
  }

  inline EnableToolTipsShowParams& operator=(EnableToolTipsShowParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableToolTipsShowParams& default_instance();

  static inline const EnableToolTipsShowParams* internal_default_instance() {
    return reinterpret_cast<const EnableToolTipsShowParams*>(
               &_EnableToolTipsShowParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(EnableToolTipsShowParams* other);
  friend void swap(EnableToolTipsShowParams& a, EnableToolTipsShowParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableToolTipsShowParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableToolTipsShowParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableToolTipsShowParams& from);
  void MergeFrom(const EnableToolTipsShowParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableToolTipsShowParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableToolTipsShowParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAirplayInstructionWindowParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAirplayInstructionWindowParams) */ {
 public:
  EnableAirplayInstructionWindowParams();
  virtual ~EnableAirplayInstructionWindowParams();

  EnableAirplayInstructionWindowParams(const EnableAirplayInstructionWindowParams& from);

  inline EnableAirplayInstructionWindowParams& operator=(const EnableAirplayInstructionWindowParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAirplayInstructionWindowParams(EnableAirplayInstructionWindowParams&& from) noexcept
    : EnableAirplayInstructionWindowParams() {
    *this = ::std::move(from);
  }

  inline EnableAirplayInstructionWindowParams& operator=(EnableAirplayInstructionWindowParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAirplayInstructionWindowParams& default_instance();

  static inline const EnableAirplayInstructionWindowParams* internal_default_instance() {
    return reinterpret_cast<const EnableAirplayInstructionWindowParams*>(
               &_EnableAirplayInstructionWindowParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(EnableAirplayInstructionWindowParams* other);
  friend void swap(EnableAirplayInstructionWindowParams& a, EnableAirplayInstructionWindowParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAirplayInstructionWindowParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAirplayInstructionWindowParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAirplayInstructionWindowParams& from);
  void MergeFrom(const EnableAirplayInstructionWindowParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAirplayInstructionWindowParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableClaimHostFeatureParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableClaimHostFeatureParams) */ {
 public:
  EnableClaimHostFeatureParams();
  virtual ~EnableClaimHostFeatureParams();

  EnableClaimHostFeatureParams(const EnableClaimHostFeatureParams& from);

  inline EnableClaimHostFeatureParams& operator=(const EnableClaimHostFeatureParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableClaimHostFeatureParams(EnableClaimHostFeatureParams&& from) noexcept
    : EnableClaimHostFeatureParams() {
    *this = ::std::move(from);
  }

  inline EnableClaimHostFeatureParams& operator=(EnableClaimHostFeatureParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableClaimHostFeatureParams& default_instance();

  static inline const EnableClaimHostFeatureParams* internal_default_instance() {
    return reinterpret_cast<const EnableClaimHostFeatureParams*>(
               &_EnableClaimHostFeatureParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(EnableClaimHostFeatureParams* other);
  friend void swap(EnableClaimHostFeatureParams& a, EnableClaimHostFeatureParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableClaimHostFeatureParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableClaimHostFeatureParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableClaimHostFeatureParams& from);
  void MergeFrom(const EnableClaimHostFeatureParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableClaimHostFeatureParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableClaimHostFeatureParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoHideJoinAudioDialogParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams) */ {
 public:
  EnableAutoHideJoinAudioDialogParams();
  virtual ~EnableAutoHideJoinAudioDialogParams();

  EnableAutoHideJoinAudioDialogParams(const EnableAutoHideJoinAudioDialogParams& from);

  inline EnableAutoHideJoinAudioDialogParams& operator=(const EnableAutoHideJoinAudioDialogParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoHideJoinAudioDialogParams(EnableAutoHideJoinAudioDialogParams&& from) noexcept
    : EnableAutoHideJoinAudioDialogParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoHideJoinAudioDialogParams& operator=(EnableAutoHideJoinAudioDialogParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoHideJoinAudioDialogParams& default_instance();

  static inline const EnableAutoHideJoinAudioDialogParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoHideJoinAudioDialogParams*>(
               &_EnableAutoHideJoinAudioDialogParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(EnableAutoHideJoinAudioDialogParams* other);
  friend void swap(EnableAutoHideJoinAudioDialogParams& a, EnableAutoHideJoinAudioDialogParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoHideJoinAudioDialogParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoHideJoinAudioDialogParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoHideJoinAudioDialogParams& from);
  void MergeFrom(const EnableAutoHideJoinAudioDialogParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoHideJoinAudioDialogParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlwaysShowIconOnTaskBarParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams) */ {
 public:
  AlwaysShowIconOnTaskBarParams();
  virtual ~AlwaysShowIconOnTaskBarParams();

  AlwaysShowIconOnTaskBarParams(const AlwaysShowIconOnTaskBarParams& from);

  inline AlwaysShowIconOnTaskBarParams& operator=(const AlwaysShowIconOnTaskBarParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlwaysShowIconOnTaskBarParams(AlwaysShowIconOnTaskBarParams&& from) noexcept
    : AlwaysShowIconOnTaskBarParams() {
    *this = ::std::move(from);
  }

  inline AlwaysShowIconOnTaskBarParams& operator=(AlwaysShowIconOnTaskBarParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AlwaysShowIconOnTaskBarParams& default_instance();

  static inline const AlwaysShowIconOnTaskBarParams* internal_default_instance() {
    return reinterpret_cast<const AlwaysShowIconOnTaskBarParams*>(
               &_AlwaysShowIconOnTaskBarParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(AlwaysShowIconOnTaskBarParams* other);
  friend void swap(AlwaysShowIconOnTaskBarParams& a, AlwaysShowIconOnTaskBarParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlwaysShowIconOnTaskBarParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AlwaysShowIconOnTaskBarParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AlwaysShowIconOnTaskBarParams& from);
  void MergeFrom(const AlwaysShowIconOnTaskBarParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlwaysShowIconOnTaskBarParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bAlwaysShow = 1;
  bool has_balwaysshow() const;
  void clear_balwaysshow();
  static const int kBAlwaysShowFieldNumber = 1;
  bool balwaysshow() const;
  void set_balwaysshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
 private:
  void set_has_balwaysshow();
  void clear_has_balwaysshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool balwaysshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableSplitScreenModeUIElementsParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams) */ {
 public:
  DisableSplitScreenModeUIElementsParams();
  virtual ~DisableSplitScreenModeUIElementsParams();

  DisableSplitScreenModeUIElementsParams(const DisableSplitScreenModeUIElementsParams& from);

  inline DisableSplitScreenModeUIElementsParams& operator=(const DisableSplitScreenModeUIElementsParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableSplitScreenModeUIElementsParams(DisableSplitScreenModeUIElementsParams&& from) noexcept
    : DisableSplitScreenModeUIElementsParams() {
    *this = ::std::move(from);
  }

  inline DisableSplitScreenModeUIElementsParams& operator=(DisableSplitScreenModeUIElementsParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableSplitScreenModeUIElementsParams& default_instance();

  static inline const DisableSplitScreenModeUIElementsParams* internal_default_instance() {
    return reinterpret_cast<const DisableSplitScreenModeUIElementsParams*>(
               &_DisableSplitScreenModeUIElementsParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(DisableSplitScreenModeUIElementsParams* other);
  friend void swap(DisableSplitScreenModeUIElementsParams& a, DisableSplitScreenModeUIElementsParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableSplitScreenModeUIElementsParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableSplitScreenModeUIElementsParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableSplitScreenModeUIElementsParams& from);
  void MergeFrom(const DisableSplitScreenModeUIElementsParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableSplitScreenModeUIElementsParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowAudioUseComputerSoundChkboxParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams) */ {
 public:
  SetShowAudioUseComputerSoundChkboxParams();
  virtual ~SetShowAudioUseComputerSoundChkboxParams();

  SetShowAudioUseComputerSoundChkboxParams(const SetShowAudioUseComputerSoundChkboxParams& from);

  inline SetShowAudioUseComputerSoundChkboxParams& operator=(const SetShowAudioUseComputerSoundChkboxParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowAudioUseComputerSoundChkboxParams(SetShowAudioUseComputerSoundChkboxParams&& from) noexcept
    : SetShowAudioUseComputerSoundChkboxParams() {
    *this = ::std::move(from);
  }

  inline SetShowAudioUseComputerSoundChkboxParams& operator=(SetShowAudioUseComputerSoundChkboxParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowAudioUseComputerSoundChkboxParams& default_instance();

  static inline const SetShowAudioUseComputerSoundChkboxParams* internal_default_instance() {
    return reinterpret_cast<const SetShowAudioUseComputerSoundChkboxParams*>(
               &_SetShowAudioUseComputerSoundChkboxParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(SetShowAudioUseComputerSoundChkboxParams* other);
  friend void swap(SetShowAudioUseComputerSoundChkboxParams& a, SetShowAudioUseComputerSoundChkboxParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowAudioUseComputerSoundChkboxParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowAudioUseComputerSoundChkboxParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowAudioUseComputerSoundChkboxParams& from);
  void MergeFrom(const SetShowAudioUseComputerSoundChkboxParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowAudioUseComputerSoundChkboxParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowCallInTabParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowCallInTabParams) */ {
 public:
  SetShowCallInTabParams();
  virtual ~SetShowCallInTabParams();

  SetShowCallInTabParams(const SetShowCallInTabParams& from);

  inline SetShowCallInTabParams& operator=(const SetShowCallInTabParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowCallInTabParams(SetShowCallInTabParams&& from) noexcept
    : SetShowCallInTabParams() {
    *this = ::std::move(from);
  }

  inline SetShowCallInTabParams& operator=(SetShowCallInTabParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowCallInTabParams& default_instance();

  static inline const SetShowCallInTabParams* internal_default_instance() {
    return reinterpret_cast<const SetShowCallInTabParams*>(
               &_SetShowCallInTabParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(SetShowCallInTabParams* other);
  friend void swap(SetShowCallInTabParams& a, SetShowCallInTabParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowCallInTabParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowCallInTabParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowCallInTabParams& from);
  void MergeFrom(const SetShowCallInTabParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowCallInTabParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowCallInTabParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowCallMeTabParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowCallMeTabParams) */ {
 public:
  SetShowCallMeTabParams();
  virtual ~SetShowCallMeTabParams();

  SetShowCallMeTabParams(const SetShowCallMeTabParams& from);

  inline SetShowCallMeTabParams& operator=(const SetShowCallMeTabParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowCallMeTabParams(SetShowCallMeTabParams&& from) noexcept
    : SetShowCallMeTabParams() {
    *this = ::std::move(from);
  }

  inline SetShowCallMeTabParams& operator=(SetShowCallMeTabParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowCallMeTabParams& default_instance();

  static inline const SetShowCallMeTabParams* internal_default_instance() {
    return reinterpret_cast<const SetShowCallMeTabParams*>(
               &_SetShowCallMeTabParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(SetShowCallMeTabParams* other);
  friend void swap(SetShowCallMeTabParams& a, SetShowCallMeTabParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowCallMeTabParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowCallMeTabParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowCallMeTabParams& from);
  void MergeFrom(const SetShowCallMeTabParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowCallMeTabParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowCallMeTabParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableTopMostAttr4SettingDialogParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams) */ {
 public:
  DisableTopMostAttr4SettingDialogParams();
  virtual ~DisableTopMostAttr4SettingDialogParams();

  DisableTopMostAttr4SettingDialogParams(const DisableTopMostAttr4SettingDialogParams& from);

  inline DisableTopMostAttr4SettingDialogParams& operator=(const DisableTopMostAttr4SettingDialogParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableTopMostAttr4SettingDialogParams(DisableTopMostAttr4SettingDialogParams&& from) noexcept
    : DisableTopMostAttr4SettingDialogParams() {
    *this = ::std::move(from);
  }

  inline DisableTopMostAttr4SettingDialogParams& operator=(DisableTopMostAttr4SettingDialogParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableTopMostAttr4SettingDialogParams& default_instance();

  static inline const DisableTopMostAttr4SettingDialogParams* internal_default_instance() {
    return reinterpret_cast<const DisableTopMostAttr4SettingDialogParams*>(
               &_DisableTopMostAttr4SettingDialogParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(DisableTopMostAttr4SettingDialogParams* other);
  friend void swap(DisableTopMostAttr4SettingDialogParams& a, DisableTopMostAttr4SettingDialogParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableTopMostAttr4SettingDialogParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableTopMostAttr4SettingDialogParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableTopMostAttr4SettingDialogParams& from);
  void MergeFrom(const DisableTopMostAttr4SettingDialogParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableTopMostAttr4SettingDialogParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableGrabShareWithoutReminderParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams) */ {
 public:
  EnableGrabShareWithoutReminderParams();
  virtual ~EnableGrabShareWithoutReminderParams();

  EnableGrabShareWithoutReminderParams(const EnableGrabShareWithoutReminderParams& from);

  inline EnableGrabShareWithoutReminderParams& operator=(const EnableGrabShareWithoutReminderParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableGrabShareWithoutReminderParams(EnableGrabShareWithoutReminderParams&& from) noexcept
    : EnableGrabShareWithoutReminderParams() {
    *this = ::std::move(from);
  }

  inline EnableGrabShareWithoutReminderParams& operator=(EnableGrabShareWithoutReminderParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableGrabShareWithoutReminderParams& default_instance();

  static inline const EnableGrabShareWithoutReminderParams* internal_default_instance() {
    return reinterpret_cast<const EnableGrabShareWithoutReminderParams*>(
               &_EnableGrabShareWithoutReminderParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(EnableGrabShareWithoutReminderParams* other);
  friend void swap(EnableGrabShareWithoutReminderParams& a, EnableGrabShareWithoutReminderParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableGrabShareWithoutReminderParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableGrabShareWithoutReminderParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableGrabShareWithoutReminderParams& from);
  void MergeFrom(const EnableGrabShareWithoutReminderParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableGrabShareWithoutReminderParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableShowShareSwitchMultiToSingleConfirmDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams) */ {
 public:
  EnableShowShareSwitchMultiToSingleConfirmDlgParams();
  virtual ~EnableShowShareSwitchMultiToSingleConfirmDlgParams();

  EnableShowShareSwitchMultiToSingleConfirmDlgParams(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from);

  inline EnableShowShareSwitchMultiToSingleConfirmDlgParams& operator=(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableShowShareSwitchMultiToSingleConfirmDlgParams(EnableShowShareSwitchMultiToSingleConfirmDlgParams&& from) noexcept
    : EnableShowShareSwitchMultiToSingleConfirmDlgParams() {
    *this = ::std::move(from);
  }

  inline EnableShowShareSwitchMultiToSingleConfirmDlgParams& operator=(EnableShowShareSwitchMultiToSingleConfirmDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableShowShareSwitchMultiToSingleConfirmDlgParams& default_instance();

  static inline const EnableShowShareSwitchMultiToSingleConfirmDlgParams* internal_default_instance() {
    return reinterpret_cast<const EnableShowShareSwitchMultiToSingleConfirmDlgParams*>(
               &_EnableShowShareSwitchMultiToSingleConfirmDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(EnableShowShareSwitchMultiToSingleConfirmDlgParams* other);
  friend void swap(EnableShowShareSwitchMultiToSingleConfirmDlgParams& a, EnableShowShareSwitchMultiToSingleConfirmDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableShowShareSwitchMultiToSingleConfirmDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableShowShareSwitchMultiToSingleConfirmDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from);
  void MergeFrom(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableShowShareSwitchMultiToSingleConfirmDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableFreeMeetingRemainTimeNotifyParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams) */ {
 public:
  DisableFreeMeetingRemainTimeNotifyParams();
  virtual ~DisableFreeMeetingRemainTimeNotifyParams();

  DisableFreeMeetingRemainTimeNotifyParams(const DisableFreeMeetingRemainTimeNotifyParams& from);

  inline DisableFreeMeetingRemainTimeNotifyParams& operator=(const DisableFreeMeetingRemainTimeNotifyParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableFreeMeetingRemainTimeNotifyParams(DisableFreeMeetingRemainTimeNotifyParams&& from) noexcept
    : DisableFreeMeetingRemainTimeNotifyParams() {
    *this = ::std::move(from);
  }

  inline DisableFreeMeetingRemainTimeNotifyParams& operator=(DisableFreeMeetingRemainTimeNotifyParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableFreeMeetingRemainTimeNotifyParams& default_instance();

  static inline const DisableFreeMeetingRemainTimeNotifyParams* internal_default_instance() {
    return reinterpret_cast<const DisableFreeMeetingRemainTimeNotifyParams*>(
               &_DisableFreeMeetingRemainTimeNotifyParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(DisableFreeMeetingRemainTimeNotifyParams* other);
  friend void swap(DisableFreeMeetingRemainTimeNotifyParams& a, DisableFreeMeetingRemainTimeNotifyParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableFreeMeetingRemainTimeNotifyParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableFreeMeetingRemainTimeNotifyParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableFreeMeetingRemainTimeNotifyParams& from);
  void MergeFrom(const DisableFreeMeetingRemainTimeNotifyParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableFreeMeetingRemainTimeNotifyParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideChatItemOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideChatItemOnMeetingUIParams) */ {
 public:
  HideChatItemOnMeetingUIParams();
  virtual ~HideChatItemOnMeetingUIParams();

  HideChatItemOnMeetingUIParams(const HideChatItemOnMeetingUIParams& from);

  inline HideChatItemOnMeetingUIParams& operator=(const HideChatItemOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideChatItemOnMeetingUIParams(HideChatItemOnMeetingUIParams&& from) noexcept
    : HideChatItemOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline HideChatItemOnMeetingUIParams& operator=(HideChatItemOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideChatItemOnMeetingUIParams& default_instance();

  static inline const HideChatItemOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const HideChatItemOnMeetingUIParams*>(
               &_HideChatItemOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(HideChatItemOnMeetingUIParams* other);
  friend void swap(HideChatItemOnMeetingUIParams& a, HideChatItemOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideChatItemOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideChatItemOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideChatItemOnMeetingUIParams& from);
  void MergeFrom(const HideChatItemOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideChatItemOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideRecordItemOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams) */ {
 public:
  HideRecordItemOnMeetingUIParams();
  virtual ~HideRecordItemOnMeetingUIParams();

  HideRecordItemOnMeetingUIParams(const HideRecordItemOnMeetingUIParams& from);

  inline HideRecordItemOnMeetingUIParams& operator=(const HideRecordItemOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideRecordItemOnMeetingUIParams(HideRecordItemOnMeetingUIParams&& from) noexcept
    : HideRecordItemOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline HideRecordItemOnMeetingUIParams& operator=(HideRecordItemOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideRecordItemOnMeetingUIParams& default_instance();

  static inline const HideRecordItemOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const HideRecordItemOnMeetingUIParams*>(
               &_HideRecordItemOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(HideRecordItemOnMeetingUIParams* other);
  friend void swap(HideRecordItemOnMeetingUIParams& a, HideRecordItemOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideRecordItemOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideRecordItemOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideRecordItemOnMeetingUIParams& from);
  void MergeFrom(const HideRecordItemOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideRecordItemOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideUpgradeFreeMeetingButtonParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams) */ {
 public:
  HideUpgradeFreeMeetingButtonParams();
  virtual ~HideUpgradeFreeMeetingButtonParams();

  HideUpgradeFreeMeetingButtonParams(const HideUpgradeFreeMeetingButtonParams& from);

  inline HideUpgradeFreeMeetingButtonParams& operator=(const HideUpgradeFreeMeetingButtonParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideUpgradeFreeMeetingButtonParams(HideUpgradeFreeMeetingButtonParams&& from) noexcept
    : HideUpgradeFreeMeetingButtonParams() {
    *this = ::std::move(from);
  }

  inline HideUpgradeFreeMeetingButtonParams& operator=(HideUpgradeFreeMeetingButtonParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideUpgradeFreeMeetingButtonParams& default_instance();

  static inline const HideUpgradeFreeMeetingButtonParams* internal_default_instance() {
    return reinterpret_cast<const HideUpgradeFreeMeetingButtonParams*>(
               &_HideUpgradeFreeMeetingButtonParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(HideUpgradeFreeMeetingButtonParams* other);
  friend void swap(HideUpgradeFreeMeetingButtonParams& a, HideUpgradeFreeMeetingButtonParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideUpgradeFreeMeetingButtonParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideUpgradeFreeMeetingButtonParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideUpgradeFreeMeetingButtonParams& from);
  void MergeFrom(const HideUpgradeFreeMeetingButtonParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideUpgradeFreeMeetingButtonParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowInviteDlgTabPageParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowInviteDlgTabPageParams) */ {
 public:
  SetShowInviteDlgTabPageParams();
  virtual ~SetShowInviteDlgTabPageParams();

  SetShowInviteDlgTabPageParams(const SetShowInviteDlgTabPageParams& from);

  inline SetShowInviteDlgTabPageParams& operator=(const SetShowInviteDlgTabPageParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowInviteDlgTabPageParams(SetShowInviteDlgTabPageParams&& from) noexcept
    : SetShowInviteDlgTabPageParams() {
    *this = ::std::move(from);
  }

  inline SetShowInviteDlgTabPageParams& operator=(SetShowInviteDlgTabPageParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowInviteDlgTabPageParams& default_instance();

  static inline const SetShowInviteDlgTabPageParams* internal_default_instance() {
    return reinterpret_cast<const SetShowInviteDlgTabPageParams*>(
               &_SetShowInviteDlgTabPageParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(SetShowInviteDlgTabPageParams* other);
  friend void swap(SetShowInviteDlgTabPageParams& a, SetShowInviteDlgTabPageParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowInviteDlgTabPageParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowInviteDlgTabPageParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowInviteDlgTabPageParams& from);
  void MergeFrom(const SetShowInviteDlgTabPageParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowInviteDlgTabPageParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tabPage = 1;
  bool has_tabpage() const;
  void clear_tabpage();
  static const int kTabPageFieldNumber = 1;
  ::google::protobuf::int32 tabpage() const;
  void set_tabpage(::google::protobuf::int32 value);

  // optional bool bShow = 2;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 2;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
 private:
  void set_has_tabpage();
  void clear_has_tabpage();
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tabpage_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowH323SubTabPageParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowH323SubTabPageParams) */ {
 public:
  SetShowH323SubTabPageParams();
  virtual ~SetShowH323SubTabPageParams();

  SetShowH323SubTabPageParams(const SetShowH323SubTabPageParams& from);

  inline SetShowH323SubTabPageParams& operator=(const SetShowH323SubTabPageParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowH323SubTabPageParams(SetShowH323SubTabPageParams&& from) noexcept
    : SetShowH323SubTabPageParams() {
    *this = ::std::move(from);
  }

  inline SetShowH323SubTabPageParams& operator=(SetShowH323SubTabPageParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowH323SubTabPageParams& default_instance();

  static inline const SetShowH323SubTabPageParams* internal_default_instance() {
    return reinterpret_cast<const SetShowH323SubTabPageParams*>(
               &_SetShowH323SubTabPageParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(SetShowH323SubTabPageParams* other);
  friend void swap(SetShowH323SubTabPageParams& a, SetShowH323SubTabPageParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowH323SubTabPageParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowH323SubTabPageParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowH323SubTabPageParams& from);
  void MergeFrom(const SetShowH323SubTabPageParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowH323SubTabPageParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tabPage = 1;
  bool has_tabpage() const;
  void clear_tabpage();
  static const int kTabPageFieldNumber = 1;
  ::google::protobuf::int32 tabpage() const;
  void set_tabpage(::google::protobuf::int32 value);

  // optional bool bShow = 2;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 2;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowH323SubTabPageParams)
 private:
  void set_has_tabpage();
  void clear_has_tabpage();
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tabpage_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideUpgradeWarningMsgForFreeUserWhenScheduleParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams) */ {
 public:
  HideUpgradeWarningMsgForFreeUserWhenScheduleParams();
  virtual ~HideUpgradeWarningMsgForFreeUserWhenScheduleParams();

  HideUpgradeWarningMsgForFreeUserWhenScheduleParams(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from);

  inline HideUpgradeWarningMsgForFreeUserWhenScheduleParams& operator=(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideUpgradeWarningMsgForFreeUserWhenScheduleParams(HideUpgradeWarningMsgForFreeUserWhenScheduleParams&& from) noexcept
    : HideUpgradeWarningMsgForFreeUserWhenScheduleParams() {
    *this = ::std::move(from);
  }

  inline HideUpgradeWarningMsgForFreeUserWhenScheduleParams& operator=(HideUpgradeWarningMsgForFreeUserWhenScheduleParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& default_instance();

  static inline const HideUpgradeWarningMsgForFreeUserWhenScheduleParams* internal_default_instance() {
    return reinterpret_cast<const HideUpgradeWarningMsgForFreeUserWhenScheduleParams*>(
               &_HideUpgradeWarningMsgForFreeUserWhenScheduleParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(HideUpgradeWarningMsgForFreeUserWhenScheduleParams* other);
  friend void swap(HideUpgradeWarningMsgForFreeUserWhenScheduleParams& a, HideUpgradeWarningMsgForFreeUserWhenScheduleParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideUpgradeWarningMsgForFreeUserWhenScheduleParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideUpgradeWarningMsgForFreeUserWhenScheduleParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from);
  void MergeFrom(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideUpgradeWarningMsgForFreeUserWhenScheduleParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideSwitchCameraButtonParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideSwitchCameraButtonParams) */ {
 public:
  HideSwitchCameraButtonParams();
  virtual ~HideSwitchCameraButtonParams();

  HideSwitchCameraButtonParams(const HideSwitchCameraButtonParams& from);

  inline HideSwitchCameraButtonParams& operator=(const HideSwitchCameraButtonParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideSwitchCameraButtonParams(HideSwitchCameraButtonParams&& from) noexcept
    : HideSwitchCameraButtonParams() {
    *this = ::std::move(from);
  }

  inline HideSwitchCameraButtonParams& operator=(HideSwitchCameraButtonParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideSwitchCameraButtonParams& default_instance();

  static inline const HideSwitchCameraButtonParams* internal_default_instance() {
    return reinterpret_cast<const HideSwitchCameraButtonParams*>(
               &_HideSwitchCameraButtonParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(HideSwitchCameraButtonParams* other);
  friend void swap(HideSwitchCameraButtonParams& a, HideSwitchCameraButtonParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideSwitchCameraButtonParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideSwitchCameraButtonParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideSwitchCameraButtonParams& from);
  void MergeFrom(const HideSwitchCameraButtonParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideSwitchCameraButtonParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideSwitchCameraButtonParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideCopyUrlOnInviteWindowParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams) */ {
 public:
  HideCopyUrlOnInviteWindowParams();
  virtual ~HideCopyUrlOnInviteWindowParams();

  HideCopyUrlOnInviteWindowParams(const HideCopyUrlOnInviteWindowParams& from);

  inline HideCopyUrlOnInviteWindowParams& operator=(const HideCopyUrlOnInviteWindowParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideCopyUrlOnInviteWindowParams(HideCopyUrlOnInviteWindowParams&& from) noexcept
    : HideCopyUrlOnInviteWindowParams() {
    *this = ::std::move(from);
  }

  inline HideCopyUrlOnInviteWindowParams& operator=(HideCopyUrlOnInviteWindowParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideCopyUrlOnInviteWindowParams& default_instance();

  static inline const HideCopyUrlOnInviteWindowParams* internal_default_instance() {
    return reinterpret_cast<const HideCopyUrlOnInviteWindowParams*>(
               &_HideCopyUrlOnInviteWindowParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(HideCopyUrlOnInviteWindowParams* other);
  friend void swap(HideCopyUrlOnInviteWindowParams& a, HideCopyUrlOnInviteWindowParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideCopyUrlOnInviteWindowParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideCopyUrlOnInviteWindowParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideCopyUrlOnInviteWindowParams& from);
  void MergeFrom(const HideCopyUrlOnInviteWindowParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideCopyUrlOnInviteWindowParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideCopyInvitationOnInviteWindowParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams) */ {
 public:
  HideCopyInvitationOnInviteWindowParams();
  virtual ~HideCopyInvitationOnInviteWindowParams();

  HideCopyInvitationOnInviteWindowParams(const HideCopyInvitationOnInviteWindowParams& from);

  inline HideCopyInvitationOnInviteWindowParams& operator=(const HideCopyInvitationOnInviteWindowParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideCopyInvitationOnInviteWindowParams(HideCopyInvitationOnInviteWindowParams&& from) noexcept
    : HideCopyInvitationOnInviteWindowParams() {
    *this = ::std::move(from);
  }

  inline HideCopyInvitationOnInviteWindowParams& operator=(HideCopyInvitationOnInviteWindowParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideCopyInvitationOnInviteWindowParams& default_instance();

  static inline const HideCopyInvitationOnInviteWindowParams* internal_default_instance() {
    return reinterpret_cast<const HideCopyInvitationOnInviteWindowParams*>(
               &_HideCopyInvitationOnInviteWindowParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(HideCopyInvitationOnInviteWindowParams* other);
  friend void swap(HideCopyInvitationOnInviteWindowParams& a, HideCopyInvitationOnInviteWindowParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideCopyInvitationOnInviteWindowParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideCopyInvitationOnInviteWindowParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideCopyInvitationOnInviteWindowParams& from);
  void MergeFrom(const HideCopyInvitationOnInviteWindowParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideCopyInvitationOnInviteWindowParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideKeypadButtonOnMeetingWindowParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams) */ {
 public:
  HideKeypadButtonOnMeetingWindowParams();
  virtual ~HideKeypadButtonOnMeetingWindowParams();

  HideKeypadButtonOnMeetingWindowParams(const HideKeypadButtonOnMeetingWindowParams& from);

  inline HideKeypadButtonOnMeetingWindowParams& operator=(const HideKeypadButtonOnMeetingWindowParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideKeypadButtonOnMeetingWindowParams(HideKeypadButtonOnMeetingWindowParams&& from) noexcept
    : HideKeypadButtonOnMeetingWindowParams() {
    *this = ::std::move(from);
  }

  inline HideKeypadButtonOnMeetingWindowParams& operator=(HideKeypadButtonOnMeetingWindowParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideKeypadButtonOnMeetingWindowParams& default_instance();

  static inline const HideKeypadButtonOnMeetingWindowParams* internal_default_instance() {
    return reinterpret_cast<const HideKeypadButtonOnMeetingWindowParams*>(
               &_HideKeypadButtonOnMeetingWindowParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(HideKeypadButtonOnMeetingWindowParams* other);
  friend void swap(HideKeypadButtonOnMeetingWindowParams& a, HideKeypadButtonOnMeetingWindowParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideKeypadButtonOnMeetingWindowParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideKeypadButtonOnMeetingWindowParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideKeypadButtonOnMeetingWindowParams& from);
  void MergeFrom(const HideKeypadButtonOnMeetingWindowParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideKeypadButtonOnMeetingWindowParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideRemoteControlOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams) */ {
 public:
  HideRemoteControlOnMeetingUIParams();
  virtual ~HideRemoteControlOnMeetingUIParams();

  HideRemoteControlOnMeetingUIParams(const HideRemoteControlOnMeetingUIParams& from);

  inline HideRemoteControlOnMeetingUIParams& operator=(const HideRemoteControlOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideRemoteControlOnMeetingUIParams(HideRemoteControlOnMeetingUIParams&& from) noexcept
    : HideRemoteControlOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline HideRemoteControlOnMeetingUIParams& operator=(HideRemoteControlOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideRemoteControlOnMeetingUIParams& default_instance();

  static inline const HideRemoteControlOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const HideRemoteControlOnMeetingUIParams*>(
               &_HideRemoteControlOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(HideRemoteControlOnMeetingUIParams* other);
  friend void swap(HideRemoteControlOnMeetingUIParams& a, HideRemoteControlOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideRemoteControlOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideRemoteControlOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideRemoteControlOnMeetingUIParams& from);
  void MergeFrom(const HideRemoteControlOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideRemoteControlOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideQAOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideQAOnMeetingUIParams) */ {
 public:
  HideQAOnMeetingUIParams();
  virtual ~HideQAOnMeetingUIParams();

  HideQAOnMeetingUIParams(const HideQAOnMeetingUIParams& from);

  inline HideQAOnMeetingUIParams& operator=(const HideQAOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideQAOnMeetingUIParams(HideQAOnMeetingUIParams&& from) noexcept
    : HideQAOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline HideQAOnMeetingUIParams& operator=(HideQAOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideQAOnMeetingUIParams& default_instance();

  static inline const HideQAOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const HideQAOnMeetingUIParams*>(
               &_HideQAOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(HideQAOnMeetingUIParams* other);
  friend void swap(HideQAOnMeetingUIParams& a, HideQAOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideQAOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideQAOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideQAOnMeetingUIParams& from);
  void MergeFrom(const HideQAOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideQAOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideQAOnMeetingUIParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HidePollOnMeetingUIParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HidePollOnMeetingUIParams) */ {
 public:
  HidePollOnMeetingUIParams();
  virtual ~HidePollOnMeetingUIParams();

  HidePollOnMeetingUIParams(const HidePollOnMeetingUIParams& from);

  inline HidePollOnMeetingUIParams& operator=(const HidePollOnMeetingUIParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HidePollOnMeetingUIParams(HidePollOnMeetingUIParams&& from) noexcept
    : HidePollOnMeetingUIParams() {
    *this = ::std::move(from);
  }

  inline HidePollOnMeetingUIParams& operator=(HidePollOnMeetingUIParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HidePollOnMeetingUIParams& default_instance();

  static inline const HidePollOnMeetingUIParams* internal_default_instance() {
    return reinterpret_cast<const HidePollOnMeetingUIParams*>(
               &_HidePollOnMeetingUIParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(HidePollOnMeetingUIParams* other);
  friend void swap(HidePollOnMeetingUIParams& a, HidePollOnMeetingUIParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HidePollOnMeetingUIParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HidePollOnMeetingUIParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HidePollOnMeetingUIParams& from);
  void MergeFrom(const HidePollOnMeetingUIParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HidePollOnMeetingUIParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HidePollOnMeetingUIParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableInputMeetingPasswordDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams) */ {
 public:
  EnableInputMeetingPasswordDlgParams();
  virtual ~EnableInputMeetingPasswordDlgParams();

  EnableInputMeetingPasswordDlgParams(const EnableInputMeetingPasswordDlgParams& from);

  inline EnableInputMeetingPasswordDlgParams& operator=(const EnableInputMeetingPasswordDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableInputMeetingPasswordDlgParams(EnableInputMeetingPasswordDlgParams&& from) noexcept
    : EnableInputMeetingPasswordDlgParams() {
    *this = ::std::move(from);
  }

  inline EnableInputMeetingPasswordDlgParams& operator=(EnableInputMeetingPasswordDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableInputMeetingPasswordDlgParams& default_instance();

  static inline const EnableInputMeetingPasswordDlgParams* internal_default_instance() {
    return reinterpret_cast<const EnableInputMeetingPasswordDlgParams*>(
               &_EnableInputMeetingPasswordDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(EnableInputMeetingPasswordDlgParams* other);
  friend void swap(EnableInputMeetingPasswordDlgParams& a, EnableInputMeetingPasswordDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableInputMeetingPasswordDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableInputMeetingPasswordDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableInputMeetingPasswordDlgParams& from);
  void MergeFrom(const EnableInputMeetingPasswordDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableInputMeetingPasswordDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableInputMeetingScreenNameDlgParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams) */ {
 public:
  EnableInputMeetingScreenNameDlgParams();
  virtual ~EnableInputMeetingScreenNameDlgParams();

  EnableInputMeetingScreenNameDlgParams(const EnableInputMeetingScreenNameDlgParams& from);

  inline EnableInputMeetingScreenNameDlgParams& operator=(const EnableInputMeetingScreenNameDlgParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableInputMeetingScreenNameDlgParams(EnableInputMeetingScreenNameDlgParams&& from) noexcept
    : EnableInputMeetingScreenNameDlgParams() {
    *this = ::std::move(from);
  }

  inline EnableInputMeetingScreenNameDlgParams& operator=(EnableInputMeetingScreenNameDlgParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableInputMeetingScreenNameDlgParams& default_instance();

  static inline const EnableInputMeetingScreenNameDlgParams* internal_default_instance() {
    return reinterpret_cast<const EnableInputMeetingScreenNameDlgParams*>(
               &_EnableInputMeetingScreenNameDlgParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(EnableInputMeetingScreenNameDlgParams* other);
  friend void swap(EnableInputMeetingScreenNameDlgParams& a, EnableInputMeetingScreenNameDlgParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableInputMeetingScreenNameDlgParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableInputMeetingScreenNameDlgParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableInputMeetingScreenNameDlgParams& from);
  void MergeFrom(const EnableInputMeetingScreenNameDlgParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableInputMeetingScreenNameDlgParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectWebinarNeedRegisterParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams) */ {
 public:
  RedirectWebinarNeedRegisterParams();
  virtual ~RedirectWebinarNeedRegisterParams();

  RedirectWebinarNeedRegisterParams(const RedirectWebinarNeedRegisterParams& from);

  inline RedirectWebinarNeedRegisterParams& operator=(const RedirectWebinarNeedRegisterParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectWebinarNeedRegisterParams(RedirectWebinarNeedRegisterParams&& from) noexcept
    : RedirectWebinarNeedRegisterParams() {
    *this = ::std::move(from);
  }

  inline RedirectWebinarNeedRegisterParams& operator=(RedirectWebinarNeedRegisterParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectWebinarNeedRegisterParams& default_instance();

  static inline const RedirectWebinarNeedRegisterParams* internal_default_instance() {
    return reinterpret_cast<const RedirectWebinarNeedRegisterParams*>(
               &_RedirectWebinarNeedRegisterParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(RedirectWebinarNeedRegisterParams* other);
  friend void swap(RedirectWebinarNeedRegisterParams& a, RedirectWebinarNeedRegisterParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectWebinarNeedRegisterParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectWebinarNeedRegisterParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectWebinarNeedRegisterParams& from);
  void MergeFrom(const RedirectWebinarNeedRegisterParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectWebinarNeedRegisterParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectEndOtherMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RedirectEndOtherMeetingParams) */ {
 public:
  RedirectEndOtherMeetingParams();
  virtual ~RedirectEndOtherMeetingParams();

  RedirectEndOtherMeetingParams(const RedirectEndOtherMeetingParams& from);

  inline RedirectEndOtherMeetingParams& operator=(const RedirectEndOtherMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectEndOtherMeetingParams(RedirectEndOtherMeetingParams&& from) noexcept
    : RedirectEndOtherMeetingParams() {
    *this = ::std::move(from);
  }

  inline RedirectEndOtherMeetingParams& operator=(RedirectEndOtherMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RedirectEndOtherMeetingParams& default_instance();

  static inline const RedirectEndOtherMeetingParams* internal_default_instance() {
    return reinterpret_cast<const RedirectEndOtherMeetingParams*>(
               &_RedirectEndOtherMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(RedirectEndOtherMeetingParams* other);
  friend void swap(RedirectEndOtherMeetingParams& a, RedirectEndOtherMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectEndOtherMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectEndOtherMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RedirectEndOtherMeetingParams& from);
  void MergeFrom(const RedirectEndOtherMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedirectEndOtherMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bRedirect = 1;
  bool has_bredirect() const;
  void clear_bredirect();
  static const int kBRedirectFieldNumber = 1;
  bool bredirect() const;
  void set_bredirect(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
 private:
  void set_has_bredirect();
  void clear_has_bredirect();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bredirect_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableForceAutoStartMyVideoWhenJoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams) */ {
 public:
  EnableForceAutoStartMyVideoWhenJoinMeetingParams();
  virtual ~EnableForceAutoStartMyVideoWhenJoinMeetingParams();

  EnableForceAutoStartMyVideoWhenJoinMeetingParams(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from);

  inline EnableForceAutoStartMyVideoWhenJoinMeetingParams& operator=(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableForceAutoStartMyVideoWhenJoinMeetingParams(EnableForceAutoStartMyVideoWhenJoinMeetingParams&& from) noexcept
    : EnableForceAutoStartMyVideoWhenJoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableForceAutoStartMyVideoWhenJoinMeetingParams& operator=(EnableForceAutoStartMyVideoWhenJoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableForceAutoStartMyVideoWhenJoinMeetingParams& default_instance();

  static inline const EnableForceAutoStartMyVideoWhenJoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableForceAutoStartMyVideoWhenJoinMeetingParams*>(
               &_EnableForceAutoStartMyVideoWhenJoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(EnableForceAutoStartMyVideoWhenJoinMeetingParams* other);
  friend void swap(EnableForceAutoStartMyVideoWhenJoinMeetingParams& a, EnableForceAutoStartMyVideoWhenJoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableForceAutoStartMyVideoWhenJoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableForceAutoStartMyVideoWhenJoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from);
  void MergeFrom(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableForceAutoStartMyVideoWhenJoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableForceAutoStopMyVideoWhenJoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams) */ {
 public:
  EnableForceAutoStopMyVideoWhenJoinMeetingParams();
  virtual ~EnableForceAutoStopMyVideoWhenJoinMeetingParams();

  EnableForceAutoStopMyVideoWhenJoinMeetingParams(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from);

  inline EnableForceAutoStopMyVideoWhenJoinMeetingParams& operator=(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableForceAutoStopMyVideoWhenJoinMeetingParams(EnableForceAutoStopMyVideoWhenJoinMeetingParams&& from) noexcept
    : EnableForceAutoStopMyVideoWhenJoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableForceAutoStopMyVideoWhenJoinMeetingParams& operator=(EnableForceAutoStopMyVideoWhenJoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableForceAutoStopMyVideoWhenJoinMeetingParams& default_instance();

  static inline const EnableForceAutoStopMyVideoWhenJoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableForceAutoStopMyVideoWhenJoinMeetingParams*>(
               &_EnableForceAutoStopMyVideoWhenJoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(EnableForceAutoStopMyVideoWhenJoinMeetingParams* other);
  friend void swap(EnableForceAutoStopMyVideoWhenJoinMeetingParams& a, EnableForceAutoStopMyVideoWhenJoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableForceAutoStopMyVideoWhenJoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableForceAutoStopMyVideoWhenJoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from);
  void MergeFrom(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableForceAutoStopMyVideoWhenJoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams) */ {
 public:
  DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams();
  virtual ~DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams();

  DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from);

  inline DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& operator=(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams&& from) noexcept
    : DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& operator=(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& default_instance();

  static inline const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams*>(
               &_DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* other);
  friend void swap(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& a, DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from);
  void MergeFrom(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableShowJoinMeetingWndParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableShowJoinMeetingWndParams) */ {
 public:
  DisableShowJoinMeetingWndParams();
  virtual ~DisableShowJoinMeetingWndParams();

  DisableShowJoinMeetingWndParams(const DisableShowJoinMeetingWndParams& from);

  inline DisableShowJoinMeetingWndParams& operator=(const DisableShowJoinMeetingWndParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableShowJoinMeetingWndParams(DisableShowJoinMeetingWndParams&& from) noexcept
    : DisableShowJoinMeetingWndParams() {
    *this = ::std::move(from);
  }

  inline DisableShowJoinMeetingWndParams& operator=(DisableShowJoinMeetingWndParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableShowJoinMeetingWndParams& default_instance();

  static inline const DisableShowJoinMeetingWndParams* internal_default_instance() {
    return reinterpret_cast<const DisableShowJoinMeetingWndParams*>(
               &_DisableShowJoinMeetingWndParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(DisableShowJoinMeetingWndParams* other);
  friend void swap(DisableShowJoinMeetingWndParams& a, DisableShowJoinMeetingWndParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableShowJoinMeetingWndParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableShowJoinMeetingWndParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableShowJoinMeetingWndParams& from);
  void MergeFrom(const DisableShowJoinMeetingWndParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableShowJoinMeetingWndParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableConfidentialWatermarkParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableConfidentialWatermarkParams) */ {
 public:
  DisableConfidentialWatermarkParams();
  virtual ~DisableConfidentialWatermarkParams();

  DisableConfidentialWatermarkParams(const DisableConfidentialWatermarkParams& from);

  inline DisableConfidentialWatermarkParams& operator=(const DisableConfidentialWatermarkParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableConfidentialWatermarkParams(DisableConfidentialWatermarkParams&& from) noexcept
    : DisableConfidentialWatermarkParams() {
    *this = ::std::move(from);
  }

  inline DisableConfidentialWatermarkParams& operator=(DisableConfidentialWatermarkParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableConfidentialWatermarkParams& default_instance();

  static inline const DisableConfidentialWatermarkParams* internal_default_instance() {
    return reinterpret_cast<const DisableConfidentialWatermarkParams*>(
               &_DisableConfidentialWatermarkParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(DisableConfidentialWatermarkParams* other);
  friend void swap(DisableConfidentialWatermarkParams& a, DisableConfidentialWatermarkParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableConfidentialWatermarkParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableConfidentialWatermarkParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableConfidentialWatermarkParams& from);
  void MergeFrom(const DisableConfidentialWatermarkParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableConfidentialWatermarkParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableRemoteCtrlCopyPasteFeatureParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams) */ {
 public:
  DisableRemoteCtrlCopyPasteFeatureParams();
  virtual ~DisableRemoteCtrlCopyPasteFeatureParams();

  DisableRemoteCtrlCopyPasteFeatureParams(const DisableRemoteCtrlCopyPasteFeatureParams& from);

  inline DisableRemoteCtrlCopyPasteFeatureParams& operator=(const DisableRemoteCtrlCopyPasteFeatureParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableRemoteCtrlCopyPasteFeatureParams(DisableRemoteCtrlCopyPasteFeatureParams&& from) noexcept
    : DisableRemoteCtrlCopyPasteFeatureParams() {
    *this = ::std::move(from);
  }

  inline DisableRemoteCtrlCopyPasteFeatureParams& operator=(DisableRemoteCtrlCopyPasteFeatureParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableRemoteCtrlCopyPasteFeatureParams& default_instance();

  static inline const DisableRemoteCtrlCopyPasteFeatureParams* internal_default_instance() {
    return reinterpret_cast<const DisableRemoteCtrlCopyPasteFeatureParams*>(
               &_DisableRemoteCtrlCopyPasteFeatureParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(DisableRemoteCtrlCopyPasteFeatureParams* other);
  friend void swap(DisableRemoteCtrlCopyPasteFeatureParams& a, DisableRemoteCtrlCopyPasteFeatureParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableRemoteCtrlCopyPasteFeatureParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableRemoteCtrlCopyPasteFeatureParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableRemoteCtrlCopyPasteFeatureParams& from);
  void MergeFrom(const DisableRemoteCtrlCopyPasteFeatureParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableRemoteCtrlCopyPasteFeatureParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableToolbarInviteButtonClickOriginActionParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams) */ {
 public:
  DisableToolbarInviteButtonClickOriginActionParams();
  virtual ~DisableToolbarInviteButtonClickOriginActionParams();

  DisableToolbarInviteButtonClickOriginActionParams(const DisableToolbarInviteButtonClickOriginActionParams& from);

  inline DisableToolbarInviteButtonClickOriginActionParams& operator=(const DisableToolbarInviteButtonClickOriginActionParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableToolbarInviteButtonClickOriginActionParams(DisableToolbarInviteButtonClickOriginActionParams&& from) noexcept
    : DisableToolbarInviteButtonClickOriginActionParams() {
    *this = ::std::move(from);
  }

  inline DisableToolbarInviteButtonClickOriginActionParams& operator=(DisableToolbarInviteButtonClickOriginActionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableToolbarInviteButtonClickOriginActionParams& default_instance();

  static inline const DisableToolbarInviteButtonClickOriginActionParams* internal_default_instance() {
    return reinterpret_cast<const DisableToolbarInviteButtonClickOriginActionParams*>(
               &_DisableToolbarInviteButtonClickOriginActionParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(DisableToolbarInviteButtonClickOriginActionParams* other);
  friend void swap(DisableToolbarInviteButtonClickOriginActionParams& a, DisableToolbarInviteButtonClickOriginActionParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableToolbarInviteButtonClickOriginActionParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableToolbarInviteButtonClickOriginActionParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableToolbarInviteButtonClickOriginActionParams& from);
  void MergeFrom(const DisableToolbarInviteButtonClickOriginActionParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableToolbarInviteButtonClickOriginActionParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetShowVideoOptimizeChkboxParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams) */ {
 public:
  SetShowVideoOptimizeChkboxParams();
  virtual ~SetShowVideoOptimizeChkboxParams();

  SetShowVideoOptimizeChkboxParams(const SetShowVideoOptimizeChkboxParams& from);

  inline SetShowVideoOptimizeChkboxParams& operator=(const SetShowVideoOptimizeChkboxParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetShowVideoOptimizeChkboxParams(SetShowVideoOptimizeChkboxParams&& from) noexcept
    : SetShowVideoOptimizeChkboxParams() {
    *this = ::std::move(from);
  }

  inline SetShowVideoOptimizeChkboxParams& operator=(SetShowVideoOptimizeChkboxParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetShowVideoOptimizeChkboxParams& default_instance();

  static inline const SetShowVideoOptimizeChkboxParams* internal_default_instance() {
    return reinterpret_cast<const SetShowVideoOptimizeChkboxParams*>(
               &_SetShowVideoOptimizeChkboxParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(SetShowVideoOptimizeChkboxParams* other);
  friend void swap(SetShowVideoOptimizeChkboxParams& a, SetShowVideoOptimizeChkboxParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetShowVideoOptimizeChkboxParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetShowVideoOptimizeChkboxParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetShowVideoOptimizeChkboxParams& from);
  void MergeFrom(const SetShowVideoOptimizeChkboxParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetShowVideoOptimizeChkboxParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  bool has_bshow() const;
  void clear_bshow();
  static const int kBShowFieldNumber = 1;
  bool bshow() const;
  void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
 private:
  void set_has_bshow();
  void clear_has_bshow();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bshow_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputMeetingPasswordAndScreenNameParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams) */ {
 public:
  InputMeetingPasswordAndScreenNameParams();
  virtual ~InputMeetingPasswordAndScreenNameParams();

  InputMeetingPasswordAndScreenNameParams(const InputMeetingPasswordAndScreenNameParams& from);

  inline InputMeetingPasswordAndScreenNameParams& operator=(const InputMeetingPasswordAndScreenNameParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputMeetingPasswordAndScreenNameParams(InputMeetingPasswordAndScreenNameParams&& from) noexcept
    : InputMeetingPasswordAndScreenNameParams() {
    *this = ::std::move(from);
  }

  inline InputMeetingPasswordAndScreenNameParams& operator=(InputMeetingPasswordAndScreenNameParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputMeetingPasswordAndScreenNameParams& default_instance();

  static inline const InputMeetingPasswordAndScreenNameParams* internal_default_instance() {
    return reinterpret_cast<const InputMeetingPasswordAndScreenNameParams*>(
               &_InputMeetingPasswordAndScreenNameParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(InputMeetingPasswordAndScreenNameParams* other);
  friend void swap(InputMeetingPasswordAndScreenNameParams& a, InputMeetingPasswordAndScreenNameParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputMeetingPasswordAndScreenNameParams* New() const PROTOBUF_FINAL { return New(NULL); }

  InputMeetingPasswordAndScreenNameParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InputMeetingPasswordAndScreenNameParams& from);
  void MergeFrom(const InputMeetingPasswordAndScreenNameParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputMeetingPasswordAndScreenNameParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string psw = 1;
  bool has_psw() const;
  void clear_psw();
  static const int kPswFieldNumber = 1;
  const ::std::string& psw() const;
  void set_psw(const ::std::string& value);
  #if LANG_CXX11
  void set_psw(::std::string&& value);
  #endif
  void set_psw(const char* value);
  void set_psw(const char* value, size_t size);
  ::std::string* mutable_psw();
  ::std::string* release_psw();
  void set_allocated_psw(::std::string* psw);

  // optional string screenName = 2;
  bool has_screenname() const;
  void clear_screenname();
  static const int kScreenNameFieldNumber = 2;
  const ::std::string& screenname() const;
  void set_screenname(const ::std::string& value);
  #if LANG_CXX11
  void set_screenname(::std::string&& value);
  #endif
  void set_screenname(const char* value);
  void set_screenname(const char* value, size_t size);
  ::std::string* mutable_screenname();
  ::std::string* release_screenname();
  void set_allocated_screenname(::std::string* screenname);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
 private:
  void set_has_psw();
  void clear_has_psw();
  void set_has_screenname();
  void clear_has_screenname();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr psw_;
  ::google::protobuf::internal::ArenaStringPtr screenname_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputMeetingIDAndScreenNameParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams) */ {
 public:
  InputMeetingIDAndScreenNameParams();
  virtual ~InputMeetingIDAndScreenNameParams();

  InputMeetingIDAndScreenNameParams(const InputMeetingIDAndScreenNameParams& from);

  inline InputMeetingIDAndScreenNameParams& operator=(const InputMeetingIDAndScreenNameParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputMeetingIDAndScreenNameParams(InputMeetingIDAndScreenNameParams&& from) noexcept
    : InputMeetingIDAndScreenNameParams() {
    *this = ::std::move(from);
  }

  inline InputMeetingIDAndScreenNameParams& operator=(InputMeetingIDAndScreenNameParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputMeetingIDAndScreenNameParams& default_instance();

  static inline const InputMeetingIDAndScreenNameParams* internal_default_instance() {
    return reinterpret_cast<const InputMeetingIDAndScreenNameParams*>(
               &_InputMeetingIDAndScreenNameParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(InputMeetingIDAndScreenNameParams* other);
  friend void swap(InputMeetingIDAndScreenNameParams& a, InputMeetingIDAndScreenNameParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputMeetingIDAndScreenNameParams* New() const PROTOBUF_FINAL { return New(NULL); }

  InputMeetingIDAndScreenNameParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InputMeetingIDAndScreenNameParams& from);
  void MergeFrom(const InputMeetingIDAndScreenNameParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputMeetingIDAndScreenNameParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string meetingID = 1;
  bool has_meetingid() const;
  void clear_meetingid();
  static const int kMeetingIDFieldNumber = 1;
  const ::std::string& meetingid() const;
  void set_meetingid(const ::std::string& value);
  #if LANG_CXX11
  void set_meetingid(::std::string&& value);
  #endif
  void set_meetingid(const char* value);
  void set_meetingid(const char* value, size_t size);
  ::std::string* mutable_meetingid();
  ::std::string* release_meetingid();
  void set_allocated_meetingid(::std::string* meetingid);

  // optional string screenName = 2;
  bool has_screenname() const;
  void clear_screenname();
  static const int kScreenNameFieldNumber = 2;
  const ::std::string& screenname() const;
  void set_screenname(const ::std::string& value);
  #if LANG_CXX11
  void set_screenname(::std::string&& value);
  #endif
  void set_screenname(const char* value);
  void set_screenname(const char* value, size_t size);
  ::std::string* mutable_screenname();
  ::std::string* release_screenname();
  void set_allocated_screenname(::std::string* screenname);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
 private:
  void set_has_meetingid();
  void clear_has_meetingid();
  void set_has_screenname();
  void clear_has_screenname();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr meetingid_;
  ::google::protobuf::internal::ArenaStringPtr screenname_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputMeetingScreenNameParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.InputMeetingScreenNameParams) */ {
 public:
  InputMeetingScreenNameParams();
  virtual ~InputMeetingScreenNameParams();

  InputMeetingScreenNameParams(const InputMeetingScreenNameParams& from);

  inline InputMeetingScreenNameParams& operator=(const InputMeetingScreenNameParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputMeetingScreenNameParams(InputMeetingScreenNameParams&& from) noexcept
    : InputMeetingScreenNameParams() {
    *this = ::std::move(from);
  }

  inline InputMeetingScreenNameParams& operator=(InputMeetingScreenNameParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputMeetingScreenNameParams& default_instance();

  static inline const InputMeetingScreenNameParams* internal_default_instance() {
    return reinterpret_cast<const InputMeetingScreenNameParams*>(
               &_InputMeetingScreenNameParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(InputMeetingScreenNameParams* other);
  friend void swap(InputMeetingScreenNameParams& a, InputMeetingScreenNameParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputMeetingScreenNameParams* New() const PROTOBUF_FINAL { return New(NULL); }

  InputMeetingScreenNameParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InputMeetingScreenNameParams& from);
  void MergeFrom(const InputMeetingScreenNameParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputMeetingScreenNameParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string screenName = 1;
  bool has_screenname() const;
  void clear_screenname();
  static const int kScreenNameFieldNumber = 1;
  const ::std::string& screenname() const;
  void set_screenname(const ::std::string& value);
  #if LANG_CXX11
  void set_screenname(::std::string&& value);
  #endif
  void set_screenname(const char* value);
  void set_screenname(const char* value, size_t size);
  ::std::string* mutable_screenname();
  ::std::string* release_screenname();
  void set_allocated_screenname(::std::string* screenname);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.InputMeetingScreenNameParams)
 private:
  void set_has_screenname();
  void clear_has_screenname();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr screenname_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputWebinarRegisterEmailAndScreenNameParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams) */ {
 public:
  InputWebinarRegisterEmailAndScreenNameParams();
  virtual ~InputWebinarRegisterEmailAndScreenNameParams();

  InputWebinarRegisterEmailAndScreenNameParams(const InputWebinarRegisterEmailAndScreenNameParams& from);

  inline InputWebinarRegisterEmailAndScreenNameParams& operator=(const InputWebinarRegisterEmailAndScreenNameParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputWebinarRegisterEmailAndScreenNameParams(InputWebinarRegisterEmailAndScreenNameParams&& from) noexcept
    : InputWebinarRegisterEmailAndScreenNameParams() {
    *this = ::std::move(from);
  }

  inline InputWebinarRegisterEmailAndScreenNameParams& operator=(InputWebinarRegisterEmailAndScreenNameParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputWebinarRegisterEmailAndScreenNameParams& default_instance();

  static inline const InputWebinarRegisterEmailAndScreenNameParams* internal_default_instance() {
    return reinterpret_cast<const InputWebinarRegisterEmailAndScreenNameParams*>(
               &_InputWebinarRegisterEmailAndScreenNameParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(InputWebinarRegisterEmailAndScreenNameParams* other);
  friend void swap(InputWebinarRegisterEmailAndScreenNameParams& a, InputWebinarRegisterEmailAndScreenNameParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputWebinarRegisterEmailAndScreenNameParams* New() const PROTOBUF_FINAL { return New(NULL); }

  InputWebinarRegisterEmailAndScreenNameParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const InputWebinarRegisterEmailAndScreenNameParams& from);
  void MergeFrom(const InputWebinarRegisterEmailAndScreenNameParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputWebinarRegisterEmailAndScreenNameParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string screenName = 2;
  bool has_screenname() const;
  void clear_screenname();
  static const int kScreenNameFieldNumber = 2;
  const ::std::string& screenname() const;
  void set_screenname(const ::std::string& value);
  #if LANG_CXX11
  void set_screenname(::std::string&& value);
  #endif
  void set_screenname(const char* value);
  void set_screenname(const char* value, size_t size);
  ::std::string* mutable_screenname();
  ::std::string* release_screenname();
  void set_allocated_screenname(::std::string* screenname);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
 private:
  void set_has_email();
  void clear_has_email();
  void set_has_screenname();
  void clear_has_screenname();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr screenname_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CallOutH323Params : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.CallOutH323Params) */ {
 public:
  CallOutH323Params();
  virtual ~CallOutH323Params();

  CallOutH323Params(const CallOutH323Params& from);

  inline CallOutH323Params& operator=(const CallOutH323Params& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CallOutH323Params(CallOutH323Params&& from) noexcept
    : CallOutH323Params() {
    *this = ::std::move(from);
  }

  inline CallOutH323Params& operator=(CallOutH323Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const CallOutH323Params& default_instance();

  static inline const CallOutH323Params* internal_default_instance() {
    return reinterpret_cast<const CallOutH323Params*>(
               &_CallOutH323Params_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(CallOutH323Params* other);
  friend void swap(CallOutH323Params& a, CallOutH323Params& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CallOutH323Params* New() const PROTOBUF_FINAL { return New(NULL); }

  CallOutH323Params* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CallOutH323Params& from);
  void MergeFrom(const CallOutH323Params& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CallOutH323Params* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceName = 1;
  bool has_devicename() const;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 1;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // optional string deviceIP = 2;
  bool has_deviceip() const;
  void clear_deviceip();
  static const int kDeviceIPFieldNumber = 2;
  const ::std::string& deviceip() const;
  void set_deviceip(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceip(::std::string&& value);
  #endif
  void set_deviceip(const char* value);
  void set_deviceip(const char* value, size_t size);
  ::std::string* mutable_deviceip();
  ::std::string* release_deviceip();
  void set_allocated_deviceip(::std::string* deviceip);

  // optional string deviceE164num = 3;
  bool has_devicee164num() const;
  void clear_devicee164num();
  static const int kDeviceE164NumFieldNumber = 3;
  const ::std::string& devicee164num() const;
  void set_devicee164num(const ::std::string& value);
  #if LANG_CXX11
  void set_devicee164num(::std::string&& value);
  #endif
  void set_devicee164num(const char* value);
  void set_devicee164num(const char* value, size_t size);
  ::std::string* mutable_devicee164num();
  ::std::string* release_devicee164num();
  void set_allocated_devicee164num(::std::string* devicee164num);

  // optional int32 h323DeviceType = 4;
  bool has_h323devicetype() const;
  void clear_h323devicetype();
  static const int kH323DeviceTypeFieldNumber = 4;
  ::google::protobuf::int32 h323devicetype() const;
  void set_h323devicetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.CallOutH323Params)
 private:
  void set_has_devicename();
  void clear_has_devicename();
  void set_has_deviceip();
  void clear_has_deviceip();
  void set_has_devicee164num();
  void clear_has_devicee164num();
  void set_has_h323devicetype();
  void clear_has_h323devicetype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  ::google::protobuf::internal::ArenaStringPtr deviceip_;
  ::google::protobuf::internal::ArenaStringPtr devicee164num_;
  ::google::protobuf::int32 h323devicetype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserInfoByUserIDParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.GetUserInfoByUserIDParams) */ {
 public:
  GetUserInfoByUserIDParams();
  virtual ~GetUserInfoByUserIDParams();

  GetUserInfoByUserIDParams(const GetUserInfoByUserIDParams& from);

  inline GetUserInfoByUserIDParams& operator=(const GetUserInfoByUserIDParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserInfoByUserIDParams(GetUserInfoByUserIDParams&& from) noexcept
    : GetUserInfoByUserIDParams() {
    *this = ::std::move(from);
  }

  inline GetUserInfoByUserIDParams& operator=(GetUserInfoByUserIDParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GetUserInfoByUserIDParams& default_instance();

  static inline const GetUserInfoByUserIDParams* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoByUserIDParams*>(
               &_GetUserInfoByUserIDParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(GetUserInfoByUserIDParams* other);
  friend void swap(GetUserInfoByUserIDParams& a, GetUserInfoByUserIDParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserInfoByUserIDParams* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoByUserIDParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoByUserIDParams& from);
  void MergeFrom(const GetUserInfoByUserIDParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUserInfoByUserIDParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.GetUserInfoByUserIDParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartRecordingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartRecordingParams) */ {
 public:
  StartRecordingParams();
  virtual ~StartRecordingParams();

  StartRecordingParams(const StartRecordingParams& from);

  inline StartRecordingParams& operator=(const StartRecordingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartRecordingParams(StartRecordingParams&& from) noexcept
    : StartRecordingParams() {
    *this = ::std::move(from);
  }

  inline StartRecordingParams& operator=(StartRecordingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartRecordingParams& default_instance();

  static inline const StartRecordingParams* internal_default_instance() {
    return reinterpret_cast<const StartRecordingParams*>(
               &_StartRecordingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(StartRecordingParams* other);
  friend void swap(StartRecordingParams& a, StartRecordingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartRecordingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartRecordingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartRecordingParams& from);
  void MergeFrom(const StartRecordingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartRecordingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string recPath = 1;
  bool has_recpath() const;
  void clear_recpath();
  static const int kRecPathFieldNumber = 1;
  const ::std::string& recpath() const;
  void set_recpath(const ::std::string& value);
  #if LANG_CXX11
  void set_recpath(::std::string&& value);
  #endif
  void set_recpath(const char* value);
  void set_recpath(const char* value, size_t size);
  ::std::string* mutable_recpath();
  ::std::string* release_recpath();
  void set_allocated_recpath(::std::string* recpath);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartRecordingParams)
 private:
  void set_has_recpath();
  void clear_has_recpath();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr recpath_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CanStartRecordingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.CanStartRecordingParams) */ {
 public:
  CanStartRecordingParams();
  virtual ~CanStartRecordingParams();

  CanStartRecordingParams(const CanStartRecordingParams& from);

  inline CanStartRecordingParams& operator=(const CanStartRecordingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CanStartRecordingParams(CanStartRecordingParams&& from) noexcept
    : CanStartRecordingParams() {
    *this = ::std::move(from);
  }

  inline CanStartRecordingParams& operator=(CanStartRecordingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const CanStartRecordingParams& default_instance();

  static inline const CanStartRecordingParams* internal_default_instance() {
    return reinterpret_cast<const CanStartRecordingParams*>(
               &_CanStartRecordingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(CanStartRecordingParams* other);
  friend void swap(CanStartRecordingParams& a, CanStartRecordingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CanStartRecordingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  CanStartRecordingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CanStartRecordingParams& from);
  void MergeFrom(const CanStartRecordingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CanStartRecordingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bCloudRecording = 1;
  bool has_bcloudrecording() const;
  void clear_bcloudrecording();
  static const int kBCloudRecordingFieldNumber = 1;
  bool bcloudrecording() const;
  void set_bcloudrecording(bool value);

  // optional uint32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.CanStartRecordingParams)
 private:
  void set_has_bcloudrecording();
  void clear_has_bcloudrecording();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bcloudrecording_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsSupportLocalRecordingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.IsSupportLocalRecordingParams) */ {
 public:
  IsSupportLocalRecordingParams();
  virtual ~IsSupportLocalRecordingParams();

  IsSupportLocalRecordingParams(const IsSupportLocalRecordingParams& from);

  inline IsSupportLocalRecordingParams& operator=(const IsSupportLocalRecordingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsSupportLocalRecordingParams(IsSupportLocalRecordingParams&& from) noexcept
    : IsSupportLocalRecordingParams() {
    *this = ::std::move(from);
  }

  inline IsSupportLocalRecordingParams& operator=(IsSupportLocalRecordingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const IsSupportLocalRecordingParams& default_instance();

  static inline const IsSupportLocalRecordingParams* internal_default_instance() {
    return reinterpret_cast<const IsSupportLocalRecordingParams*>(
               &_IsSupportLocalRecordingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(IsSupportLocalRecordingParams* other);
  friend void swap(IsSupportLocalRecordingParams& a, IsSupportLocalRecordingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsSupportLocalRecordingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  IsSupportLocalRecordingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IsSupportLocalRecordingParams& from);
  void MergeFrom(const IsSupportLocalRecordingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsSupportLocalRecordingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.IsSupportLocalRecordingParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllowLocalRecordingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.AllowLocalRecordingParams) */ {
 public:
  AllowLocalRecordingParams();
  virtual ~AllowLocalRecordingParams();

  AllowLocalRecordingParams(const AllowLocalRecordingParams& from);

  inline AllowLocalRecordingParams& operator=(const AllowLocalRecordingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllowLocalRecordingParams(AllowLocalRecordingParams&& from) noexcept
    : AllowLocalRecordingParams() {
    *this = ::std::move(from);
  }

  inline AllowLocalRecordingParams& operator=(AllowLocalRecordingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AllowLocalRecordingParams& default_instance();

  static inline const AllowLocalRecordingParams* internal_default_instance() {
    return reinterpret_cast<const AllowLocalRecordingParams*>(
               &_AllowLocalRecordingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(AllowLocalRecordingParams* other);
  friend void swap(AllowLocalRecordingParams& a, AllowLocalRecordingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllowLocalRecordingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  AllowLocalRecordingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AllowLocalRecordingParams& from);
  void MergeFrom(const AllowLocalRecordingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllowLocalRecordingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.AllowLocalRecordingParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisAllowLocalRecordingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisAllowLocalRecordingParams) */ {
 public:
  DisAllowLocalRecordingParams();
  virtual ~DisAllowLocalRecordingParams();

  DisAllowLocalRecordingParams(const DisAllowLocalRecordingParams& from);

  inline DisAllowLocalRecordingParams& operator=(const DisAllowLocalRecordingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisAllowLocalRecordingParams(DisAllowLocalRecordingParams&& from) noexcept
    : DisAllowLocalRecordingParams() {
    *this = ::std::move(from);
  }

  inline DisAllowLocalRecordingParams& operator=(DisAllowLocalRecordingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisAllowLocalRecordingParams& default_instance();

  static inline const DisAllowLocalRecordingParams* internal_default_instance() {
    return reinterpret_cast<const DisAllowLocalRecordingParams*>(
               &_DisAllowLocalRecordingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(DisAllowLocalRecordingParams* other);
  friend void swap(DisAllowLocalRecordingParams& a, DisAllowLocalRecordingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisAllowLocalRecordingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisAllowLocalRecordingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisAllowLocalRecordingParams& from);
  void MergeFrom(const DisAllowLocalRecordingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisAllowLocalRecordingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisAllowLocalRecordingParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartAppShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartAppShareParams) */ {
 public:
  StartAppShareParams();
  virtual ~StartAppShareParams();

  StartAppShareParams(const StartAppShareParams& from);

  inline StartAppShareParams& operator=(const StartAppShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartAppShareParams(StartAppShareParams&& from) noexcept
    : StartAppShareParams() {
    *this = ::std::move(from);
  }

  inline StartAppShareParams& operator=(StartAppShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartAppShareParams& default_instance();

  static inline const StartAppShareParams* internal_default_instance() {
    return reinterpret_cast<const StartAppShareParams*>(
               &_StartAppShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(StartAppShareParams* other);
  friend void swap(StartAppShareParams& a, StartAppShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartAppShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartAppShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartAppShareParams& from);
  void MergeFrom(const StartAppShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartAppShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hShareApp = 1;
  bool has_hshareapp() const;
  void clear_hshareapp();
  static const int kHShareAppFieldNumber = 1;
  const ::std::string& hshareapp() const;
  void set_hshareapp(const ::std::string& value);
  #if LANG_CXX11
  void set_hshareapp(::std::string&& value);
  #endif
  void set_hshareapp(const char* value);
  void set_hshareapp(const char* value, size_t size);
  ::std::string* mutable_hshareapp();
  ::std::string* release_hshareapp();
  void set_allocated_hshareapp(::std::string* hshareapp);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartAppShareParams)
 private:
  void set_has_hshareapp();
  void clear_has_hshareapp();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hshareapp_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartMonitorShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.StartMonitorShareParams) */ {
 public:
  StartMonitorShareParams();
  virtual ~StartMonitorShareParams();

  StartMonitorShareParams(const StartMonitorShareParams& from);

  inline StartMonitorShareParams& operator=(const StartMonitorShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartMonitorShareParams(StartMonitorShareParams&& from) noexcept
    : StartMonitorShareParams() {
    *this = ::std::move(from);
  }

  inline StartMonitorShareParams& operator=(StartMonitorShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StartMonitorShareParams& default_instance();

  static inline const StartMonitorShareParams* internal_default_instance() {
    return reinterpret_cast<const StartMonitorShareParams*>(
               &_StartMonitorShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(StartMonitorShareParams* other);
  friend void swap(StartMonitorShareParams& a, StartMonitorShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartMonitorShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StartMonitorShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StartMonitorShareParams& from);
  void MergeFrom(const StartMonitorShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartMonitorShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string monitorID = 1;
  bool has_monitorid() const;
  void clear_monitorid();
  static const int kMonitorIDFieldNumber = 1;
  const ::std::string& monitorid() const;
  void set_monitorid(const ::std::string& value);
  #if LANG_CXX11
  void set_monitorid(::std::string&& value);
  #endif
  void set_monitorid(const char* value);
  void set_monitorid(const char* value, size_t size);
  ::std::string* mutable_monitorid();
  ::std::string* release_monitorid();
  void set_allocated_monitorid(::std::string* monitorid);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.StartMonitorShareParams)
 private:
  void set_has_monitorid();
  void clear_has_monitorid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr monitorid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MuteVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.MuteVideoParams) */ {
 public:
  MuteVideoParams();
  virtual ~MuteVideoParams();

  MuteVideoParams(const MuteVideoParams& from);

  inline MuteVideoParams& operator=(const MuteVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MuteVideoParams(MuteVideoParams&& from) noexcept
    : MuteVideoParams() {
    *this = ::std::move(from);
  }

  inline MuteVideoParams& operator=(MuteVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MuteVideoParams& default_instance();

  static inline const MuteVideoParams* internal_default_instance() {
    return reinterpret_cast<const MuteVideoParams*>(
               &_MuteVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(MuteVideoParams* other);
  friend void swap(MuteVideoParams& a, MuteVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MuteVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  MuteVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MuteVideoParams& from);
  void MergeFrom(const MuteVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MuteVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.MuteVideoParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnMuteVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.UnMuteVideoParams) */ {
 public:
  UnMuteVideoParams();
  virtual ~UnMuteVideoParams();

  UnMuteVideoParams(const UnMuteVideoParams& from);

  inline UnMuteVideoParams& operator=(const UnMuteVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnMuteVideoParams(UnMuteVideoParams&& from) noexcept
    : UnMuteVideoParams() {
    *this = ::std::move(from);
  }

  inline UnMuteVideoParams& operator=(UnMuteVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UnMuteVideoParams& default_instance();

  static inline const UnMuteVideoParams* internal_default_instance() {
    return reinterpret_cast<const UnMuteVideoParams*>(
               &_UnMuteVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(UnMuteVideoParams* other);
  friend void swap(UnMuteVideoParams& a, UnMuteVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnMuteVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  UnMuteVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UnMuteVideoParams& from);
  void MergeFrom(const UnMuteVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnMuteVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.UnMuteVideoParams)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PinVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.PinVideoParams) */ {
 public:
  PinVideoParams();
  virtual ~PinVideoParams();

  PinVideoParams(const PinVideoParams& from);

  inline PinVideoParams& operator=(const PinVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PinVideoParams(PinVideoParams&& from) noexcept
    : PinVideoParams() {
    *this = ::std::move(from);
  }

  inline PinVideoParams& operator=(PinVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PinVideoParams& default_instance();

  static inline const PinVideoParams* internal_default_instance() {
    return reinterpret_cast<const PinVideoParams*>(
               &_PinVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(PinVideoParams* other);
  friend void swap(PinVideoParams& a, PinVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PinVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PinVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PinVideoParams& from);
  void MergeFrom(const PinVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PinVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bPin = 1;
  bool has_bpin() const;
  void clear_bpin();
  static const int kBPinFieldNumber = 1;
  bool bpin() const;
  void set_bpin(bool value);

  // optional bool bFirstView = 2;
  bool has_bfirstview() const;
  void clear_bfirstview();
  static const int kBFirstViewFieldNumber = 2;
  bool bfirstview() const;
  void set_bfirstview(bool value);

  // optional uint32 userID = 3;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.PinVideoParams)
 private:
  void set_has_bpin();
  void clear_has_bpin();
  void set_has_bfirstview();
  void clear_has_bfirstview();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bpin_;
  bool bfirstview_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpotlightVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SpotlightVideoParams) */ {
 public:
  SpotlightVideoParams();
  virtual ~SpotlightVideoParams();

  SpotlightVideoParams(const SpotlightVideoParams& from);

  inline SpotlightVideoParams& operator=(const SpotlightVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpotlightVideoParams(SpotlightVideoParams&& from) noexcept
    : SpotlightVideoParams() {
    *this = ::std::move(from);
  }

  inline SpotlightVideoParams& operator=(SpotlightVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SpotlightVideoParams& default_instance();

  static inline const SpotlightVideoParams* internal_default_instance() {
    return reinterpret_cast<const SpotlightVideoParams*>(
               &_SpotlightVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(SpotlightVideoParams* other);
  friend void swap(SpotlightVideoParams& a, SpotlightVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpotlightVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SpotlightVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SpotlightVideoParams& from);
  void MergeFrom(const SpotlightVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SpotlightVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bSpotlight = 1;
  bool has_bspotlight() const;
  void clear_bspotlight();
  static const int kBSpotlightFieldNumber = 1;
  bool bspotlight() const;
  void set_bspotlight(bool value);

  // optional uint32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SpotlightVideoParams)
 private:
  void set_has_bspotlight();
  void clear_has_bspotlight();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bspotlight_;
  ::google::protobuf::uint32 userid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideOrShowNoVideoUserOnVideoWallParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams) */ {
 public:
  HideOrShowNoVideoUserOnVideoWallParams();
  virtual ~HideOrShowNoVideoUserOnVideoWallParams();

  HideOrShowNoVideoUserOnVideoWallParams(const HideOrShowNoVideoUserOnVideoWallParams& from);

  inline HideOrShowNoVideoUserOnVideoWallParams& operator=(const HideOrShowNoVideoUserOnVideoWallParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideOrShowNoVideoUserOnVideoWallParams(HideOrShowNoVideoUserOnVideoWallParams&& from) noexcept
    : HideOrShowNoVideoUserOnVideoWallParams() {
    *this = ::std::move(from);
  }

  inline HideOrShowNoVideoUserOnVideoWallParams& operator=(HideOrShowNoVideoUserOnVideoWallParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HideOrShowNoVideoUserOnVideoWallParams& default_instance();

  static inline const HideOrShowNoVideoUserOnVideoWallParams* internal_default_instance() {
    return reinterpret_cast<const HideOrShowNoVideoUserOnVideoWallParams*>(
               &_HideOrShowNoVideoUserOnVideoWallParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(HideOrShowNoVideoUserOnVideoWallParams* other);
  friend void swap(HideOrShowNoVideoUserOnVideoWallParams& a, HideOrShowNoVideoUserOnVideoWallParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideOrShowNoVideoUserOnVideoWallParams* New() const PROTOBUF_FINAL { return New(NULL); }

  HideOrShowNoVideoUserOnVideoWallParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HideOrShowNoVideoUserOnVideoWallParams& from);
  void MergeFrom(const HideOrShowNoVideoUserOnVideoWallParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HideOrShowNoVideoUserOnVideoWallParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bHide = 1;
  bool has_bhide() const;
  void clear_bhide();
  static const int kBHideFieldNumber = 1;
  bool bhide() const;
  void set_bhide(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
 private:
  void set_has_bhide();
  void clear_has_bhide();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bhide_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRendererParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.CreateRendererParams) */ {
 public:
  CreateRendererParams();
  virtual ~CreateRendererParams();

  CreateRendererParams(const CreateRendererParams& from);

  inline CreateRendererParams& operator=(const CreateRendererParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRendererParams(CreateRendererParams&& from) noexcept
    : CreateRendererParams() {
    *this = ::std::move(from);
  }

  inline CreateRendererParams& operator=(CreateRendererParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const CreateRendererParams& default_instance();

  static inline const CreateRendererParams* internal_default_instance() {
    return reinterpret_cast<const CreateRendererParams*>(
               &_CreateRendererParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(CreateRendererParams* other);
  friend void swap(CreateRendererParams& a, CreateRendererParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRendererParams* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRendererParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CreateRendererParams& from);
  void MergeFrom(const CreateRendererParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateRendererParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.CreateRendererParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyRendererParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DestroyRendererParams) */ {
 public:
  DestroyRendererParams();
  virtual ~DestroyRendererParams();

  DestroyRendererParams(const DestroyRendererParams& from);

  inline DestroyRendererParams& operator=(const DestroyRendererParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyRendererParams(DestroyRendererParams&& from) noexcept
    : DestroyRendererParams() {
    *this = ::std::move(from);
  }

  inline DestroyRendererParams& operator=(DestroyRendererParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DestroyRendererParams& default_instance();

  static inline const DestroyRendererParams* internal_default_instance() {
    return reinterpret_cast<const DestroyRendererParams*>(
               &_DestroyRendererParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(DestroyRendererParams* other);
  friend void swap(DestroyRendererParams& a, DestroyRendererParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyRendererParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyRendererParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DestroyRendererParams& from);
  void MergeFrom(const DestroyRendererParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyRendererParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DestroyRendererParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscribeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SubscribeParams) */ {
 public:
  SubscribeParams();
  virtual ~SubscribeParams();

  SubscribeParams(const SubscribeParams& from);

  inline SubscribeParams& operator=(const SubscribeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeParams(SubscribeParams&& from) noexcept
    : SubscribeParams() {
    *this = ::std::move(from);
  }

  inline SubscribeParams& operator=(SubscribeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SubscribeParams& default_instance();

  static inline const SubscribeParams* internal_default_instance() {
    return reinterpret_cast<const SubscribeParams*>(
               &_SubscribeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(SubscribeParams* other);
  friend void swap(SubscribeParams& a, SubscribeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SubscribeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SubscribeParams& from);
  void MergeFrom(const SubscribeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscribeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional int32 rawDataType = 2;
  bool has_rawdatatype() const;
  void clear_rawdatatype();
  static const int kRawDataTypeFieldNumber = 2;
  ::google::protobuf::int32 rawdatatype() const;
  void set_rawdatatype(::google::protobuf::int32 value);

  // optional uint64 recvHandle = 3;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 3;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SubscribeParams)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_rawdatatype();
  void clear_has_rawdatatype();
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::int32 rawdatatype_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnSubscribeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.UnSubscribeParams) */ {
 public:
  UnSubscribeParams();
  virtual ~UnSubscribeParams();

  UnSubscribeParams(const UnSubscribeParams& from);

  inline UnSubscribeParams& operator=(const UnSubscribeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnSubscribeParams(UnSubscribeParams&& from) noexcept
    : UnSubscribeParams() {
    *this = ::std::move(from);
  }

  inline UnSubscribeParams& operator=(UnSubscribeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UnSubscribeParams& default_instance();

  static inline const UnSubscribeParams* internal_default_instance() {
    return reinterpret_cast<const UnSubscribeParams*>(
               &_UnSubscribeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(UnSubscribeParams* other);
  friend void swap(UnSubscribeParams& a, UnSubscribeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnSubscribeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  UnSubscribeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UnSubscribeParams& from);
  void MergeFrom(const UnSubscribeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnSubscribeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.UnSubscribeParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetRawDataResolutionParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetRawDataResolutionParams) */ {
 public:
  SetRawDataResolutionParams();
  virtual ~SetRawDataResolutionParams();

  SetRawDataResolutionParams(const SetRawDataResolutionParams& from);

  inline SetRawDataResolutionParams& operator=(const SetRawDataResolutionParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetRawDataResolutionParams(SetRawDataResolutionParams&& from) noexcept
    : SetRawDataResolutionParams() {
    *this = ::std::move(from);
  }

  inline SetRawDataResolutionParams& operator=(SetRawDataResolutionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetRawDataResolutionParams& default_instance();

  static inline const SetRawDataResolutionParams* internal_default_instance() {
    return reinterpret_cast<const SetRawDataResolutionParams*>(
               &_SetRawDataResolutionParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(SetRawDataResolutionParams* other);
  friend void swap(SetRawDataResolutionParams& a, SetRawDataResolutionParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetRawDataResolutionParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetRawDataResolutionParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetRawDataResolutionParams& from);
  void MergeFrom(const SetRawDataResolutionParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetRawDataResolutionParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 2;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 2;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // optional int32 resolution = 1;
  bool has_resolution() const;
  void clear_resolution();
  static const int kResolutionFieldNumber = 1;
  ::google::protobuf::int32 resolution() const;
  void set_resolution(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetRawDataResolutionParams)
 private:
  void set_has_resolution();
  void clear_has_resolution();
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  ::google::protobuf::int32 resolution_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetResolutionParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.GetResolutionParams) */ {
 public:
  GetResolutionParams();
  virtual ~GetResolutionParams();

  GetResolutionParams(const GetResolutionParams& from);

  inline GetResolutionParams& operator=(const GetResolutionParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetResolutionParams(GetResolutionParams&& from) noexcept
    : GetResolutionParams() {
    *this = ::std::move(from);
  }

  inline GetResolutionParams& operator=(GetResolutionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GetResolutionParams& default_instance();

  static inline const GetResolutionParams* internal_default_instance() {
    return reinterpret_cast<const GetResolutionParams*>(
               &_GetResolutionParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(GetResolutionParams* other);
  friend void swap(GetResolutionParams& a, GetResolutionParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetResolutionParams* New() const PROTOBUF_FINAL { return New(NULL); }

  GetResolutionParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const GetResolutionParams& from);
  void MergeFrom(const GetResolutionParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetResolutionParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.GetResolutionParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRawDataTypeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.GetRawDataTypeParams) */ {
 public:
  GetRawDataTypeParams();
  virtual ~GetRawDataTypeParams();

  GetRawDataTypeParams(const GetRawDataTypeParams& from);

  inline GetRawDataTypeParams& operator=(const GetRawDataTypeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRawDataTypeParams(GetRawDataTypeParams&& from) noexcept
    : GetRawDataTypeParams() {
    *this = ::std::move(from);
  }

  inline GetRawDataTypeParams& operator=(GetRawDataTypeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GetRawDataTypeParams& default_instance();

  static inline const GetRawDataTypeParams* internal_default_instance() {
    return reinterpret_cast<const GetRawDataTypeParams*>(
               &_GetRawDataTypeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(GetRawDataTypeParams* other);
  friend void swap(GetRawDataTypeParams& a, GetRawDataTypeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRawDataTypeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRawDataTypeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const GetRawDataTypeParams& from);
  void MergeFrom(const GetRawDataTypeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRawDataTypeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.GetRawDataTypeParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserIdParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.GetUserIdParams) */ {
 public:
  GetUserIdParams();
  virtual ~GetUserIdParams();

  GetUserIdParams(const GetUserIdParams& from);

  inline GetUserIdParams& operator=(const GetUserIdParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserIdParams(GetUserIdParams&& from) noexcept
    : GetUserIdParams() {
    *this = ::std::move(from);
  }

  inline GetUserIdParams& operator=(GetUserIdParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GetUserIdParams& default_instance();

  static inline const GetUserIdParams* internal_default_instance() {
    return reinterpret_cast<const GetUserIdParams*>(
               &_GetUserIdParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(GetUserIdParams* other);
  friend void swap(GetUserIdParams& a, GetUserIdParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserIdParams* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserIdParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const GetUserIdParams& from);
  void MergeFrom(const GetUserIdParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUserIdParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 recvHandle = 1;
  bool has_recvhandle() const;
  void clear_recvhandle();
  static const int kRecvHandleFieldNumber = 1;
  ::google::protobuf::uint64 recvhandle() const;
  void set_recvhandle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.GetUserIdParams)
 private:
  void set_has_recvhandle();
  void clear_has_recvhandle();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 recvhandle_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableZoomAuthRealNameMeetingUIShownParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams) */ {
 public:
  EnableZoomAuthRealNameMeetingUIShownParams();
  virtual ~EnableZoomAuthRealNameMeetingUIShownParams();

  EnableZoomAuthRealNameMeetingUIShownParams(const EnableZoomAuthRealNameMeetingUIShownParams& from);

  inline EnableZoomAuthRealNameMeetingUIShownParams& operator=(const EnableZoomAuthRealNameMeetingUIShownParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableZoomAuthRealNameMeetingUIShownParams(EnableZoomAuthRealNameMeetingUIShownParams&& from) noexcept
    : EnableZoomAuthRealNameMeetingUIShownParams() {
    *this = ::std::move(from);
  }

  inline EnableZoomAuthRealNameMeetingUIShownParams& operator=(EnableZoomAuthRealNameMeetingUIShownParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableZoomAuthRealNameMeetingUIShownParams& default_instance();

  static inline const EnableZoomAuthRealNameMeetingUIShownParams* internal_default_instance() {
    return reinterpret_cast<const EnableZoomAuthRealNameMeetingUIShownParams*>(
               &_EnableZoomAuthRealNameMeetingUIShownParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(EnableZoomAuthRealNameMeetingUIShownParams* other);
  friend void swap(EnableZoomAuthRealNameMeetingUIShownParams& a, EnableZoomAuthRealNameMeetingUIShownParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableZoomAuthRealNameMeetingUIShownParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableZoomAuthRealNameMeetingUIShownParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableZoomAuthRealNameMeetingUIShownParams& from);
  void MergeFrom(const EnableZoomAuthRealNameMeetingUIShownParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableZoomAuthRealNameMeetingUIShownParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RetrieveParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.RetrieveParams) */ {
 public:
  RetrieveParams();
  virtual ~RetrieveParams();

  RetrieveParams(const RetrieveParams& from);

  inline RetrieveParams& operator=(const RetrieveParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RetrieveParams(RetrieveParams&& from) noexcept
    : RetrieveParams() {
    *this = ::std::move(from);
  }

  inline RetrieveParams& operator=(RetrieveParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const RetrieveParams& default_instance();

  static inline const RetrieveParams* internal_default_instance() {
    return reinterpret_cast<const RetrieveParams*>(
               &_RetrieveParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(RetrieveParams* other);
  friend void swap(RetrieveParams& a, RetrieveParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RetrieveParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RetrieveParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RetrieveParams& from);
  void MergeFrom(const RetrieveParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RetrieveParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string countryCode = 1;
  bool has_countrycode() const;
  void clear_countrycode();
  static const int kCountryCodeFieldNumber = 1;
  const ::std::string& countrycode() const;
  void set_countrycode(const ::std::string& value);
  #if LANG_CXX11
  void set_countrycode(::std::string&& value);
  #endif
  void set_countrycode(const char* value);
  void set_countrycode(const char* value, size_t size);
  ::std::string* mutable_countrycode();
  ::std::string* release_countrycode();
  void set_allocated_countrycode(::std::string* countrycode);

  // optional string phoneNum = 2;
  bool has_phonenum() const;
  void clear_phonenum();
  static const int kPhoneNumFieldNumber = 2;
  const ::std::string& phonenum() const;
  void set_phonenum(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenum(::std::string&& value);
  #endif
  void set_phonenum(const char* value);
  void set_phonenum(const char* value, size_t size);
  ::std::string* mutable_phonenum();
  ::std::string* release_phonenum();
  void set_allocated_phonenum(::std::string* phonenum);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.RetrieveParams)
 private:
  void set_has_countrycode();
  void clear_has_countrycode();
  void set_has_phonenum();
  void clear_has_phonenum();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr countrycode_;
  ::google::protobuf::internal::ArenaStringPtr phonenum_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.VerifyParams) */ {
 public:
  VerifyParams();
  virtual ~VerifyParams();

  VerifyParams(const VerifyParams& from);

  inline VerifyParams& operator=(const VerifyParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyParams(VerifyParams&& from) noexcept
    : VerifyParams() {
    *this = ::std::move(from);
  }

  inline VerifyParams& operator=(VerifyParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const VerifyParams& default_instance();

  static inline const VerifyParams* internal_default_instance() {
    return reinterpret_cast<const VerifyParams*>(
               &_VerifyParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(VerifyParams* other);
  friend void swap(VerifyParams& a, VerifyParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyParams* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VerifyParams& from);
  void MergeFrom(const VerifyParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerifyParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string countryCode = 1;
  bool has_countrycode() const;
  void clear_countrycode();
  static const int kCountryCodeFieldNumber = 1;
  const ::std::string& countrycode() const;
  void set_countrycode(const ::std::string& value);
  #if LANG_CXX11
  void set_countrycode(::std::string&& value);
  #endif
  void set_countrycode(const char* value);
  void set_countrycode(const char* value, size_t size);
  ::std::string* mutable_countrycode();
  ::std::string* release_countrycode();
  void set_allocated_countrycode(::std::string* countrycode);

  // optional string phoneNum = 2;
  bool has_phonenum() const;
  void clear_phonenum();
  static const int kPhoneNumFieldNumber = 2;
  const ::std::string& phonenum() const;
  void set_phonenum(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenum(::std::string&& value);
  #endif
  void set_phonenum(const char* value);
  void set_phonenum(const char* value, size_t size);
  ::std::string* mutable_phonenum();
  ::std::string* release_phonenum();
  void set_allocated_phonenum(::std::string* phonenum);

  // optional string verificationCode = 3;
  bool has_verificationcode() const;
  void clear_verificationcode();
  static const int kVerificationCodeFieldNumber = 3;
  const ::std::string& verificationcode() const;
  void set_verificationcode(const ::std::string& value);
  #if LANG_CXX11
  void set_verificationcode(::std::string&& value);
  #endif
  void set_verificationcode(const char* value);
  void set_verificationcode(const char* value, size_t size);
  ::std::string* mutable_verificationcode();
  ::std::string* release_verificationcode();
  void set_allocated_verificationcode(::std::string* verificationcode);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.VerifyParams)
 private:
  void set_has_countrycode();
  void clear_has_countrycode();
  void set_has_phonenum();
  void clear_has_phonenum();
  void set_has_verificationcode();
  void clear_has_verificationcode();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr countrycode_;
  ::google::protobuf::internal::ArenaStringPtr phonenum_;
  ::google::protobuf::internal::ArenaStringPtr verificationcode_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetDefaultCellPhoneInfoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams) */ {
 public:
  SetDefaultCellPhoneInfoParams();
  virtual ~SetDefaultCellPhoneInfoParams();

  SetDefaultCellPhoneInfoParams(const SetDefaultCellPhoneInfoParams& from);

  inline SetDefaultCellPhoneInfoParams& operator=(const SetDefaultCellPhoneInfoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDefaultCellPhoneInfoParams(SetDefaultCellPhoneInfoParams&& from) noexcept
    : SetDefaultCellPhoneInfoParams() {
    *this = ::std::move(from);
  }

  inline SetDefaultCellPhoneInfoParams& operator=(SetDefaultCellPhoneInfoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetDefaultCellPhoneInfoParams& default_instance();

  static inline const SetDefaultCellPhoneInfoParams* internal_default_instance() {
    return reinterpret_cast<const SetDefaultCellPhoneInfoParams*>(
               &_SetDefaultCellPhoneInfoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(SetDefaultCellPhoneInfoParams* other);
  friend void swap(SetDefaultCellPhoneInfoParams& a, SetDefaultCellPhoneInfoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDefaultCellPhoneInfoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDefaultCellPhoneInfoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetDefaultCellPhoneInfoParams& from);
  void MergeFrom(const SetDefaultCellPhoneInfoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetDefaultCellPhoneInfoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string countryCode = 1;
  bool has_countrycode() const;
  void clear_countrycode();
  static const int kCountryCodeFieldNumber = 1;
  const ::std::string& countrycode() const;
  void set_countrycode(const ::std::string& value);
  #if LANG_CXX11
  void set_countrycode(::std::string&& value);
  #endif
  void set_countrycode(const char* value);
  void set_countrycode(const char* value, size_t size);
  ::std::string* mutable_countrycode();
  ::std::string* release_countrycode();
  void set_allocated_countrycode(::std::string* countrycode);

  // optional string phoneNum = 2;
  bool has_phonenum() const;
  void clear_phonenum();
  static const int kPhoneNumFieldNumber = 2;
  const ::std::string& phonenum() const;
  void set_phonenum(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenum(::std::string&& value);
  #endif
  void set_phonenum(const char* value);
  void set_phonenum(const char* value, size_t size);
  ::std::string* mutable_phonenum();
  ::std::string* release_phonenum();
  void set_allocated_phonenum(::std::string* phonenum);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
 private:
  void set_has_countrycode();
  void clear_has_countrycode();
  void set_has_phonenum();
  void clear_has_phonenum();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr countrycode_;
  ::google::protobuf::internal::ArenaStringPtr phonenum_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAlwaysShowMeetingControlsParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams) */ {
 public:
  EnableAlwaysShowMeetingControlsParams();
  virtual ~EnableAlwaysShowMeetingControlsParams();

  EnableAlwaysShowMeetingControlsParams(const EnableAlwaysShowMeetingControlsParams& from);

  inline EnableAlwaysShowMeetingControlsParams& operator=(const EnableAlwaysShowMeetingControlsParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAlwaysShowMeetingControlsParams(EnableAlwaysShowMeetingControlsParams&& from) noexcept
    : EnableAlwaysShowMeetingControlsParams() {
    *this = ::std::move(from);
  }

  inline EnableAlwaysShowMeetingControlsParams& operator=(EnableAlwaysShowMeetingControlsParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAlwaysShowMeetingControlsParams& default_instance();

  static inline const EnableAlwaysShowMeetingControlsParams* internal_default_instance() {
    return reinterpret_cast<const EnableAlwaysShowMeetingControlsParams*>(
               &_EnableAlwaysShowMeetingControlsParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(EnableAlwaysShowMeetingControlsParams* other);
  friend void swap(EnableAlwaysShowMeetingControlsParams& a, EnableAlwaysShowMeetingControlsParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAlwaysShowMeetingControlsParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAlwaysShowMeetingControlsParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAlwaysShowMeetingControlsParams& from);
  void MergeFrom(const EnableAlwaysShowMeetingControlsParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAlwaysShowMeetingControlsParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectMicParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SelectMicParams) */ {
 public:
  SelectMicParams();
  virtual ~SelectMicParams();

  SelectMicParams(const SelectMicParams& from);

  inline SelectMicParams& operator=(const SelectMicParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectMicParams(SelectMicParams&& from) noexcept
    : SelectMicParams() {
    *this = ::std::move(from);
  }

  inline SelectMicParams& operator=(SelectMicParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SelectMicParams& default_instance();

  static inline const SelectMicParams* internal_default_instance() {
    return reinterpret_cast<const SelectMicParams*>(
               &_SelectMicParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(SelectMicParams* other);
  friend void swap(SelectMicParams& a, SelectMicParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectMicParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectMicParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SelectMicParams& from);
  void MergeFrom(const SelectMicParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectMicParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceID = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional string deviceName = 2;
  bool has_devicename() const;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 2;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SelectMicParams)
 private:
  void set_has_deviceid();
  void clear_has_deviceid();
  void set_has_devicename();
  void clear_has_devicename();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectSpeakerParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SelectSpeakerParams) */ {
 public:
  SelectSpeakerParams();
  virtual ~SelectSpeakerParams();

  SelectSpeakerParams(const SelectSpeakerParams& from);

  inline SelectSpeakerParams& operator=(const SelectSpeakerParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectSpeakerParams(SelectSpeakerParams&& from) noexcept
    : SelectSpeakerParams() {
    *this = ::std::move(from);
  }

  inline SelectSpeakerParams& operator=(SelectSpeakerParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SelectSpeakerParams& default_instance();

  static inline const SelectSpeakerParams* internal_default_instance() {
    return reinterpret_cast<const SelectSpeakerParams*>(
               &_SelectSpeakerParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(SelectSpeakerParams* other);
  friend void swap(SelectSpeakerParams& a, SelectSpeakerParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectSpeakerParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectSpeakerParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SelectSpeakerParams& from);
  void MergeFrom(const SelectSpeakerParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectSpeakerParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceID = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional string deviceName = 2;
  bool has_devicename() const;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 2;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SelectSpeakerParams)
 private:
  void set_has_deviceid();
  void clear_has_deviceid();
  void set_has_devicename();
  void clear_has_devicename();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoJoinAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoJoinAudioParams) */ {
 public:
  EnableAutoJoinAudioParams();
  virtual ~EnableAutoJoinAudioParams();

  EnableAutoJoinAudioParams(const EnableAutoJoinAudioParams& from);

  inline EnableAutoJoinAudioParams& operator=(const EnableAutoJoinAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoJoinAudioParams(EnableAutoJoinAudioParams&& from) noexcept
    : EnableAutoJoinAudioParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoJoinAudioParams& operator=(EnableAutoJoinAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoJoinAudioParams& default_instance();

  static inline const EnableAutoJoinAudioParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoJoinAudioParams*>(
               &_EnableAutoJoinAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(EnableAutoJoinAudioParams* other);
  friend void swap(EnableAutoJoinAudioParams& a, EnableAutoJoinAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoJoinAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoJoinAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoJoinAudioParams& from);
  void MergeFrom(const EnableAutoJoinAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoJoinAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoJoinAudioParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoAdjustMicParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoAdjustMicParams) */ {
 public:
  EnableAutoAdjustMicParams();
  virtual ~EnableAutoAdjustMicParams();

  EnableAutoAdjustMicParams(const EnableAutoAdjustMicParams& from);

  inline EnableAutoAdjustMicParams& operator=(const EnableAutoAdjustMicParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoAdjustMicParams(EnableAutoAdjustMicParams&& from) noexcept
    : EnableAutoAdjustMicParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoAdjustMicParams& operator=(EnableAutoAdjustMicParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoAdjustMicParams& default_instance();

  static inline const EnableAutoAdjustMicParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoAdjustMicParams*>(
               &_EnableAutoAdjustMicParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(EnableAutoAdjustMicParams* other);
  friend void swap(EnableAutoAdjustMicParams& a, EnableAutoAdjustMicParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoAdjustMicParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoAdjustMicParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoAdjustMicParams& from);
  void MergeFrom(const EnableAutoAdjustMicParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoAdjustMicParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoAdjustMicParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableStereoAudioParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableStereoAudioParams) */ {
 public:
  EnableStereoAudioParams();
  virtual ~EnableStereoAudioParams();

  EnableStereoAudioParams(const EnableStereoAudioParams& from);

  inline EnableStereoAudioParams& operator=(const EnableStereoAudioParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableStereoAudioParams(EnableStereoAudioParams&& from) noexcept
    : EnableStereoAudioParams() {
    *this = ::std::move(from);
  }

  inline EnableStereoAudioParams& operator=(EnableStereoAudioParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableStereoAudioParams& default_instance();

  static inline const EnableStereoAudioParams* internal_default_instance() {
    return reinterpret_cast<const EnableStereoAudioParams*>(
               &_EnableStereoAudioParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(EnableStereoAudioParams* other);
  friend void swap(EnableStereoAudioParams& a, EnableStereoAudioParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableStereoAudioParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableStereoAudioParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableStereoAudioParams& from);
  void MergeFrom(const EnableStereoAudioParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableStereoAudioParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableStereoAudioParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableMicOriginalInputParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableMicOriginalInputParams) */ {
 public:
  EnableMicOriginalInputParams();
  virtual ~EnableMicOriginalInputParams();

  EnableMicOriginalInputParams(const EnableMicOriginalInputParams& from);

  inline EnableMicOriginalInputParams& operator=(const EnableMicOriginalInputParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableMicOriginalInputParams(EnableMicOriginalInputParams&& from) noexcept
    : EnableMicOriginalInputParams() {
    *this = ::std::move(from);
  }

  inline EnableMicOriginalInputParams& operator=(EnableMicOriginalInputParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableMicOriginalInputParams& default_instance();

  static inline const EnableMicOriginalInputParams* internal_default_instance() {
    return reinterpret_cast<const EnableMicOriginalInputParams*>(
               &_EnableMicOriginalInputParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(EnableMicOriginalInputParams* other);
  friend void swap(EnableMicOriginalInputParams& a, EnableMicOriginalInputParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableMicOriginalInputParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableMicOriginalInputParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableMicOriginalInputParams& from);
  void MergeFrom(const EnableMicOriginalInputParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableMicOriginalInputParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableMicOriginalInputParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableHoldSpaceKeyToSpeakParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams) */ {
 public:
  EnableHoldSpaceKeyToSpeakParams();
  virtual ~EnableHoldSpaceKeyToSpeakParams();

  EnableHoldSpaceKeyToSpeakParams(const EnableHoldSpaceKeyToSpeakParams& from);

  inline EnableHoldSpaceKeyToSpeakParams& operator=(const EnableHoldSpaceKeyToSpeakParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableHoldSpaceKeyToSpeakParams(EnableHoldSpaceKeyToSpeakParams&& from) noexcept
    : EnableHoldSpaceKeyToSpeakParams() {
    *this = ::std::move(from);
  }

  inline EnableHoldSpaceKeyToSpeakParams& operator=(EnableHoldSpaceKeyToSpeakParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableHoldSpaceKeyToSpeakParams& default_instance();

  static inline const EnableHoldSpaceKeyToSpeakParams* internal_default_instance() {
    return reinterpret_cast<const EnableHoldSpaceKeyToSpeakParams*>(
               &_EnableHoldSpaceKeyToSpeakParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(EnableHoldSpaceKeyToSpeakParams* other);
  friend void swap(EnableHoldSpaceKeyToSpeakParams& a, EnableHoldSpaceKeyToSpeakParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableHoldSpaceKeyToSpeakParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableHoldSpaceKeyToSpeakParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableHoldSpaceKeyToSpeakParams& from);
  void MergeFrom(const EnableHoldSpaceKeyToSpeakParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableHoldSpaceKeyToSpeakParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAlwaysMuteMicWhenJoinVoipParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams) */ {
 public:
  EnableAlwaysMuteMicWhenJoinVoipParams();
  virtual ~EnableAlwaysMuteMicWhenJoinVoipParams();

  EnableAlwaysMuteMicWhenJoinVoipParams(const EnableAlwaysMuteMicWhenJoinVoipParams& from);

  inline EnableAlwaysMuteMicWhenJoinVoipParams& operator=(const EnableAlwaysMuteMicWhenJoinVoipParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAlwaysMuteMicWhenJoinVoipParams(EnableAlwaysMuteMicWhenJoinVoipParams&& from) noexcept
    : EnableAlwaysMuteMicWhenJoinVoipParams() {
    *this = ::std::move(from);
  }

  inline EnableAlwaysMuteMicWhenJoinVoipParams& operator=(EnableAlwaysMuteMicWhenJoinVoipParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAlwaysMuteMicWhenJoinVoipParams& default_instance();

  static inline const EnableAlwaysMuteMicWhenJoinVoipParams* internal_default_instance() {
    return reinterpret_cast<const EnableAlwaysMuteMicWhenJoinVoipParams*>(
               &_EnableAlwaysMuteMicWhenJoinVoipParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(EnableAlwaysMuteMicWhenJoinVoipParams* other);
  friend void swap(EnableAlwaysMuteMicWhenJoinVoipParams& a, EnableAlwaysMuteMicWhenJoinVoipParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAlwaysMuteMicWhenJoinVoipParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAlwaysMuteMicWhenJoinVoipParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAlwaysMuteMicWhenJoinVoipParams& from);
  void MergeFrom(const EnableAlwaysMuteMicWhenJoinVoipParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAlwaysMuteMicWhenJoinVoipParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableSuppressAudioNotifyParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableSuppressAudioNotifyParams) */ {
 public:
  EnableSuppressAudioNotifyParams();
  virtual ~EnableSuppressAudioNotifyParams();

  EnableSuppressAudioNotifyParams(const EnableSuppressAudioNotifyParams& from);

  inline EnableSuppressAudioNotifyParams& operator=(const EnableSuppressAudioNotifyParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableSuppressAudioNotifyParams(EnableSuppressAudioNotifyParams&& from) noexcept
    : EnableSuppressAudioNotifyParams() {
    *this = ::std::move(from);
  }

  inline EnableSuppressAudioNotifyParams& operator=(EnableSuppressAudioNotifyParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableSuppressAudioNotifyParams& default_instance();

  static inline const EnableSuppressAudioNotifyParams* internal_default_instance() {
    return reinterpret_cast<const EnableSuppressAudioNotifyParams*>(
               &_EnableSuppressAudioNotifyParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(EnableSuppressAudioNotifyParams* other);
  friend void swap(EnableSuppressAudioNotifyParams& a, EnableSuppressAudioNotifyParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableSuppressAudioNotifyParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableSuppressAudioNotifyParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableSuppressAudioNotifyParams& from);
  void MergeFrom(const EnableSuppressAudioNotifyParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableSuppressAudioNotifyParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetEchoCancellationLevelParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetEchoCancellationLevelParams) */ {
 public:
  SetEchoCancellationLevelParams();
  virtual ~SetEchoCancellationLevelParams();

  SetEchoCancellationLevelParams(const SetEchoCancellationLevelParams& from);

  inline SetEchoCancellationLevelParams& operator=(const SetEchoCancellationLevelParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEchoCancellationLevelParams(SetEchoCancellationLevelParams&& from) noexcept
    : SetEchoCancellationLevelParams() {
    *this = ::std::move(from);
  }

  inline SetEchoCancellationLevelParams& operator=(SetEchoCancellationLevelParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetEchoCancellationLevelParams& default_instance();

  static inline const SetEchoCancellationLevelParams* internal_default_instance() {
    return reinterpret_cast<const SetEchoCancellationLevelParams*>(
               &_SetEchoCancellationLevelParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(SetEchoCancellationLevelParams* other);
  friend void swap(SetEchoCancellationLevelParams& a, SetEchoCancellationLevelParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEchoCancellationLevelParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetEchoCancellationLevelParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetEchoCancellationLevelParams& from);
  void MergeFrom(const SetEchoCancellationLevelParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetEchoCancellationLevelParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetEchoCancellationLevelParams)
 private:
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMicVolParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetMicVolParams) */ {
 public:
  SetMicVolParams();
  virtual ~SetMicVolParams();

  SetMicVolParams(const SetMicVolParams& from);

  inline SetMicVolParams& operator=(const SetMicVolParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMicVolParams(SetMicVolParams&& from) noexcept
    : SetMicVolParams() {
    *this = ::std::move(from);
  }

  inline SetMicVolParams& operator=(SetMicVolParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetMicVolParams& default_instance();

  static inline const SetMicVolParams* internal_default_instance() {
    return reinterpret_cast<const SetMicVolParams*>(
               &_SetMicVolParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(SetMicVolParams* other);
  friend void swap(SetMicVolParams& a, SetMicVolParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMicVolParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetMicVolParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetMicVolParams& from);
  void MergeFrom(const SetMicVolParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetMicVolParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetMicVolParams)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float value_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSpeakerVolParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetSpeakerVolParams) */ {
 public:
  SetSpeakerVolParams();
  virtual ~SetSpeakerVolParams();

  SetSpeakerVolParams(const SetSpeakerVolParams& from);

  inline SetSpeakerVolParams& operator=(const SetSpeakerVolParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSpeakerVolParams(SetSpeakerVolParams&& from) noexcept
    : SetSpeakerVolParams() {
    *this = ::std::move(from);
  }

  inline SetSpeakerVolParams& operator=(SetSpeakerVolParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetSpeakerVolParams& default_instance();

  static inline const SetSpeakerVolParams* internal_default_instance() {
    return reinterpret_cast<const SetSpeakerVolParams*>(
               &_SetSpeakerVolParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(SetSpeakerVolParams* other);
  friend void swap(SetSpeakerVolParams& a, SetSpeakerVolParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSpeakerVolParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSpeakerVolParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetSpeakerVolParams& from);
  void MergeFrom(const SetSpeakerVolParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetSpeakerVolParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetSpeakerVolParams)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float value_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableDualScreenModeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableDualScreenModeParams) */ {
 public:
  EnableDualScreenModeParams();
  virtual ~EnableDualScreenModeParams();

  EnableDualScreenModeParams(const EnableDualScreenModeParams& from);

  inline EnableDualScreenModeParams& operator=(const EnableDualScreenModeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableDualScreenModeParams(EnableDualScreenModeParams&& from) noexcept
    : EnableDualScreenModeParams() {
    *this = ::std::move(from);
  }

  inline EnableDualScreenModeParams& operator=(EnableDualScreenModeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableDualScreenModeParams& default_instance();

  static inline const EnableDualScreenModeParams* internal_default_instance() {
    return reinterpret_cast<const EnableDualScreenModeParams*>(
               &_EnableDualScreenModeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(EnableDualScreenModeParams* other);
  friend void swap(EnableDualScreenModeParams& a, EnableDualScreenModeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableDualScreenModeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableDualScreenModeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableDualScreenModeParams& from);
  void MergeFrom(const EnableDualScreenModeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableDualScreenModeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableDualScreenModeParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnOffAeroModeInSharingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.TurnOffAeroModeInSharingParams) */ {
 public:
  TurnOffAeroModeInSharingParams();
  virtual ~TurnOffAeroModeInSharingParams();

  TurnOffAeroModeInSharingParams(const TurnOffAeroModeInSharingParams& from);

  inline TurnOffAeroModeInSharingParams& operator=(const TurnOffAeroModeInSharingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TurnOffAeroModeInSharingParams(TurnOffAeroModeInSharingParams&& from) noexcept
    : TurnOffAeroModeInSharingParams() {
    *this = ::std::move(from);
  }

  inline TurnOffAeroModeInSharingParams& operator=(TurnOffAeroModeInSharingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const TurnOffAeroModeInSharingParams& default_instance();

  static inline const TurnOffAeroModeInSharingParams* internal_default_instance() {
    return reinterpret_cast<const TurnOffAeroModeInSharingParams*>(
               &_TurnOffAeroModeInSharingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(TurnOffAeroModeInSharingParams* other);
  friend void swap(TurnOffAeroModeInSharingParams& a, TurnOffAeroModeInSharingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TurnOffAeroModeInSharingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnOffAeroModeInSharingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TurnOffAeroModeInSharingParams& from);
  void MergeFrom(const TurnOffAeroModeInSharingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TurnOffAeroModeInSharingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bTurnOff = 1;
  bool has_bturnoff() const;
  void clear_bturnoff();
  static const int kBTurnOffFieldNumber = 1;
  bool bturnoff() const;
  void set_bturnoff(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
 private:
  void set_has_bturnoff();
  void clear_has_bturnoff();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bturnoff_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoFitToWindowWhenViewSharingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams) */ {
 public:
  EnableAutoFitToWindowWhenViewSharingParams();
  virtual ~EnableAutoFitToWindowWhenViewSharingParams();

  EnableAutoFitToWindowWhenViewSharingParams(const EnableAutoFitToWindowWhenViewSharingParams& from);

  inline EnableAutoFitToWindowWhenViewSharingParams& operator=(const EnableAutoFitToWindowWhenViewSharingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoFitToWindowWhenViewSharingParams(EnableAutoFitToWindowWhenViewSharingParams&& from) noexcept
    : EnableAutoFitToWindowWhenViewSharingParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoFitToWindowWhenViewSharingParams& operator=(EnableAutoFitToWindowWhenViewSharingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoFitToWindowWhenViewSharingParams& default_instance();

  static inline const EnableAutoFitToWindowWhenViewSharingParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoFitToWindowWhenViewSharingParams*>(
               &_EnableAutoFitToWindowWhenViewSharingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(EnableAutoFitToWindowWhenViewSharingParams* other);
  friend void swap(EnableAutoFitToWindowWhenViewSharingParams& a, EnableAutoFitToWindowWhenViewSharingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoFitToWindowWhenViewSharingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoFitToWindowWhenViewSharingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoFitToWindowWhenViewSharingParams& from);
  void MergeFrom(const EnableAutoFitToWindowWhenViewSharingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoFitToWindowWhenViewSharingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoFullScreenVideoWhenJoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams) */ {
 public:
  EnableAutoFullScreenVideoWhenJoinMeetingParams();
  virtual ~EnableAutoFullScreenVideoWhenJoinMeetingParams();

  EnableAutoFullScreenVideoWhenJoinMeetingParams(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from);

  inline EnableAutoFullScreenVideoWhenJoinMeetingParams& operator=(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoFullScreenVideoWhenJoinMeetingParams(EnableAutoFullScreenVideoWhenJoinMeetingParams&& from) noexcept
    : EnableAutoFullScreenVideoWhenJoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoFullScreenVideoWhenJoinMeetingParams& operator=(EnableAutoFullScreenVideoWhenJoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoFullScreenVideoWhenJoinMeetingParams& default_instance();

  static inline const EnableAutoFullScreenVideoWhenJoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoFullScreenVideoWhenJoinMeetingParams*>(
               &_EnableAutoFullScreenVideoWhenJoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(EnableAutoFullScreenVideoWhenJoinMeetingParams* other);
  friend void swap(EnableAutoFullScreenVideoWhenJoinMeetingParams& a, EnableAutoFullScreenVideoWhenJoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoFullScreenVideoWhenJoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoFullScreenVideoWhenJoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from);
  void MergeFrom(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoFullScreenVideoWhenJoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableSplitScreenModeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableSplitScreenModeParams) */ {
 public:
  EnableSplitScreenModeParams();
  virtual ~EnableSplitScreenModeParams();

  EnableSplitScreenModeParams(const EnableSplitScreenModeParams& from);

  inline EnableSplitScreenModeParams& operator=(const EnableSplitScreenModeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableSplitScreenModeParams(EnableSplitScreenModeParams&& from) noexcept
    : EnableSplitScreenModeParams() {
    *this = ::std::move(from);
  }

  inline EnableSplitScreenModeParams& operator=(EnableSplitScreenModeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableSplitScreenModeParams& default_instance();

  static inline const EnableSplitScreenModeParams* internal_default_instance() {
    return reinterpret_cast<const EnableSplitScreenModeParams*>(
               &_EnableSplitScreenModeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(EnableSplitScreenModeParams* other);
  friend void swap(EnableSplitScreenModeParams& a, EnableSplitScreenModeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableSplitScreenModeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableSplitScreenModeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableSplitScreenModeParams& from);
  void MergeFrom(const EnableSplitScreenModeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableSplitScreenModeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableSplitScreenModeParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoFullScreenVideoWhenViewShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams) */ {
 public:
  EnableAutoFullScreenVideoWhenViewShareParams();
  virtual ~EnableAutoFullScreenVideoWhenViewShareParams();

  EnableAutoFullScreenVideoWhenViewShareParams(const EnableAutoFullScreenVideoWhenViewShareParams& from);

  inline EnableAutoFullScreenVideoWhenViewShareParams& operator=(const EnableAutoFullScreenVideoWhenViewShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoFullScreenVideoWhenViewShareParams(EnableAutoFullScreenVideoWhenViewShareParams&& from) noexcept
    : EnableAutoFullScreenVideoWhenViewShareParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoFullScreenVideoWhenViewShareParams& operator=(EnableAutoFullScreenVideoWhenViewShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoFullScreenVideoWhenViewShareParams& default_instance();

  static inline const EnableAutoFullScreenVideoWhenViewShareParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoFullScreenVideoWhenViewShareParams*>(
               &_EnableAutoFullScreenVideoWhenViewShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(EnableAutoFullScreenVideoWhenViewShareParams* other);
  friend void swap(EnableAutoFullScreenVideoWhenViewShareParams& a, EnableAutoFullScreenVideoWhenViewShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoFullScreenVideoWhenViewShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoFullScreenVideoWhenViewShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoFullScreenVideoWhenViewShareParams& from);
  void MergeFrom(const EnableAutoFullScreenVideoWhenViewShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoFullScreenVideoWhenViewShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableDisplayReminderWindowWhenExitParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams) */ {
 public:
  EnableDisplayReminderWindowWhenExitParams();
  virtual ~EnableDisplayReminderWindowWhenExitParams();

  EnableDisplayReminderWindowWhenExitParams(const EnableDisplayReminderWindowWhenExitParams& from);

  inline EnableDisplayReminderWindowWhenExitParams& operator=(const EnableDisplayReminderWindowWhenExitParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableDisplayReminderWindowWhenExitParams(EnableDisplayReminderWindowWhenExitParams&& from) noexcept
    : EnableDisplayReminderWindowWhenExitParams() {
    *this = ::std::move(from);
  }

  inline EnableDisplayReminderWindowWhenExitParams& operator=(EnableDisplayReminderWindowWhenExitParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableDisplayReminderWindowWhenExitParams& default_instance();

  static inline const EnableDisplayReminderWindowWhenExitParams* internal_default_instance() {
    return reinterpret_cast<const EnableDisplayReminderWindowWhenExitParams*>(
               &_EnableDisplayReminderWindowWhenExitParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(EnableDisplayReminderWindowWhenExitParams* other);
  friend void swap(EnableDisplayReminderWindowWhenExitParams& a, EnableDisplayReminderWindowWhenExitParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableDisplayReminderWindowWhenExitParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableDisplayReminderWindowWhenExitParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableDisplayReminderWindowWhenExitParams& from);
  void MergeFrom(const EnableDisplayReminderWindowWhenExitParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableDisplayReminderWindowWhenExitParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableShowMyMeetingElapseTimeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams) */ {
 public:
  EnableShowMyMeetingElapseTimeParams();
  virtual ~EnableShowMyMeetingElapseTimeParams();

  EnableShowMyMeetingElapseTimeParams(const EnableShowMyMeetingElapseTimeParams& from);

  inline EnableShowMyMeetingElapseTimeParams& operator=(const EnableShowMyMeetingElapseTimeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableShowMyMeetingElapseTimeParams(EnableShowMyMeetingElapseTimeParams&& from) noexcept
    : EnableShowMyMeetingElapseTimeParams() {
    *this = ::std::move(from);
  }

  inline EnableShowMyMeetingElapseTimeParams& operator=(EnableShowMyMeetingElapseTimeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableShowMyMeetingElapseTimeParams& default_instance();

  static inline const EnableShowMyMeetingElapseTimeParams* internal_default_instance() {
    return reinterpret_cast<const EnableShowMyMeetingElapseTimeParams*>(
               &_EnableShowMyMeetingElapseTimeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(EnableShowMyMeetingElapseTimeParams* other);
  friend void swap(EnableShowMyMeetingElapseTimeParams& a, EnableShowMyMeetingElapseTimeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableShowMyMeetingElapseTimeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableShowMyMeetingElapseTimeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableShowMyMeetingElapseTimeParams& from);
  void MergeFrom(const EnableShowMyMeetingElapseTimeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableShowMyMeetingElapseTimeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAccelerateGPUWhenShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams) */ {
 public:
  EnableAccelerateGPUWhenShareParams();
  virtual ~EnableAccelerateGPUWhenShareParams();

  EnableAccelerateGPUWhenShareParams(const EnableAccelerateGPUWhenShareParams& from);

  inline EnableAccelerateGPUWhenShareParams& operator=(const EnableAccelerateGPUWhenShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAccelerateGPUWhenShareParams(EnableAccelerateGPUWhenShareParams&& from) noexcept
    : EnableAccelerateGPUWhenShareParams() {
    *this = ::std::move(from);
  }

  inline EnableAccelerateGPUWhenShareParams& operator=(EnableAccelerateGPUWhenShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAccelerateGPUWhenShareParams& default_instance();

  static inline const EnableAccelerateGPUWhenShareParams* internal_default_instance() {
    return reinterpret_cast<const EnableAccelerateGPUWhenShareParams*>(
               &_EnableAccelerateGPUWhenShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(EnableAccelerateGPUWhenShareParams* other);
  friend void swap(EnableAccelerateGPUWhenShareParams& a, EnableAccelerateGPUWhenShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAccelerateGPUWhenShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAccelerateGPUWhenShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAccelerateGPUWhenShareParams& from);
  void MergeFrom(const EnableAccelerateGPUWhenShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAccelerateGPUWhenShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableRemoteControlAllApplicationsParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams) */ {
 public:
  EnableRemoteControlAllApplicationsParams();
  virtual ~EnableRemoteControlAllApplicationsParams();

  EnableRemoteControlAllApplicationsParams(const EnableRemoteControlAllApplicationsParams& from);

  inline EnableRemoteControlAllApplicationsParams& operator=(const EnableRemoteControlAllApplicationsParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableRemoteControlAllApplicationsParams(EnableRemoteControlAllApplicationsParams&& from) noexcept
    : EnableRemoteControlAllApplicationsParams() {
    *this = ::std::move(from);
  }

  inline EnableRemoteControlAllApplicationsParams& operator=(EnableRemoteControlAllApplicationsParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableRemoteControlAllApplicationsParams& default_instance();

  static inline const EnableRemoteControlAllApplicationsParams* internal_default_instance() {
    return reinterpret_cast<const EnableRemoteControlAllApplicationsParams*>(
               &_EnableRemoteControlAllApplicationsParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(EnableRemoteControlAllApplicationsParams* other);
  friend void swap(EnableRemoteControlAllApplicationsParams& a, EnableRemoteControlAllApplicationsParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableRemoteControlAllApplicationsParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableRemoteControlAllApplicationsParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableRemoteControlAllApplicationsParams& from);
  void MergeFrom(const EnableRemoteControlAllApplicationsParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableRemoteControlAllApplicationsParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetRecordingPathParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetRecordingPathParams) */ {
 public:
  SetRecordingPathParams();
  virtual ~SetRecordingPathParams();

  SetRecordingPathParams(const SetRecordingPathParams& from);

  inline SetRecordingPathParams& operator=(const SetRecordingPathParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetRecordingPathParams(SetRecordingPathParams&& from) noexcept
    : SetRecordingPathParams() {
    *this = ::std::move(from);
  }

  inline SetRecordingPathParams& operator=(SetRecordingPathParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetRecordingPathParams& default_instance();

  static inline const SetRecordingPathParams* internal_default_instance() {
    return reinterpret_cast<const SetRecordingPathParams*>(
               &_SetRecordingPathParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(SetRecordingPathParams* other);
  friend void swap(SetRecordingPathParams& a, SetRecordingPathParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetRecordingPathParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetRecordingPathParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetRecordingPathParams& from);
  void MergeFrom(const SetRecordingPathParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetRecordingPathParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string recPath = 1;
  bool has_recpath() const;
  void clear_recpath();
  static const int kRecPathFieldNumber = 1;
  const ::std::string& recpath() const;
  void set_recpath(const ::std::string& value);
  #if LANG_CXX11
  void set_recpath(::std::string&& value);
  #endif
  void set_recpath(const char* value);
  void set_recpath(const char* value, size_t size);
  ::std::string* mutable_recpath();
  ::std::string* release_recpath();
  void set_allocated_recpath(::std::string* recpath);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetRecordingPathParams)
 private:
  void set_has_recpath();
  void clear_has_recpath();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr recpath_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableSelectRecordFileLocationAfterMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams) */ {
 public:
  EnableSelectRecordFileLocationAfterMeetingParams();
  virtual ~EnableSelectRecordFileLocationAfterMeetingParams();

  EnableSelectRecordFileLocationAfterMeetingParams(const EnableSelectRecordFileLocationAfterMeetingParams& from);

  inline EnableSelectRecordFileLocationAfterMeetingParams& operator=(const EnableSelectRecordFileLocationAfterMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableSelectRecordFileLocationAfterMeetingParams(EnableSelectRecordFileLocationAfterMeetingParams&& from) noexcept
    : EnableSelectRecordFileLocationAfterMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableSelectRecordFileLocationAfterMeetingParams& operator=(EnableSelectRecordFileLocationAfterMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableSelectRecordFileLocationAfterMeetingParams& default_instance();

  static inline const EnableSelectRecordFileLocationAfterMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableSelectRecordFileLocationAfterMeetingParams*>(
               &_EnableSelectRecordFileLocationAfterMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(EnableSelectRecordFileLocationAfterMeetingParams* other);
  friend void swap(EnableSelectRecordFileLocationAfterMeetingParams& a, EnableSelectRecordFileLocationAfterMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableSelectRecordFileLocationAfterMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableSelectRecordFileLocationAfterMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableSelectRecordFileLocationAfterMeetingParams& from);
  void MergeFrom(const EnableSelectRecordFileLocationAfterMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableSelectRecordFileLocationAfterMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableMultiAudioStreamRecordParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams) */ {
 public:
  EnableMultiAudioStreamRecordParams();
  virtual ~EnableMultiAudioStreamRecordParams();

  EnableMultiAudioStreamRecordParams(const EnableMultiAudioStreamRecordParams& from);

  inline EnableMultiAudioStreamRecordParams& operator=(const EnableMultiAudioStreamRecordParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableMultiAudioStreamRecordParams(EnableMultiAudioStreamRecordParams&& from) noexcept
    : EnableMultiAudioStreamRecordParams() {
    *this = ::std::move(from);
  }

  inline EnableMultiAudioStreamRecordParams& operator=(EnableMultiAudioStreamRecordParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableMultiAudioStreamRecordParams& default_instance();

  static inline const EnableMultiAudioStreamRecordParams* internal_default_instance() {
    return reinterpret_cast<const EnableMultiAudioStreamRecordParams*>(
               &_EnableMultiAudioStreamRecordParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(EnableMultiAudioStreamRecordParams* other);
  friend void swap(EnableMultiAudioStreamRecordParams& a, EnableMultiAudioStreamRecordParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableMultiAudioStreamRecordParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableMultiAudioStreamRecordParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableMultiAudioStreamRecordParams& from);
  void MergeFrom(const EnableMultiAudioStreamRecordParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableMultiAudioStreamRecordParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAddTimestampWatermarkParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAddTimestampWatermarkParams) */ {
 public:
  EnableAddTimestampWatermarkParams();
  virtual ~EnableAddTimestampWatermarkParams();

  EnableAddTimestampWatermarkParams(const EnableAddTimestampWatermarkParams& from);

  inline EnableAddTimestampWatermarkParams& operator=(const EnableAddTimestampWatermarkParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAddTimestampWatermarkParams(EnableAddTimestampWatermarkParams&& from) noexcept
    : EnableAddTimestampWatermarkParams() {
    *this = ::std::move(from);
  }

  inline EnableAddTimestampWatermarkParams& operator=(EnableAddTimestampWatermarkParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAddTimestampWatermarkParams& default_instance();

  static inline const EnableAddTimestampWatermarkParams* internal_default_instance() {
    return reinterpret_cast<const EnableAddTimestampWatermarkParams*>(
               &_EnableAddTimestampWatermarkParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(EnableAddTimestampWatermarkParams* other);
  friend void swap(EnableAddTimestampWatermarkParams& a, EnableAddTimestampWatermarkParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAddTimestampWatermarkParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAddTimestampWatermarkParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAddTimestampWatermarkParams& from);
  void MergeFrom(const EnableAddTimestampWatermarkParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAddTimestampWatermarkParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableOptimizeFor3rdPartyVideoEditorParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams) */ {
 public:
  EnableOptimizeFor3rdPartyVideoEditorParams();
  virtual ~EnableOptimizeFor3rdPartyVideoEditorParams();

  EnableOptimizeFor3rdPartyVideoEditorParams(const EnableOptimizeFor3rdPartyVideoEditorParams& from);

  inline EnableOptimizeFor3rdPartyVideoEditorParams& operator=(const EnableOptimizeFor3rdPartyVideoEditorParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableOptimizeFor3rdPartyVideoEditorParams(EnableOptimizeFor3rdPartyVideoEditorParams&& from) noexcept
    : EnableOptimizeFor3rdPartyVideoEditorParams() {
    *this = ::std::move(from);
  }

  inline EnableOptimizeFor3rdPartyVideoEditorParams& operator=(EnableOptimizeFor3rdPartyVideoEditorParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableOptimizeFor3rdPartyVideoEditorParams& default_instance();

  static inline const EnableOptimizeFor3rdPartyVideoEditorParams* internal_default_instance() {
    return reinterpret_cast<const EnableOptimizeFor3rdPartyVideoEditorParams*>(
               &_EnableOptimizeFor3rdPartyVideoEditorParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(EnableOptimizeFor3rdPartyVideoEditorParams* other);
  friend void swap(EnableOptimizeFor3rdPartyVideoEditorParams& a, EnableOptimizeFor3rdPartyVideoEditorParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableOptimizeFor3rdPartyVideoEditorParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableOptimizeFor3rdPartyVideoEditorParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableOptimizeFor3rdPartyVideoEditorParams& from);
  void MergeFrom(const EnableOptimizeFor3rdPartyVideoEditorParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableOptimizeFor3rdPartyVideoEditorParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableShowVideoThumbnailWhenShareParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams) */ {
 public:
  EnableShowVideoThumbnailWhenShareParams();
  virtual ~EnableShowVideoThumbnailWhenShareParams();

  EnableShowVideoThumbnailWhenShareParams(const EnableShowVideoThumbnailWhenShareParams& from);

  inline EnableShowVideoThumbnailWhenShareParams& operator=(const EnableShowVideoThumbnailWhenShareParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableShowVideoThumbnailWhenShareParams(EnableShowVideoThumbnailWhenShareParams&& from) noexcept
    : EnableShowVideoThumbnailWhenShareParams() {
    *this = ::std::move(from);
  }

  inline EnableShowVideoThumbnailWhenShareParams& operator=(EnableShowVideoThumbnailWhenShareParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableShowVideoThumbnailWhenShareParams& default_instance();

  static inline const EnableShowVideoThumbnailWhenShareParams* internal_default_instance() {
    return reinterpret_cast<const EnableShowVideoThumbnailWhenShareParams*>(
               &_EnableShowVideoThumbnailWhenShareParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(EnableShowVideoThumbnailWhenShareParams* other);
  friend void swap(EnableShowVideoThumbnailWhenShareParams& a, EnableShowVideoThumbnailWhenShareParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableShowVideoThumbnailWhenShareParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableShowVideoThumbnailWhenShareParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableShowVideoThumbnailWhenShareParams& from);
  void MergeFrom(const EnableShowVideoThumbnailWhenShareParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableShowVideoThumbnailWhenShareParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnablePlaceVideoNextToShareInRecordParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams) */ {
 public:
  EnablePlaceVideoNextToShareInRecordParams();
  virtual ~EnablePlaceVideoNextToShareInRecordParams();

  EnablePlaceVideoNextToShareInRecordParams(const EnablePlaceVideoNextToShareInRecordParams& from);

  inline EnablePlaceVideoNextToShareInRecordParams& operator=(const EnablePlaceVideoNextToShareInRecordParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnablePlaceVideoNextToShareInRecordParams(EnablePlaceVideoNextToShareInRecordParams&& from) noexcept
    : EnablePlaceVideoNextToShareInRecordParams() {
    *this = ::std::move(from);
  }

  inline EnablePlaceVideoNextToShareInRecordParams& operator=(EnablePlaceVideoNextToShareInRecordParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnablePlaceVideoNextToShareInRecordParams& default_instance();

  static inline const EnablePlaceVideoNextToShareInRecordParams* internal_default_instance() {
    return reinterpret_cast<const EnablePlaceVideoNextToShareInRecordParams*>(
               &_EnablePlaceVideoNextToShareInRecordParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(EnablePlaceVideoNextToShareInRecordParams* other);
  friend void swap(EnablePlaceVideoNextToShareInRecordParams& a, EnablePlaceVideoNextToShareInRecordParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnablePlaceVideoNextToShareInRecordParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnablePlaceVideoNextToShareInRecordParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnablePlaceVideoNextToShareInRecordParams& from);
  void MergeFrom(const EnablePlaceVideoNextToShareInRecordParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnablePlaceVideoNextToShareInRecordParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableAdvancedFeatures4GeneralSettingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams) */ {
 public:
  DisableAdvancedFeatures4GeneralSettingParams();
  virtual ~DisableAdvancedFeatures4GeneralSettingParams();

  DisableAdvancedFeatures4GeneralSettingParams(const DisableAdvancedFeatures4GeneralSettingParams& from);

  inline DisableAdvancedFeatures4GeneralSettingParams& operator=(const DisableAdvancedFeatures4GeneralSettingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableAdvancedFeatures4GeneralSettingParams(DisableAdvancedFeatures4GeneralSettingParams&& from) noexcept
    : DisableAdvancedFeatures4GeneralSettingParams() {
    *this = ::std::move(from);
  }

  inline DisableAdvancedFeatures4GeneralSettingParams& operator=(DisableAdvancedFeatures4GeneralSettingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableAdvancedFeatures4GeneralSettingParams& default_instance();

  static inline const DisableAdvancedFeatures4GeneralSettingParams* internal_default_instance() {
    return reinterpret_cast<const DisableAdvancedFeatures4GeneralSettingParams*>(
               &_DisableAdvancedFeatures4GeneralSettingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(DisableAdvancedFeatures4GeneralSettingParams* other);
  friend void swap(DisableAdvancedFeatures4GeneralSettingParams& a, DisableAdvancedFeatures4GeneralSettingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableAdvancedFeatures4GeneralSettingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableAdvancedFeatures4GeneralSettingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableAdvancedFeatures4GeneralSettingParams& from);
  void MergeFrom(const DisableAdvancedFeatures4GeneralSettingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableAdvancedFeatures4GeneralSettingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisableAccountSettingTabPageParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.DisableAccountSettingTabPageParams) */ {
 public:
  DisableAccountSettingTabPageParams();
  virtual ~DisableAccountSettingTabPageParams();

  DisableAccountSettingTabPageParams(const DisableAccountSettingTabPageParams& from);

  inline DisableAccountSettingTabPageParams& operator=(const DisableAccountSettingTabPageParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisableAccountSettingTabPageParams(DisableAccountSettingTabPageParams&& from) noexcept
    : DisableAccountSettingTabPageParams() {
    *this = ::std::move(from);
  }

  inline DisableAccountSettingTabPageParams& operator=(DisableAccountSettingTabPageParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisableAccountSettingTabPageParams& default_instance();

  static inline const DisableAccountSettingTabPageParams* internal_default_instance() {
    return reinterpret_cast<const DisableAccountSettingTabPageParams*>(
               &_DisableAccountSettingTabPageParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(DisableAccountSettingTabPageParams* other);
  friend void swap(DisableAccountSettingTabPageParams& a, DisableAccountSettingTabPageParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisableAccountSettingTabPageParams* New() const PROTOBUF_FINAL { return New(NULL); }

  DisableAccountSettingTabPageParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DisableAccountSettingTabPageParams& from);
  void MergeFrom(const DisableAccountSettingTabPageParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableAccountSettingTabPageParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bDisable = 1;
  bool has_bdisable() const;
  void clear_bdisable();
  static const int kBDisableFieldNumber = 1;
  bool bdisable() const;
  void set_bdisable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
 private:
  void set_has_bdisable();
  void clear_has_bdisable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bdisable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfSettingDialogShownTabPageParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams) */ {
 public:
  ConfSettingDialogShownTabPageParams();
  virtual ~ConfSettingDialogShownTabPageParams();

  ConfSettingDialogShownTabPageParams(const ConfSettingDialogShownTabPageParams& from);

  inline ConfSettingDialogShownTabPageParams& operator=(const ConfSettingDialogShownTabPageParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfSettingDialogShownTabPageParams(ConfSettingDialogShownTabPageParams&& from) noexcept
    : ConfSettingDialogShownTabPageParams() {
    *this = ::std::move(from);
  }

  inline ConfSettingDialogShownTabPageParams& operator=(ConfSettingDialogShownTabPageParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConfSettingDialogShownTabPageParams& default_instance();

  static inline const ConfSettingDialogShownTabPageParams* internal_default_instance() {
    return reinterpret_cast<const ConfSettingDialogShownTabPageParams*>(
               &_ConfSettingDialogShownTabPageParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(ConfSettingDialogShownTabPageParams* other);
  friend void swap(ConfSettingDialogShownTabPageParams& a, ConfSettingDialogShownTabPageParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfSettingDialogShownTabPageParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfSettingDialogShownTabPageParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ConfSettingDialogShownTabPageParams& from);
  void MergeFrom(const ConfSettingDialogShownTabPageParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfSettingDialogShownTabPageParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 showOption = 1;
  bool has_showoption() const;
  void clear_showoption();
  static const int kShowOptionFieldNumber = 1;
  ::google::protobuf::uint64 showoption() const;
  void set_showoption(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
 private:
  void set_has_showoption();
  void clear_has_showoption();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 showoption_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectVideoCameraParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SelectVideoCameraParams) */ {
 public:
  SelectVideoCameraParams();
  virtual ~SelectVideoCameraParams();

  SelectVideoCameraParams(const SelectVideoCameraParams& from);

  inline SelectVideoCameraParams& operator=(const SelectVideoCameraParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectVideoCameraParams(SelectVideoCameraParams&& from) noexcept
    : SelectVideoCameraParams() {
    *this = ::std::move(from);
  }

  inline SelectVideoCameraParams& operator=(SelectVideoCameraParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SelectVideoCameraParams& default_instance();

  static inline const SelectVideoCameraParams* internal_default_instance() {
    return reinterpret_cast<const SelectVideoCameraParams*>(
               &_SelectVideoCameraParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(SelectVideoCameraParams* other);
  friend void swap(SelectVideoCameraParams& a, SelectVideoCameraParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectVideoCameraParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectVideoCameraParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SelectVideoCameraParams& from);
  void MergeFrom(const SelectVideoCameraParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectVideoCameraParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceID = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SelectVideoCameraParams)
 private:
  void set_has_deviceid();
  void clear_has_deviceid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableVideoMirrorEffectParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableVideoMirrorEffectParams) */ {
 public:
  EnableVideoMirrorEffectParams();
  virtual ~EnableVideoMirrorEffectParams();

  EnableVideoMirrorEffectParams(const EnableVideoMirrorEffectParams& from);

  inline EnableVideoMirrorEffectParams& operator=(const EnableVideoMirrorEffectParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableVideoMirrorEffectParams(EnableVideoMirrorEffectParams&& from) noexcept
    : EnableVideoMirrorEffectParams() {
    *this = ::std::move(from);
  }

  inline EnableVideoMirrorEffectParams& operator=(EnableVideoMirrorEffectParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableVideoMirrorEffectParams& default_instance();

  static inline const EnableVideoMirrorEffectParams* internal_default_instance() {
    return reinterpret_cast<const EnableVideoMirrorEffectParams*>(
               &_EnableVideoMirrorEffectParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(EnableVideoMirrorEffectParams* other);
  friend void swap(EnableVideoMirrorEffectParams& a, EnableVideoMirrorEffectParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableVideoMirrorEffectParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableVideoMirrorEffectParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableVideoMirrorEffectParams& from);
  void MergeFrom(const EnableVideoMirrorEffectParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableVideoMirrorEffectParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableFaceBeautyEffectParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableFaceBeautyEffectParams) */ {
 public:
  EnableFaceBeautyEffectParams();
  virtual ~EnableFaceBeautyEffectParams();

  EnableFaceBeautyEffectParams(const EnableFaceBeautyEffectParams& from);

  inline EnableFaceBeautyEffectParams& operator=(const EnableFaceBeautyEffectParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableFaceBeautyEffectParams(EnableFaceBeautyEffectParams&& from) noexcept
    : EnableFaceBeautyEffectParams() {
    *this = ::std::move(from);
  }

  inline EnableFaceBeautyEffectParams& operator=(EnableFaceBeautyEffectParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableFaceBeautyEffectParams& default_instance();

  static inline const EnableFaceBeautyEffectParams* internal_default_instance() {
    return reinterpret_cast<const EnableFaceBeautyEffectParams*>(
               &_EnableFaceBeautyEffectParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(EnableFaceBeautyEffectParams* other);
  friend void swap(EnableFaceBeautyEffectParams& a, EnableFaceBeautyEffectParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableFaceBeautyEffectParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableFaceBeautyEffectParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableFaceBeautyEffectParams& from);
  void MergeFrom(const EnableFaceBeautyEffectParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableFaceBeautyEffectParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableHDVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableHDVideoParams) */ {
 public:
  EnableHDVideoParams();
  virtual ~EnableHDVideoParams();

  EnableHDVideoParams(const EnableHDVideoParams& from);

  inline EnableHDVideoParams& operator=(const EnableHDVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableHDVideoParams(EnableHDVideoParams&& from) noexcept
    : EnableHDVideoParams() {
    *this = ::std::move(from);
  }

  inline EnableHDVideoParams& operator=(EnableHDVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableHDVideoParams& default_instance();

  static inline const EnableHDVideoParams* internal_default_instance() {
    return reinterpret_cast<const EnableHDVideoParams*>(
               &_EnableHDVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(EnableHDVideoParams* other);
  friend void swap(EnableHDVideoParams& a, EnableHDVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableHDVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableHDVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableHDVideoParams& from);
  void MergeFrom(const EnableHDVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableHDVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableHDVideoParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAlwaysShowNameOnVideoParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams) */ {
 public:
  EnableAlwaysShowNameOnVideoParams();
  virtual ~EnableAlwaysShowNameOnVideoParams();

  EnableAlwaysShowNameOnVideoParams(const EnableAlwaysShowNameOnVideoParams& from);

  inline EnableAlwaysShowNameOnVideoParams& operator=(const EnableAlwaysShowNameOnVideoParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAlwaysShowNameOnVideoParams(EnableAlwaysShowNameOnVideoParams&& from) noexcept
    : EnableAlwaysShowNameOnVideoParams() {
    *this = ::std::move(from);
  }

  inline EnableAlwaysShowNameOnVideoParams& operator=(EnableAlwaysShowNameOnVideoParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAlwaysShowNameOnVideoParams& default_instance();

  static inline const EnableAlwaysShowNameOnVideoParams* internal_default_instance() {
    return reinterpret_cast<const EnableAlwaysShowNameOnVideoParams*>(
               &_EnableAlwaysShowNameOnVideoParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(EnableAlwaysShowNameOnVideoParams* other);
  friend void swap(EnableAlwaysShowNameOnVideoParams& a, EnableAlwaysShowNameOnVideoParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAlwaysShowNameOnVideoParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAlwaysShowNameOnVideoParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAlwaysShowNameOnVideoParams& from);
  void MergeFrom(const EnableAlwaysShowNameOnVideoParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAlwaysShowNameOnVideoParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableVideoPreviewDialogParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableVideoPreviewDialogParams) */ {
 public:
  EnableVideoPreviewDialogParams();
  virtual ~EnableVideoPreviewDialogParams();

  EnableVideoPreviewDialogParams(const EnableVideoPreviewDialogParams& from);

  inline EnableVideoPreviewDialogParams& operator=(const EnableVideoPreviewDialogParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableVideoPreviewDialogParams(EnableVideoPreviewDialogParams&& from) noexcept
    : EnableVideoPreviewDialogParams() {
    *this = ::std::move(from);
  }

  inline EnableVideoPreviewDialogParams& operator=(EnableVideoPreviewDialogParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableVideoPreviewDialogParams& default_instance();

  static inline const EnableVideoPreviewDialogParams* internal_default_instance() {
    return reinterpret_cast<const EnableVideoPreviewDialogParams*>(
               &_EnableVideoPreviewDialogParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(EnableVideoPreviewDialogParams* other);
  friend void swap(EnableVideoPreviewDialogParams& a, EnableVideoPreviewDialogParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableVideoPreviewDialogParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableVideoPreviewDialogParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableVideoPreviewDialogParams& from);
  void MergeFrom(const EnableVideoPreviewDialogParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableVideoPreviewDialogParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAutoTurnOffVideoWhenJoinMeetingParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams) */ {
 public:
  EnableAutoTurnOffVideoWhenJoinMeetingParams();
  virtual ~EnableAutoTurnOffVideoWhenJoinMeetingParams();

  EnableAutoTurnOffVideoWhenJoinMeetingParams(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from);

  inline EnableAutoTurnOffVideoWhenJoinMeetingParams& operator=(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAutoTurnOffVideoWhenJoinMeetingParams(EnableAutoTurnOffVideoWhenJoinMeetingParams&& from) noexcept
    : EnableAutoTurnOffVideoWhenJoinMeetingParams() {
    *this = ::std::move(from);
  }

  inline EnableAutoTurnOffVideoWhenJoinMeetingParams& operator=(EnableAutoTurnOffVideoWhenJoinMeetingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAutoTurnOffVideoWhenJoinMeetingParams& default_instance();

  static inline const EnableAutoTurnOffVideoWhenJoinMeetingParams* internal_default_instance() {
    return reinterpret_cast<const EnableAutoTurnOffVideoWhenJoinMeetingParams*>(
               &_EnableAutoTurnOffVideoWhenJoinMeetingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(EnableAutoTurnOffVideoWhenJoinMeetingParams* other);
  friend void swap(EnableAutoTurnOffVideoWhenJoinMeetingParams& a, EnableAutoTurnOffVideoWhenJoinMeetingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAutoTurnOffVideoWhenJoinMeetingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAutoTurnOffVideoWhenJoinMeetingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from);
  void MergeFrom(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAutoTurnOffVideoWhenJoinMeetingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableAlwaysUse16v9Params : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableAlwaysUse16v9Params) */ {
 public:
  EnableAlwaysUse16v9Params();
  virtual ~EnableAlwaysUse16v9Params();

  EnableAlwaysUse16v9Params(const EnableAlwaysUse16v9Params& from);

  inline EnableAlwaysUse16v9Params& operator=(const EnableAlwaysUse16v9Params& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableAlwaysUse16v9Params(EnableAlwaysUse16v9Params&& from) noexcept
    : EnableAlwaysUse16v9Params() {
    *this = ::std::move(from);
  }

  inline EnableAlwaysUse16v9Params& operator=(EnableAlwaysUse16v9Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableAlwaysUse16v9Params& default_instance();

  static inline const EnableAlwaysUse16v9Params* internal_default_instance() {
    return reinterpret_cast<const EnableAlwaysUse16v9Params*>(
               &_EnableAlwaysUse16v9Params_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(EnableAlwaysUse16v9Params* other);
  friend void swap(EnableAlwaysUse16v9Params& a, EnableAlwaysUse16v9Params& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableAlwaysUse16v9Params* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableAlwaysUse16v9Params* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableAlwaysUse16v9Params& from);
  void MergeFrom(const EnableAlwaysUse16v9Params& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableAlwaysUse16v9Params* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableSpotlightSelfParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableSpotlightSelfParams) */ {
 public:
  EnableSpotlightSelfParams();
  virtual ~EnableSpotlightSelfParams();

  EnableSpotlightSelfParams(const EnableSpotlightSelfParams& from);

  inline EnableSpotlightSelfParams& operator=(const EnableSpotlightSelfParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableSpotlightSelfParams(EnableSpotlightSelfParams&& from) noexcept
    : EnableSpotlightSelfParams() {
    *this = ::std::move(from);
  }

  inline EnableSpotlightSelfParams& operator=(EnableSpotlightSelfParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableSpotlightSelfParams& default_instance();

  static inline const EnableSpotlightSelfParams* internal_default_instance() {
    return reinterpret_cast<const EnableSpotlightSelfParams*>(
               &_EnableSpotlightSelfParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(EnableSpotlightSelfParams* other);
  friend void swap(EnableSpotlightSelfParams& a, EnableSpotlightSelfParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableSpotlightSelfParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableSpotlightSelfParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableSpotlightSelfParams& from);
  void MergeFrom(const EnableSpotlightSelfParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableSpotlightSelfParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableSpotlightSelfParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableHardwareEncodeParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableHardwareEncodeParams) */ {
 public:
  EnableHardwareEncodeParams();
  virtual ~EnableHardwareEncodeParams();

  EnableHardwareEncodeParams(const EnableHardwareEncodeParams& from);

  inline EnableHardwareEncodeParams& operator=(const EnableHardwareEncodeParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableHardwareEncodeParams(EnableHardwareEncodeParams&& from) noexcept
    : EnableHardwareEncodeParams() {
    *this = ::std::move(from);
  }

  inline EnableHardwareEncodeParams& operator=(EnableHardwareEncodeParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableHardwareEncodeParams& default_instance();

  static inline const EnableHardwareEncodeParams* internal_default_instance() {
    return reinterpret_cast<const EnableHardwareEncodeParams*>(
               &_EnableHardwareEncodeParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(EnableHardwareEncodeParams* other);
  friend void swap(EnableHardwareEncodeParams& a, EnableHardwareEncodeParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableHardwareEncodeParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableHardwareEncodeParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableHardwareEncodeParams& from);
  void MergeFrom(const EnableHardwareEncodeParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableHardwareEncodeParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // optional int32 encodeType = 2;
  bool has_encodetype() const;
  void clear_encodetype();
  static const int kEncodeTypeFieldNumber = 2;
  ::google::protobuf::int32 encodetype() const;
  void set_encodetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableHardwareEncodeParams)
 private:
  void set_has_benable();
  void clear_has_benable();
  void set_has_encodetype();
  void clear_has_encodetype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  ::google::protobuf::int32 encodetype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsHardwareEncodeEnabledParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.IsHardwareEncodeEnabledParams) */ {
 public:
  IsHardwareEncodeEnabledParams();
  virtual ~IsHardwareEncodeEnabledParams();

  IsHardwareEncodeEnabledParams(const IsHardwareEncodeEnabledParams& from);

  inline IsHardwareEncodeEnabledParams& operator=(const IsHardwareEncodeEnabledParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsHardwareEncodeEnabledParams(IsHardwareEncodeEnabledParams&& from) noexcept
    : IsHardwareEncodeEnabledParams() {
    *this = ::std::move(from);
  }

  inline IsHardwareEncodeEnabledParams& operator=(IsHardwareEncodeEnabledParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const IsHardwareEncodeEnabledParams& default_instance();

  static inline const IsHardwareEncodeEnabledParams* internal_default_instance() {
    return reinterpret_cast<const IsHardwareEncodeEnabledParams*>(
               &_IsHardwareEncodeEnabledParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(IsHardwareEncodeEnabledParams* other);
  friend void swap(IsHardwareEncodeEnabledParams& a, IsHardwareEncodeEnabledParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsHardwareEncodeEnabledParams* New() const PROTOBUF_FINAL { return New(NULL); }

  IsHardwareEncodeEnabledParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IsHardwareEncodeEnabledParams& from);
  void MergeFrom(const IsHardwareEncodeEnabledParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsHardwareEncodeEnabledParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 encodeType = 1;
  bool has_encodetype() const;
  void clear_encodetype();
  static const int kEncodeTypeFieldNumber = 1;
  ::google::protobuf::int32 encodetype() const;
  void set_encodetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
 private:
  void set_has_encodetype();
  void clear_has_encodetype();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 encodetype_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Enable49VideoesInGallaryViewParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams) */ {
 public:
  Enable49VideoesInGallaryViewParams();
  virtual ~Enable49VideoesInGallaryViewParams();

  Enable49VideoesInGallaryViewParams(const Enable49VideoesInGallaryViewParams& from);

  inline Enable49VideoesInGallaryViewParams& operator=(const Enable49VideoesInGallaryViewParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Enable49VideoesInGallaryViewParams(Enable49VideoesInGallaryViewParams&& from) noexcept
    : Enable49VideoesInGallaryViewParams() {
    *this = ::std::move(from);
  }

  inline Enable49VideoesInGallaryViewParams& operator=(Enable49VideoesInGallaryViewParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Enable49VideoesInGallaryViewParams& default_instance();

  static inline const Enable49VideoesInGallaryViewParams* internal_default_instance() {
    return reinterpret_cast<const Enable49VideoesInGallaryViewParams*>(
               &_Enable49VideoesInGallaryViewParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(Enable49VideoesInGallaryViewParams* other);
  friend void swap(Enable49VideoesInGallaryViewParams& a, Enable49VideoesInGallaryViewParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Enable49VideoesInGallaryViewParams* New() const PROTOBUF_FINAL { return New(NULL); }

  Enable49VideoesInGallaryViewParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Enable49VideoesInGallaryViewParams& from);
  void MergeFrom(const Enable49VideoesInGallaryViewParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Enable49VideoesInGallaryViewParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnableHideNoVideoUsersOnWallViewParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams) */ {
 public:
  EnableHideNoVideoUsersOnWallViewParams();
  virtual ~EnableHideNoVideoUsersOnWallViewParams();

  EnableHideNoVideoUsersOnWallViewParams(const EnableHideNoVideoUsersOnWallViewParams& from);

  inline EnableHideNoVideoUsersOnWallViewParams& operator=(const EnableHideNoVideoUsersOnWallViewParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnableHideNoVideoUsersOnWallViewParams(EnableHideNoVideoUsersOnWallViewParams&& from) noexcept
    : EnableHideNoVideoUsersOnWallViewParams() {
    *this = ::std::move(from);
  }

  inline EnableHideNoVideoUsersOnWallViewParams& operator=(EnableHideNoVideoUsersOnWallViewParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EnableHideNoVideoUsersOnWallViewParams& default_instance();

  static inline const EnableHideNoVideoUsersOnWallViewParams* internal_default_instance() {
    return reinterpret_cast<const EnableHideNoVideoUsersOnWallViewParams*>(
               &_EnableHideNoVideoUsersOnWallViewParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(EnableHideNoVideoUsersOnWallViewParams* other);
  friend void swap(EnableHideNoVideoUsersOnWallViewParams& a, EnableHideNoVideoUsersOnWallViewParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnableHideNoVideoUsersOnWallViewParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EnableHideNoVideoUsersOnWallViewParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const EnableHideNoVideoUsersOnWallViewParams& from);
  void MergeFrom(const EnableHideNoVideoUsersOnWallViewParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableHideNoVideoUsersOnWallViewParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bEnable = 1;
  bool has_benable() const;
  void clear_benable();
  static const int kBEnableFieldNumber = 1;
  bool benable() const;
  void set_benable(bool value);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
 private:
  void set_has_benable();
  void clear_has_benable();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool benable_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetTeamIdentifierParams : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.electron.sdk.proto.SetTeamIdentifierParams) */ {
 public:
  SetTeamIdentifierParams();
  virtual ~SetTeamIdentifierParams();

  SetTeamIdentifierParams(const SetTeamIdentifierParams& from);

  inline SetTeamIdentifierParams& operator=(const SetTeamIdentifierParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTeamIdentifierParams(SetTeamIdentifierParams&& from) noexcept
    : SetTeamIdentifierParams() {
    *this = ::std::move(from);
  }

  inline SetTeamIdentifierParams& operator=(SetTeamIdentifierParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SetTeamIdentifierParams& default_instance();

  static inline const SetTeamIdentifierParams* internal_default_instance() {
    return reinterpret_cast<const SetTeamIdentifierParams*>(
               &_SetTeamIdentifierParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    196;

  void Swap(SetTeamIdentifierParams* other);
  friend void swap(SetTeamIdentifierParams& a, SetTeamIdentifierParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTeamIdentifierParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SetTeamIdentifierParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const SetTeamIdentifierParams& from);
  void MergeFrom(const SetTeamIdentifierParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetTeamIdentifierParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string identifier = 1;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_identifier(::std::string&& value);
  #endif
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // @@protoc_insertion_point(class_scope:com.electron.sdk.proto.SetTeamIdentifierParams)
 private:
  void set_has_identifier();
  void clear_has_identifier();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  friend struct protobuf_electron_5fsdk_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InitSDKParams

// optional string path = 1;
inline bool InitSDKParams::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitSDKParams::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitSDKParams::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitSDKParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& InitSDKParams::path() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.path)
  return path_.GetNoArena();
}
inline void InitSDKParams::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.path)
}
#if LANG_CXX11
inline void InitSDKParams::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.path)
}
#endif
inline void InitSDKParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.path)
}
inline void InitSDKParams::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.path)
}
inline ::std::string* InitSDKParams::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSDKParams::release_path() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSDKParams::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.path)
}

// optional string domain = 2;
inline bool InitSDKParams::has_domain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitSDKParams::set_has_domain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitSDKParams::clear_has_domain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitSDKParams::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& InitSDKParams::domain() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.domain)
  return domain_.GetNoArena();
}
inline void InitSDKParams::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.domain)
}
#if LANG_CXX11
inline void InitSDKParams::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.domain)
}
#endif
inline void InitSDKParams::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.domain)
}
inline void InitSDKParams::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.domain)
}
inline ::std::string* InitSDKParams::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSDKParams::release_domain() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSDKParams::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.domain)
}

// optional string customizedLanguageName = 3;
inline bool InitSDKParams::has_customizedlanguagename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitSDKParams::set_has_customizedlanguagename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitSDKParams::clear_has_customizedlanguagename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitSDKParams::clear_customizedlanguagename() {
  customizedlanguagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_customizedlanguagename();
}
inline const ::std::string& InitSDKParams::customizedlanguagename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  return customizedlanguagename_.GetNoArena();
}
inline void InitSDKParams::set_customizedlanguagename(const ::std::string& value) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
#if LANG_CXX11
inline void InitSDKParams::set_customizedlanguagename(::std::string&& value) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
#endif
inline void InitSDKParams::set_customizedlanguagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
inline void InitSDKParams::set_customizedlanguagename(const char* value, size_t size) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
inline ::std::string* InitSDKParams::mutable_customizedlanguagename() {
  set_has_customizedlanguagename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  return customizedlanguagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSDKParams::release_customizedlanguagename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  clear_has_customizedlanguagename();
  return customizedlanguagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSDKParams::set_allocated_customizedlanguagename(::std::string* customizedlanguagename) {
  if (customizedlanguagename != NULL) {
    set_has_customizedlanguagename();
  } else {
    clear_has_customizedlanguagename();
  }
  customizedlanguagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customizedlanguagename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}

// optional string customizedLanguageInfo = 4;
inline bool InitSDKParams::has_customizedlanguageinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitSDKParams::set_has_customizedlanguageinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitSDKParams::clear_has_customizedlanguageinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitSDKParams::clear_customizedlanguageinfo() {
  customizedlanguageinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_customizedlanguageinfo();
}
inline const ::std::string& InitSDKParams::customizedlanguageinfo() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  return customizedlanguageinfo_.GetNoArena();
}
inline void InitSDKParams::set_customizedlanguageinfo(const ::std::string& value) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
#if LANG_CXX11
inline void InitSDKParams::set_customizedlanguageinfo(::std::string&& value) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
#endif
inline void InitSDKParams::set_customizedlanguageinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
inline void InitSDKParams::set_customizedlanguageinfo(const char* value, size_t size) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
inline ::std::string* InitSDKParams::mutable_customizedlanguageinfo() {
  set_has_customizedlanguageinfo();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  return customizedlanguageinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSDKParams::release_customizedlanguageinfo() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  clear_has_customizedlanguageinfo();
  return customizedlanguageinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSDKParams::set_allocated_customizedlanguageinfo(::std::string* customizedlanguageinfo) {
  if (customizedlanguageinfo != NULL) {
    set_has_customizedlanguageinfo();
  } else {
    clear_has_customizedlanguageinfo();
  }
  customizedlanguageinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customizedlanguageinfo);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}

// optional int32 customizedLanguageType = 5;
inline bool InitSDKParams::has_customizedlanguagetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InitSDKParams::set_has_customizedlanguagetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InitSDKParams::clear_has_customizedlanguagetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InitSDKParams::clear_customizedlanguagetype() {
  customizedlanguagetype_ = 0;
  clear_has_customizedlanguagetype();
}
inline ::google::protobuf::int32 InitSDKParams::customizedlanguagetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageType)
  return customizedlanguagetype_;
}
inline void InitSDKParams::set_customizedlanguagetype(::google::protobuf::int32 value) {
  set_has_customizedlanguagetype();
  customizedlanguagetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageType)
}

// optional string strSupportUrl = 6;
inline bool InitSDKParams::has_strsupporturl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InitSDKParams::set_has_strsupporturl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InitSDKParams::clear_has_strsupporturl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InitSDKParams::clear_strsupporturl() {
  strsupporturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strsupporturl();
}
inline const ::std::string& InitSDKParams::strsupporturl() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  return strsupporturl_.GetNoArena();
}
inline void InitSDKParams::set_strsupporturl(const ::std::string& value) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
#if LANG_CXX11
inline void InitSDKParams::set_strsupporturl(::std::string&& value) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
#endif
inline void InitSDKParams::set_strsupporturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
inline void InitSDKParams::set_strsupporturl(const char* value, size_t size) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
inline ::std::string* InitSDKParams::mutable_strsupporturl() {
  set_has_strsupporturl();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  return strsupporturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSDKParams::release_strsupporturl() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  clear_has_strsupporturl();
  return strsupporturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSDKParams::set_allocated_strsupporturl(::std::string* strsupporturl) {
  if (strsupporturl != NULL) {
    set_has_strsupporturl();
  } else {
    clear_has_strsupporturl();
  }
  strsupporturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsupporturl);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}

// optional int32 langID = 7;
inline bool InitSDKParams::has_langid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InitSDKParams::set_has_langid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InitSDKParams::clear_has_langid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InitSDKParams::clear_langid() {
  langid_ = 0;
  clear_has_langid();
}
inline ::google::protobuf::int32 InitSDKParams::langid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.langID)
  return langid_;
}
inline void InitSDKParams::set_langid(::google::protobuf::int32 value) {
  set_has_langid();
  langid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.langID)
}

// optional bool enableLog = 8;
inline bool InitSDKParams::has_enablelog() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InitSDKParams::set_has_enablelog() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InitSDKParams::clear_has_enablelog() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InitSDKParams::clear_enablelog() {
  enablelog_ = false;
  clear_has_enablelog();
}
inline bool InitSDKParams::enablelog() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableLog)
  return enablelog_;
}
inline void InitSDKParams::set_enablelog(bool value) {
  set_has_enablelog();
  enablelog_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableLog)
}

// optional int32 appLocale = 9;
inline bool InitSDKParams::has_applocale() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InitSDKParams::set_has_applocale() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InitSDKParams::clear_has_applocale() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InitSDKParams::clear_applocale() {
  applocale_ = 0;
  clear_has_applocale();
}
inline ::google::protobuf::int32 InitSDKParams::applocale() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.appLocale)
  return applocale_;
}
inline void InitSDKParams::set_applocale(::google::protobuf::int32 value) {
  set_has_applocale();
  applocale_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.appLocale)
}

// optional int32 logFileSize = 10;
inline bool InitSDKParams::has_logfilesize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InitSDKParams::set_has_logfilesize() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InitSDKParams::clear_has_logfilesize() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InitSDKParams::clear_logfilesize() {
  logfilesize_ = 0;
  clear_has_logfilesize();
}
inline ::google::protobuf::int32 InitSDKParams::logfilesize() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.logFileSize)
  return logfilesize_;
}
inline void InitSDKParams::set_logfilesize(::google::protobuf::int32 value) {
  set_has_logfilesize();
  logfilesize_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.logFileSize)
}

// optional bool enableGeneralDump = 11;
inline bool InitSDKParams::has_enablegeneraldump() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void InitSDKParams::set_has_enablegeneraldump() {
  _has_bits_[0] |= 0x00000400u;
}
inline void InitSDKParams::clear_has_enablegeneraldump() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void InitSDKParams::clear_enablegeneraldump() {
  enablegeneraldump_ = false;
  clear_has_enablegeneraldump();
}
inline bool InitSDKParams::enablegeneraldump() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableGeneralDump)
  return enablegeneraldump_;
}
inline void InitSDKParams::set_enablegeneraldump(bool value) {
  set_has_enablegeneraldump();
  enablegeneraldump_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableGeneralDump)
}

// optional bool permonitorAwarenessMode = 12;
inline bool InitSDKParams::has_permonitorawarenessmode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void InitSDKParams::set_has_permonitorawarenessmode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void InitSDKParams::clear_has_permonitorawarenessmode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void InitSDKParams::clear_permonitorawarenessmode() {
  permonitorawarenessmode_ = false;
  clear_has_permonitorawarenessmode();
}
inline bool InitSDKParams::permonitorawarenessmode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.permonitorAwarenessMode)
  return permonitorawarenessmode_;
}
inline void InitSDKParams::set_permonitorawarenessmode(bool value) {
  set_has_permonitorawarenessmode();
  permonitorawarenessmode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.permonitorAwarenessMode)
}

// optional int32 videoRenderMode = 13;
inline bool InitSDKParams::has_videorendermode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void InitSDKParams::set_has_videorendermode() {
  _has_bits_[0] |= 0x00002000u;
}
inline void InitSDKParams::clear_has_videorendermode() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void InitSDKParams::clear_videorendermode() {
  videorendermode_ = 0;
  clear_has_videorendermode();
}
inline ::google::protobuf::int32 InitSDKParams::videorendermode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoRenderMode)
  return videorendermode_;
}
inline void InitSDKParams::set_videorendermode(::google::protobuf::int32 value) {
  set_has_videorendermode();
  videorendermode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoRenderMode)
}

// optional int32 videoRawdataMemoryMode = 14;
inline bool InitSDKParams::has_videorawdatamemorymode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void InitSDKParams::set_has_videorawdatamemorymode() {
  _has_bits_[0] |= 0x00004000u;
}
inline void InitSDKParams::clear_has_videorawdatamemorymode() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void InitSDKParams::clear_videorawdatamemorymode() {
  videorawdatamemorymode_ = 0;
  clear_has_videorawdatamemorymode();
}
inline ::google::protobuf::int32 InitSDKParams::videorawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoRawdataMemoryMode)
  return videorawdatamemorymode_;
}
inline void InitSDKParams::set_videorawdatamemorymode(::google::protobuf::int32 value) {
  set_has_videorawdatamemorymode();
  videorawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoRawdataMemoryMode)
}

// optional int32 shareRawdataMemoryMode = 15;
inline bool InitSDKParams::has_sharerawdatamemorymode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void InitSDKParams::set_has_sharerawdatamemorymode() {
  _has_bits_[0] |= 0x00008000u;
}
inline void InitSDKParams::clear_has_sharerawdatamemorymode() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void InitSDKParams::clear_sharerawdatamemorymode() {
  sharerawdatamemorymode_ = 0;
  clear_has_sharerawdatamemorymode();
}
inline ::google::protobuf::int32 InitSDKParams::sharerawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.shareRawdataMemoryMode)
  return sharerawdatamemorymode_;
}
inline void InitSDKParams::set_sharerawdatamemorymode(::google::protobuf::int32 value) {
  set_has_sharerawdatamemorymode();
  sharerawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.shareRawdataMemoryMode)
}

// optional int32 audioRawdataMemoryMode = 16;
inline bool InitSDKParams::has_audiorawdatamemorymode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void InitSDKParams::set_has_audiorawdatamemorymode() {
  _has_bits_[0] |= 0x00010000u;
}
inline void InitSDKParams::clear_has_audiorawdatamemorymode() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void InitSDKParams::clear_audiorawdatamemorymode() {
  audiorawdatamemorymode_ = 0;
  clear_has_audiorawdatamemorymode();
}
inline ::google::protobuf::int32 InitSDKParams::audiorawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.audioRawdataMemoryMode)
  return audiorawdatamemorymode_;
}
inline void InitSDKParams::set_audiorawdatamemorymode(::google::protobuf::int32 value) {
  set_has_audiorawdatamemorymode();
  audiorawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.audioRawdataMemoryMode)
}

// optional bool enableRawdataIntermediateMode = 17;
inline bool InitSDKParams::has_enablerawdataintermediatemode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void InitSDKParams::set_has_enablerawdataintermediatemode() {
  _has_bits_[0] |= 0x00001000u;
}
inline void InitSDKParams::clear_has_enablerawdataintermediatemode() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void InitSDKParams::clear_enablerawdataintermediatemode() {
  enablerawdataintermediatemode_ = false;
  clear_has_enablerawdataintermediatemode();
}
inline bool InitSDKParams::enablerawdataintermediatemode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableRawdataIntermediateMode)
  return enablerawdataintermediatemode_;
}
inline void InitSDKParams::set_enablerawdataintermediatemode(bool value) {
  set_has_enablerawdataintermediatemode();
  enablerawdataintermediatemode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableRawdataIntermediateMode)
}

// optional int32 renderPostProcessing = 18;
inline bool InitSDKParams::has_renderpostprocessing() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void InitSDKParams::set_has_renderpostprocessing() {
  _has_bits_[0] |= 0x00020000u;
}
inline void InitSDKParams::clear_has_renderpostprocessing() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void InitSDKParams::clear_renderpostprocessing() {
  renderpostprocessing_ = 0;
  clear_has_renderpostprocessing();
}
inline ::google::protobuf::int32 InitSDKParams::renderpostprocessing() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.renderPostProcessing)
  return renderpostprocessing_;
}
inline void InitSDKParams::set_renderpostprocessing(::google::protobuf::int32 value) {
  set_has_renderpostprocessing();
  renderpostprocessing_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.renderPostProcessing)
}

// optional int32 videoCaptureMethod = 19;
inline bool InitSDKParams::has_videocapturemethod() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void InitSDKParams::set_has_videocapturemethod() {
  _has_bits_[0] |= 0x00040000u;
}
inline void InitSDKParams::clear_has_videocapturemethod() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void InitSDKParams::clear_videocapturemethod() {
  videocapturemethod_ = 0;
  clear_has_videocapturemethod();
}
inline ::google::protobuf::int32 InitSDKParams::videocapturemethod() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoCaptureMethod)
  return videocapturemethod_;
}
inline void InitSDKParams::set_videocapturemethod(::google::protobuf::int32 value) {
  set_has_videocapturemethod();
  videocapturemethod_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoCaptureMethod)
}

// -------------------------------------------------------------------

// AuthParams

// optional string key = 1;
inline bool AuthParams::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthParams::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthParams::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthParams::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& AuthParams::key() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthParams.key)
  return key_.GetNoArena();
}
inline void AuthParams::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthParams.key)
}
#if LANG_CXX11
inline void AuthParams::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthParams.key)
}
#endif
inline void AuthParams::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthParams.key)
}
inline void AuthParams::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthParams.key)
}
inline ::std::string* AuthParams::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthParams.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthParams::release_key() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthParams.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthParams::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthParams.key)
}

// optional string secret = 2;
inline bool AuthParams::has_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthParams::set_has_secret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthParams::clear_has_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthParams::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secret();
}
inline const ::std::string& AuthParams::secret() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthParams.secret)
  return secret_.GetNoArena();
}
inline void AuthParams::set_secret(const ::std::string& value) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthParams.secret)
}
#if LANG_CXX11
inline void AuthParams::set_secret(::std::string&& value) {
  set_has_secret();
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthParams.secret)
}
#endif
inline void AuthParams::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthParams.secret)
}
inline void AuthParams::set_secret(const char* value, size_t size) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthParams.secret)
}
inline ::std::string* AuthParams::mutable_secret() {
  set_has_secret();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthParams.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthParams::release_secret() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthParams.secret)
  clear_has_secret();
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthParams::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    set_has_secret();
  } else {
    clear_has_secret();
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthParams.secret)
}

// -------------------------------------------------------------------

// AuthWithJwtTokenParams

// optional string sdkJwtToken = 1;
inline bool AuthWithJwtTokenParams::has_sdkjwttoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthWithJwtTokenParams::set_has_sdkjwttoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthWithJwtTokenParams::clear_has_sdkjwttoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthWithJwtTokenParams::clear_sdkjwttoken() {
  sdkjwttoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdkjwttoken();
}
inline const ::std::string& AuthWithJwtTokenParams::sdkjwttoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  return sdkjwttoken_.GetNoArena();
}
inline void AuthWithJwtTokenParams::set_sdkjwttoken(const ::std::string& value) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
#if LANG_CXX11
inline void AuthWithJwtTokenParams::set_sdkjwttoken(::std::string&& value) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
#endif
inline void AuthWithJwtTokenParams::set_sdkjwttoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
inline void AuthWithJwtTokenParams::set_sdkjwttoken(const char* value, size_t size) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
inline ::std::string* AuthWithJwtTokenParams::mutable_sdkjwttoken() {
  set_has_sdkjwttoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  return sdkjwttoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthWithJwtTokenParams::release_sdkjwttoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  clear_has_sdkjwttoken();
  return sdkjwttoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthWithJwtTokenParams::set_allocated_sdkjwttoken(::std::string* sdkjwttoken) {
  if (sdkjwttoken != NULL) {
    set_has_sdkjwttoken();
  } else {
    clear_has_sdkjwttoken();
  }
  sdkjwttoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkjwttoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}

// -------------------------------------------------------------------

// LoginParams

// optional string userName = 1;
inline bool LoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.userName)
  return username_.GetNoArena();
}
inline void LoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.userName)
}
#if LANG_CXX11
inline void LoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginParams.userName)
}
#endif
inline void LoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginParams.userName)
}
inline void LoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginParams.userName)
}
inline ::std::string* LoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginParams.userName)
}

// optional string psw = 2;
inline bool LoginParams::has_psw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginParams::set_has_psw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
inline const ::std::string& LoginParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.psw)
  return psw_.GetNoArena();
}
inline void LoginParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.psw)
}
#if LANG_CXX11
inline void LoginParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginParams.psw)
}
#endif
inline void LoginParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginParams.psw)
}
inline void LoginParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginParams.psw)
}
inline ::std::string* LoginParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginParams.psw)
}

// optional bool rememberMe = 3;
inline bool LoginParams::has_rememberme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginParams::set_has_rememberme() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginParams::clear_has_rememberme() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginParams::clear_rememberme() {
  rememberme_ = false;
  clear_has_rememberme();
}
inline bool LoginParams::rememberme() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.rememberMe)
  return rememberme_;
}
inline void LoginParams::set_rememberme(bool value) {
  set_has_rememberme();
  rememberme_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.rememberMe)
}

// -------------------------------------------------------------------

// LoginWithSSOTokenParams

// optional string ssoToken = 1;
inline bool LoginWithSSOTokenParams::has_ssotoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginWithSSOTokenParams::set_has_ssotoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginWithSSOTokenParams::clear_has_ssotoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginWithSSOTokenParams::clear_ssotoken() {
  ssotoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssotoken();
}
inline const ::std::string& LoginWithSSOTokenParams::ssotoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  return ssotoken_.GetNoArena();
}
inline void LoginWithSSOTokenParams::set_ssotoken(const ::std::string& value) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
#if LANG_CXX11
inline void LoginWithSSOTokenParams::set_ssotoken(::std::string&& value) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
#endif
inline void LoginWithSSOTokenParams::set_ssotoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
inline void LoginWithSSOTokenParams::set_ssotoken(const char* value, size_t size) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
inline ::std::string* LoginWithSSOTokenParams::mutable_ssotoken() {
  set_has_ssotoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  return ssotoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginWithSSOTokenParams::release_ssotoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  clear_has_ssotoken();
  return ssotoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginWithSSOTokenParams::set_allocated_ssotoken(::std::string* ssotoken) {
  if (ssotoken != NULL) {
    set_has_ssotoken();
  } else {
    clear_has_ssotoken();
  }
  ssotoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssotoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}

// optional bool rememberMe = 2;
inline bool LoginWithSSOTokenParams::has_rememberme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginWithSSOTokenParams::set_has_rememberme() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginWithSSOTokenParams::clear_has_rememberme() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginWithSSOTokenParams::clear_rememberme() {
  rememberme_ = false;
  clear_has_rememberme();
}
inline bool LoginWithSSOTokenParams::rememberme() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginWithSSOTokenParams.rememberMe)
  return rememberme_;
}
inline void LoginWithSSOTokenParams::set_rememberme(bool value) {
  set_has_rememberme();
  rememberme_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginWithSSOTokenParams.rememberMe)
}

// -------------------------------------------------------------------

// StartMeetingParams

// optional uint64 meetingNumber = 1;
inline bool StartMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 StartMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.meetingNumber)
  return meetingnumber_;
}
inline void StartMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.meetingNumber)
}

// optional string hDirectShareAppWnd = 2;
inline bool StartMeetingParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartMeetingParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartMeetingParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartMeetingParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
inline const ::std::string& StartMeetingParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
inline void StartMeetingParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
#if LANG_CXX11
inline void StartMeetingParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
#endif
inline void StartMeetingParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
inline void StartMeetingParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
inline ::std::string* StartMeetingParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartMeetingParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartMeetingParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}

// optional string participantID = 3;
inline bool StartMeetingParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartMeetingParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartMeetingParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartMeetingParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
inline const ::std::string& StartMeetingParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.participantID)
  return participantid_.GetNoArena();
}
inline void StartMeetingParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.participantID)
}
#if LANG_CXX11
inline void StartMeetingParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMeetingParams.participantID)
}
#endif
inline void StartMeetingParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMeetingParams.participantID)
}
inline void StartMeetingParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMeetingParams.participantID)
}
inline ::std::string* StartMeetingParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMeetingParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartMeetingParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMeetingParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartMeetingParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMeetingParams.participantID)
}

// optional bool isVideoOff = 4;
inline bool StartMeetingParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartMeetingParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartMeetingParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartMeetingParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
inline bool StartMeetingParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isVideoOff)
  return isvideooff_;
}
inline void StartMeetingParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isVideoOff)
}

// optional bool isAudioOff = 5;
inline bool StartMeetingParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartMeetingParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartMeetingParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartMeetingParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
inline bool StartMeetingParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isAudioOff)
  return isaudiooff_;
}
inline void StartMeetingParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isAudioOff)
}

// optional bool isDirectShareDesktop = 6;
inline bool StartMeetingParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StartMeetingParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StartMeetingParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StartMeetingParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
inline bool StartMeetingParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
inline void StartMeetingParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isDirectShareDesktop)
}

// -------------------------------------------------------------------

// StartWithoutLoginParams

// optional string userID = 1;
inline bool StartWithoutLoginParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartWithoutLoginParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartWithoutLoginParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartWithoutLoginParams::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
inline const ::std::string& StartWithoutLoginParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  return userid_.GetNoArena();
}
inline void StartWithoutLoginParams::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
#endif
inline void StartWithoutLoginParams::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
inline void StartWithoutLoginParams::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
inline ::std::string* StartWithoutLoginParams::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_userid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}

// optional string userZAK = 2;
inline bool StartWithoutLoginParams::has_userzak() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartWithoutLoginParams::set_has_userzak() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartWithoutLoginParams::clear_has_userzak() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartWithoutLoginParams::clear_userzak() {
  userzak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userzak();
}
inline const ::std::string& StartWithoutLoginParams::userzak() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  return userzak_.GetNoArena();
}
inline void StartWithoutLoginParams::set_userzak(const ::std::string& value) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_userzak(::std::string&& value) {
  set_has_userzak();
  userzak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
#endif
inline void StartWithoutLoginParams::set_userzak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
inline void StartWithoutLoginParams::set_userzak(const char* value, size_t size) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
inline ::std::string* StartWithoutLoginParams::mutable_userzak() {
  set_has_userzak();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  return userzak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_userzak() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  clear_has_userzak();
  return userzak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_userzak(::std::string* userzak) {
  if (userzak != NULL) {
    set_has_userzak();
  } else {
    clear_has_userzak();
  }
  userzak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userzak);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}

// optional string userName = 3;
inline bool StartWithoutLoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartWithoutLoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartWithoutLoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartWithoutLoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& StartWithoutLoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  return username_.GetNoArena();
}
inline void StartWithoutLoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
#endif
inline void StartWithoutLoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
inline void StartWithoutLoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
inline ::std::string* StartWithoutLoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}

// optional int32 nodeUserType = 4;
inline bool StartWithoutLoginParams::has_nodeusertype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StartWithoutLoginParams::set_has_nodeusertype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StartWithoutLoginParams::clear_has_nodeusertype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StartWithoutLoginParams::clear_nodeusertype() {
  nodeusertype_ = 0;
  clear_has_nodeusertype();
}
inline ::google::protobuf::int32 StartWithoutLoginParams::nodeusertype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.nodeUserType)
  return nodeusertype_;
}
inline void StartWithoutLoginParams::set_nodeusertype(::google::protobuf::int32 value) {
  set_has_nodeusertype();
  nodeusertype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.nodeUserType)
}

// optional uint64 meetingNumber = 5;
inline bool StartWithoutLoginParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StartWithoutLoginParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StartWithoutLoginParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StartWithoutLoginParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 StartWithoutLoginParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.meetingNumber)
  return meetingnumber_;
}
inline void StartWithoutLoginParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.meetingNumber)
}

// optional string sdkVanityID = 6;
inline bool StartWithoutLoginParams::has_sdkvanityid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartWithoutLoginParams::set_has_sdkvanityid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartWithoutLoginParams::clear_has_sdkvanityid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartWithoutLoginParams::clear_sdkvanityid() {
  sdkvanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdkvanityid();
}
inline const ::std::string& StartWithoutLoginParams::sdkvanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  return sdkvanityid_.GetNoArena();
}
inline void StartWithoutLoginParams::set_sdkvanityid(const ::std::string& value) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_sdkvanityid(::std::string&& value) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
#endif
inline void StartWithoutLoginParams::set_sdkvanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
inline void StartWithoutLoginParams::set_sdkvanityid(const char* value, size_t size) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
inline ::std::string* StartWithoutLoginParams::mutable_sdkvanityid() {
  set_has_sdkvanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  return sdkvanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_sdkvanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  clear_has_sdkvanityid();
  return sdkvanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_sdkvanityid(::std::string* sdkvanityid) {
  if (sdkvanityid != NULL) {
    set_has_sdkvanityid();
  } else {
    clear_has_sdkvanityid();
  }
  sdkvanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkvanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}

// optional string hDirectShareAppWnd = 7;
inline bool StartWithoutLoginParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartWithoutLoginParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartWithoutLoginParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartWithoutLoginParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
inline const ::std::string& StartWithoutLoginParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
inline void StartWithoutLoginParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
#endif
inline void StartWithoutLoginParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
inline void StartWithoutLoginParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
inline ::std::string* StartWithoutLoginParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}

// optional string participantID = 8;
inline bool StartWithoutLoginParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StartWithoutLoginParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StartWithoutLoginParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StartWithoutLoginParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
inline const ::std::string& StartWithoutLoginParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  return participantid_.GetNoArena();
}
inline void StartWithoutLoginParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
#if LANG_CXX11
inline void StartWithoutLoginParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
#endif
inline void StartWithoutLoginParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
inline void StartWithoutLoginParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
inline ::std::string* StartWithoutLoginParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWithoutLoginParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWithoutLoginParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}

// optional bool isDirectShareDesktop = 9;
inline bool StartWithoutLoginParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StartWithoutLoginParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StartWithoutLoginParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StartWithoutLoginParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
inline bool StartWithoutLoginParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
inline void StartWithoutLoginParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isDirectShareDesktop)
}

// optional bool isVideoOff = 10;
inline bool StartWithoutLoginParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StartWithoutLoginParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000200u;
}
inline void StartWithoutLoginParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void StartWithoutLoginParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
inline bool StartWithoutLoginParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isVideoOff)
  return isvideooff_;
}
inline void StartWithoutLoginParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isVideoOff)
}

// optional bool isAudioOff = 11;
inline bool StartWithoutLoginParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StartWithoutLoginParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000400u;
}
inline void StartWithoutLoginParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void StartWithoutLoginParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
inline bool StartWithoutLoginParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isAudioOff)
  return isaudiooff_;
}
inline void StartWithoutLoginParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isAudioOff)
}

// -------------------------------------------------------------------

// JoinMeetingParams

// optional uint64 meetingNumber = 1;
inline bool JoinMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 JoinMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.meetingNumber)
  return meetingnumber_;
}
inline void JoinMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.meetingNumber)
}

// optional string vanityID = 2;
inline bool JoinMeetingParams::has_vanityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinMeetingParams::set_has_vanityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinMeetingParams::clear_has_vanityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinMeetingParams::clear_vanityid() {
  vanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vanityid();
}
inline const ::std::string& JoinMeetingParams::vanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  return vanityid_.GetNoArena();
}
inline void JoinMeetingParams::set_vanityid(const ::std::string& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_vanityid(::std::string&& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
#endif
inline void JoinMeetingParams::set_vanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
inline void JoinMeetingParams::set_vanityid(const char* value, size_t size) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
inline ::std::string* JoinMeetingParams::mutable_vanityid() {
  set_has_vanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  return vanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_vanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  clear_has_vanityid();
  return vanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_vanityid(::std::string* vanityid) {
  if (vanityid != NULL) {
    set_has_vanityid();
  } else {
    clear_has_vanityid();
  }
  vanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}

// optional string userName = 3;
inline bool JoinMeetingParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinMeetingParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinMeetingParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinMeetingParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& JoinMeetingParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.userName)
  return username_.GetNoArena();
}
inline void JoinMeetingParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.userName)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.userName)
}
#endif
inline void JoinMeetingParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.userName)
}
inline void JoinMeetingParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.userName)
}
inline ::std::string* JoinMeetingParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.userName)
}

// optional string psw = 4;
inline bool JoinMeetingParams::has_psw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinMeetingParams::set_has_psw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinMeetingParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinMeetingParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
inline const ::std::string& JoinMeetingParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.psw)
  return psw_.GetNoArena();
}
inline void JoinMeetingParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.psw)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.psw)
}
#endif
inline void JoinMeetingParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.psw)
}
inline void JoinMeetingParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.psw)
}
inline ::std::string* JoinMeetingParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.psw)
}

// optional string hDirectShareAppWnd = 5;
inline bool JoinMeetingParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinMeetingParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinMeetingParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinMeetingParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
inline const ::std::string& JoinMeetingParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
inline void JoinMeetingParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
#endif
inline void JoinMeetingParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
inline void JoinMeetingParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
inline ::std::string* JoinMeetingParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}

// optional string participantID = 6;
inline bool JoinMeetingParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinMeetingParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinMeetingParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinMeetingParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
inline const ::std::string& JoinMeetingParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.participantID)
  return participantid_.GetNoArena();
}
inline void JoinMeetingParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
#endif
inline void JoinMeetingParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
inline void JoinMeetingParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
inline ::std::string* JoinMeetingParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.participantID)
}

// optional string webinarToken = 7;
inline bool JoinMeetingParams::has_webinartoken() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinMeetingParams::set_has_webinartoken() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinMeetingParams::clear_has_webinartoken() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinMeetingParams::clear_webinartoken() {
  webinartoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webinartoken();
}
inline const ::std::string& JoinMeetingParams::webinartoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  return webinartoken_.GetNoArena();
}
inline void JoinMeetingParams::set_webinartoken(const ::std::string& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
#if LANG_CXX11
inline void JoinMeetingParams::set_webinartoken(::std::string&& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
#endif
inline void JoinMeetingParams::set_webinartoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
inline void JoinMeetingParams::set_webinartoken(const char* value, size_t size) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
inline ::std::string* JoinMeetingParams::mutable_webinartoken() {
  set_has_webinartoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  return webinartoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinMeetingParams::release_webinartoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  clear_has_webinartoken();
  return webinartoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinMeetingParams::set_allocated_webinartoken(::std::string* webinartoken) {
  if (webinartoken != NULL) {
    set_has_webinartoken();
  } else {
    clear_has_webinartoken();
  }
  webinartoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webinartoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}

// optional bool isVideoOff = 8;
inline bool JoinMeetingParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinMeetingParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinMeetingParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinMeetingParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
inline bool JoinMeetingParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isVideoOff)
  return isvideooff_;
}
inline void JoinMeetingParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isVideoOff)
}

// optional bool isAudioOff = 9;
inline bool JoinMeetingParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinMeetingParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinMeetingParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinMeetingParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
inline bool JoinMeetingParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isAudioOff)
  return isaudiooff_;
}
inline void JoinMeetingParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isAudioOff)
}

// optional bool isDirectShareDesktop = 10;
inline bool JoinMeetingParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JoinMeetingParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JoinMeetingParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JoinMeetingParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
inline bool JoinMeetingParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
inline void JoinMeetingParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isDirectShareDesktop)
}

// -------------------------------------------------------------------

// JoinWithoutLoginParams

// optional uint64 meetingNumber = 1;
inline bool JoinWithoutLoginParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinWithoutLoginParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinWithoutLoginParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinWithoutLoginParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 JoinWithoutLoginParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.meetingNumber)
  return meetingnumber_;
}
inline void JoinWithoutLoginParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.meetingNumber)
}

// optional string vanityID = 2;
inline bool JoinWithoutLoginParams::has_vanityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinWithoutLoginParams::set_has_vanityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinWithoutLoginParams::clear_has_vanityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinWithoutLoginParams::clear_vanityid() {
  vanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vanityid();
}
inline const ::std::string& JoinWithoutLoginParams::vanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  return vanityid_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_vanityid(const ::std::string& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_vanityid(::std::string&& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
#endif
inline void JoinWithoutLoginParams::set_vanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
inline void JoinWithoutLoginParams::set_vanityid(const char* value, size_t size) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
inline ::std::string* JoinWithoutLoginParams::mutable_vanityid() {
  set_has_vanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  return vanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_vanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  clear_has_vanityid();
  return vanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_vanityid(::std::string* vanityid) {
  if (vanityid != NULL) {
    set_has_vanityid();
  } else {
    clear_has_vanityid();
  }
  vanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}

// optional string userName = 3;
inline bool JoinWithoutLoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinWithoutLoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinWithoutLoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinWithoutLoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& JoinWithoutLoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  return username_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
#endif
inline void JoinWithoutLoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
inline void JoinWithoutLoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
inline ::std::string* JoinWithoutLoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}

// optional string psw = 4;
inline bool JoinWithoutLoginParams::has_psw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinWithoutLoginParams::set_has_psw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinWithoutLoginParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinWithoutLoginParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
inline const ::std::string& JoinWithoutLoginParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  return psw_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
#endif
inline void JoinWithoutLoginParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
inline void JoinWithoutLoginParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
inline ::std::string* JoinWithoutLoginParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}

// optional string hDirectShareAppWnd = 5;
inline bool JoinWithoutLoginParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinWithoutLoginParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinWithoutLoginParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinWithoutLoginParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
inline const ::std::string& JoinWithoutLoginParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
#endif
inline void JoinWithoutLoginParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
inline void JoinWithoutLoginParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
inline ::std::string* JoinWithoutLoginParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}

// optional string userZAK = 6;
inline bool JoinWithoutLoginParams::has_userzak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinWithoutLoginParams::set_has_userzak() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinWithoutLoginParams::clear_has_userzak() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinWithoutLoginParams::clear_userzak() {
  userzak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userzak();
}
inline const ::std::string& JoinWithoutLoginParams::userzak() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  return userzak_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_userzak(const ::std::string& value) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_userzak(::std::string&& value) {
  set_has_userzak();
  userzak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
#endif
inline void JoinWithoutLoginParams::set_userzak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
inline void JoinWithoutLoginParams::set_userzak(const char* value, size_t size) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
inline ::std::string* JoinWithoutLoginParams::mutable_userzak() {
  set_has_userzak();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  return userzak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_userzak() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  clear_has_userzak();
  return userzak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_userzak(::std::string* userzak) {
  if (userzak != NULL) {
    set_has_userzak();
  } else {
    clear_has_userzak();
  }
  userzak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userzak);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}

// optional string participantID = 7;
inline bool JoinWithoutLoginParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinWithoutLoginParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinWithoutLoginParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinWithoutLoginParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
inline const ::std::string& JoinWithoutLoginParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  return participantid_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
#endif
inline void JoinWithoutLoginParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
inline void JoinWithoutLoginParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
inline ::std::string* JoinWithoutLoginParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}

// optional string webinarToken = 8;
inline bool JoinWithoutLoginParams::has_webinartoken() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinWithoutLoginParams::set_has_webinartoken() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinWithoutLoginParams::clear_has_webinartoken() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinWithoutLoginParams::clear_webinartoken() {
  webinartoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webinartoken();
}
inline const ::std::string& JoinWithoutLoginParams::webinartoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  return webinartoken_.GetNoArena();
}
inline void JoinWithoutLoginParams::set_webinartoken(const ::std::string& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
#if LANG_CXX11
inline void JoinWithoutLoginParams::set_webinartoken(::std::string&& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
#endif
inline void JoinWithoutLoginParams::set_webinartoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
inline void JoinWithoutLoginParams::set_webinartoken(const char* value, size_t size) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
inline ::std::string* JoinWithoutLoginParams::mutable_webinartoken() {
  set_has_webinartoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  return webinartoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinWithoutLoginParams::release_webinartoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  clear_has_webinartoken();
  return webinartoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinWithoutLoginParams::set_allocated_webinartoken(::std::string* webinartoken) {
  if (webinartoken != NULL) {
    set_has_webinartoken();
  } else {
    clear_has_webinartoken();
  }
  webinartoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webinartoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}

// optional bool isDirectShareDesktop = 9;
inline bool JoinWithoutLoginParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinWithoutLoginParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinWithoutLoginParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinWithoutLoginParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
inline bool JoinWithoutLoginParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
inline void JoinWithoutLoginParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isDirectShareDesktop)
}

// optional bool isVideoOff = 10;
inline bool JoinWithoutLoginParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JoinWithoutLoginParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JoinWithoutLoginParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JoinWithoutLoginParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
inline bool JoinWithoutLoginParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isVideoOff)
  return isvideooff_;
}
inline void JoinWithoutLoginParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isVideoOff)
}

// optional bool isAudioOff = 11;
inline bool JoinWithoutLoginParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JoinWithoutLoginParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000400u;
}
inline void JoinWithoutLoginParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void JoinWithoutLoginParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
inline bool JoinWithoutLoginParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isAudioOff)
  return isaudiooff_;
}
inline void JoinWithoutLoginParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isAudioOff)
}

// -------------------------------------------------------------------

// LeaveMeetingParams

// optional bool bEnd = 1;
inline bool LeaveMeetingParams::has_bend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveMeetingParams::set_has_bend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveMeetingParams::clear_has_bend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveMeetingParams::clear_bend() {
  bend_ = false;
  clear_has_bend();
}
inline bool LeaveMeetingParams::bend() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LeaveMeetingParams.bEnd)
  return bend_;
}
inline void LeaveMeetingParams::set_bend(bool value) {
  set_has_bend();
  bend_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LeaveMeetingParams.bEnd)
}

// -------------------------------------------------------------------

// HandleZoomWebUriProtocolActionParams

// optional string protocolAction = 1;
inline bool HandleZoomWebUriProtocolActionParams::has_protocolaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandleZoomWebUriProtocolActionParams::set_has_protocolaction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandleZoomWebUriProtocolActionParams::clear_has_protocolaction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandleZoomWebUriProtocolActionParams::clear_protocolaction() {
  protocolaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocolaction();
}
inline const ::std::string& HandleZoomWebUriProtocolActionParams::protocolaction() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  return protocolaction_.GetNoArena();
}
inline void HandleZoomWebUriProtocolActionParams::set_protocolaction(const ::std::string& value) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
#if LANG_CXX11
inline void HandleZoomWebUriProtocolActionParams::set_protocolaction(::std::string&& value) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
#endif
inline void HandleZoomWebUriProtocolActionParams::set_protocolaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
inline void HandleZoomWebUriProtocolActionParams::set_protocolaction(const char* value, size_t size) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
inline ::std::string* HandleZoomWebUriProtocolActionParams::mutable_protocolaction() {
  set_has_protocolaction();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  return protocolaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandleZoomWebUriProtocolActionParams::release_protocolaction() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  clear_has_protocolaction();
  return protocolaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandleZoomWebUriProtocolActionParams::set_allocated_protocolaction(::std::string* protocolaction) {
  if (protocolaction != NULL) {
    set_has_protocolaction();
  } else {
    clear_has_protocolaction();
  }
  protocolaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolaction);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}

// -------------------------------------------------------------------

// ShowChatDlgParams

// optional string hParent = 1;
inline bool ShowChatDlgParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowChatDlgParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowChatDlgParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowChatDlgParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& ShowChatDlgParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  return hparent_.GetNoArena();
}
inline void ShowChatDlgParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
#if LANG_CXX11
inline void ShowChatDlgParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
#endif
inline void ShowChatDlgParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
inline void ShowChatDlgParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
inline ::std::string* ShowChatDlgParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowChatDlgParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowChatDlgParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}

// optional string rectLeft = 2;
inline bool ShowChatDlgParams::has_rectleft() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShowChatDlgParams::set_has_rectleft() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShowChatDlgParams::clear_has_rectleft() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShowChatDlgParams::clear_rectleft() {
  rectleft_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectleft();
}
inline const ::std::string& ShowChatDlgParams::rectleft() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  return rectleft_.GetNoArena();
}
inline void ShowChatDlgParams::set_rectleft(const ::std::string& value) {
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
#if LANG_CXX11
inline void ShowChatDlgParams::set_rectleft(::std::string&& value) {
  set_has_rectleft();
  rectleft_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
#endif
inline void ShowChatDlgParams::set_rectleft(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
inline void ShowChatDlgParams::set_rectleft(const char* value, size_t size) {
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
inline ::std::string* ShowChatDlgParams::mutable_rectleft() {
  set_has_rectleft();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  return rectleft_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowChatDlgParams::release_rectleft() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  clear_has_rectleft();
  return rectleft_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowChatDlgParams::set_allocated_rectleft(::std::string* rectleft) {
  if (rectleft != NULL) {
    set_has_rectleft();
  } else {
    clear_has_rectleft();
  }
  rectleft_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectleft);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}

// optional string rectTop = 3;
inline bool ShowChatDlgParams::has_recttop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShowChatDlgParams::set_has_recttop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShowChatDlgParams::clear_has_recttop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShowChatDlgParams::clear_recttop() {
  recttop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recttop();
}
inline const ::std::string& ShowChatDlgParams::recttop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  return recttop_.GetNoArena();
}
inline void ShowChatDlgParams::set_recttop(const ::std::string& value) {
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
#if LANG_CXX11
inline void ShowChatDlgParams::set_recttop(::std::string&& value) {
  set_has_recttop();
  recttop_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
#endif
inline void ShowChatDlgParams::set_recttop(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
inline void ShowChatDlgParams::set_recttop(const char* value, size_t size) {
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
inline ::std::string* ShowChatDlgParams::mutable_recttop() {
  set_has_recttop();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  return recttop_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowChatDlgParams::release_recttop() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  clear_has_recttop();
  return recttop_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowChatDlgParams::set_allocated_recttop(::std::string* recttop) {
  if (recttop != NULL) {
    set_has_recttop();
  } else {
    clear_has_recttop();
  }
  recttop_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recttop);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}

// optional string rectRight = 4;
inline bool ShowChatDlgParams::has_rectright() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShowChatDlgParams::set_has_rectright() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShowChatDlgParams::clear_has_rectright() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShowChatDlgParams::clear_rectright() {
  rectright_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectright();
}
inline const ::std::string& ShowChatDlgParams::rectright() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  return rectright_.GetNoArena();
}
inline void ShowChatDlgParams::set_rectright(const ::std::string& value) {
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
#if LANG_CXX11
inline void ShowChatDlgParams::set_rectright(::std::string&& value) {
  set_has_rectright();
  rectright_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
#endif
inline void ShowChatDlgParams::set_rectright(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
inline void ShowChatDlgParams::set_rectright(const char* value, size_t size) {
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
inline ::std::string* ShowChatDlgParams::mutable_rectright() {
  set_has_rectright();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  return rectright_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowChatDlgParams::release_rectright() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  clear_has_rectright();
  return rectright_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowChatDlgParams::set_allocated_rectright(::std::string* rectright) {
  if (rectright != NULL) {
    set_has_rectright();
  } else {
    clear_has_rectright();
  }
  rectright_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectright);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}

// optional string rectBottom = 5;
inline bool ShowChatDlgParams::has_rectbottom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShowChatDlgParams::set_has_rectbottom() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShowChatDlgParams::clear_has_rectbottom() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShowChatDlgParams::clear_rectbottom() {
  rectbottom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectbottom();
}
inline const ::std::string& ShowChatDlgParams::rectbottom() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  return rectbottom_.GetNoArena();
}
inline void ShowChatDlgParams::set_rectbottom(const ::std::string& value) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
#if LANG_CXX11
inline void ShowChatDlgParams::set_rectbottom(::std::string&& value) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
#endif
inline void ShowChatDlgParams::set_rectbottom(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
inline void ShowChatDlgParams::set_rectbottom(const char* value, size_t size) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
inline ::std::string* ShowChatDlgParams::mutable_rectbottom() {
  set_has_rectbottom();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  return rectbottom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowChatDlgParams::release_rectbottom() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  clear_has_rectbottom();
  return rectbottom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowChatDlgParams::set_allocated_rectbottom(::std::string* rectbottom) {
  if (rectbottom != NULL) {
    set_has_rectbottom();
  } else {
    clear_has_rectbottom();
  }
  rectbottom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectbottom);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}

// -------------------------------------------------------------------

// EnterFullScreenParams

// optional bool bFirstView = 1;
inline bool EnterFullScreenParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterFullScreenParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterFullScreenParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterFullScreenParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
inline bool EnterFullScreenParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnterFullScreenParams.bFirstView)
  return bfirstview_;
}
inline void EnterFullScreenParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnterFullScreenParams.bFirstView)
}

// optional bool bSecView = 2;
inline bool EnterFullScreenParams::has_bsecview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterFullScreenParams::set_has_bsecview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterFullScreenParams::clear_has_bsecview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterFullScreenParams::clear_bsecview() {
  bsecview_ = false;
  clear_has_bsecview();
}
inline bool EnterFullScreenParams::bsecview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnterFullScreenParams.bSecView)
  return bsecview_;
}
inline void EnterFullScreenParams::set_bsecview(bool value) {
  set_has_bsecview();
  bsecview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnterFullScreenParams.bSecView)
}

// -------------------------------------------------------------------

// ExitFullScreenParams

// optional bool bFirstView = 1;
inline bool ExitFullScreenParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitFullScreenParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitFullScreenParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitFullScreenParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
inline bool ExitFullScreenParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ExitFullScreenParams.bFirstView)
  return bfirstview_;
}
inline void ExitFullScreenParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ExitFullScreenParams.bFirstView)
}

// optional bool bSecView = 2;
inline bool ExitFullScreenParams::has_bsecview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitFullScreenParams::set_has_bsecview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitFullScreenParams::clear_has_bsecview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitFullScreenParams::clear_bsecview() {
  bsecview_ = false;
  clear_has_bsecview();
}
inline bool ExitFullScreenParams::bsecview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ExitFullScreenParams.bSecView)
  return bsecview_;
}
inline void ExitFullScreenParams::set_bsecview(bool value) {
  set_has_bsecview();
  bsecview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ExitFullScreenParams.bSecView)
}

// -------------------------------------------------------------------

// MoveFloatVideoWndParams

// optional string left = 1;
inline bool MoveFloatVideoWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveFloatVideoWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveFloatVideoWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveFloatVideoWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& MoveFloatVideoWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  return left_.GetNoArena();
}
inline void MoveFloatVideoWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
#if LANG_CXX11
inline void MoveFloatVideoWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
#endif
inline void MoveFloatVideoWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
inline void MoveFloatVideoWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
inline ::std::string* MoveFloatVideoWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveFloatVideoWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveFloatVideoWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}

// optional string top = 2;
inline bool MoveFloatVideoWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveFloatVideoWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveFloatVideoWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveFloatVideoWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& MoveFloatVideoWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  return top_.GetNoArena();
}
inline void MoveFloatVideoWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
#if LANG_CXX11
inline void MoveFloatVideoWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
#endif
inline void MoveFloatVideoWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
inline void MoveFloatVideoWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
inline ::std::string* MoveFloatVideoWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveFloatVideoWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveFloatVideoWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}

// -------------------------------------------------------------------

// ShowSharingToolbarParams

// optional bool bShow = 1;
inline bool ShowSharingToolbarParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowSharingToolbarParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowSharingToolbarParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowSharingToolbarParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ShowSharingToolbarParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSharingToolbarParams.bShow)
  return bshow_;
}
inline void ShowSharingToolbarParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSharingToolbarParams.bShow)
}

// -------------------------------------------------------------------

// ChangeFloatoActiveSpkVideoSizeParams

// optional int32 floatVideoType = 1;
inline bool ChangeFloatoActiveSpkVideoSizeParams::has_floatvideotype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeFloatoActiveSpkVideoSizeParams::set_has_floatvideotype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeFloatoActiveSpkVideoSizeParams::clear_has_floatvideotype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeFloatoActiveSpkVideoSizeParams::clear_floatvideotype() {
  floatvideotype_ = 0;
  clear_has_floatvideotype();
}
inline ::google::protobuf::int32 ChangeFloatoActiveSpkVideoSizeParams::floatvideotype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams.floatVideoType)
  return floatvideotype_;
}
inline void ChangeFloatoActiveSpkVideoSizeParams::set_floatvideotype(::google::protobuf::int32 value) {
  set_has_floatvideotype();
  floatvideotype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams.floatVideoType)
}

// -------------------------------------------------------------------

// ShowParticipantsListWndParams

// optional bool bShow = 1;
inline bool ShowParticipantsListWndParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowParticipantsListWndParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowParticipantsListWndParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowParticipantsListWndParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ShowParticipantsListWndParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowParticipantsListWndParams.bShow)
  return bshow_;
}
inline void ShowParticipantsListWndParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowParticipantsListWndParams.bShow)
}

// -------------------------------------------------------------------

// ShowBottomFloatToolbarWndParams

// optional bool bShow = 1;
inline bool ShowBottomFloatToolbarWndParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowBottomFloatToolbarWndParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowBottomFloatToolbarWndParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowBottomFloatToolbarWndParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ShowBottomFloatToolbarWndParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams.bShow)
  return bshow_;
}
inline void ShowBottomFloatToolbarWndParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams.bShow)
}

// -------------------------------------------------------------------

// ShowPreOrNextPageVideoParams

// optional bool bPageUp = 1;
inline bool ShowPreOrNextPageVideoParams::has_bpageup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowPreOrNextPageVideoParams::set_has_bpageup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowPreOrNextPageVideoParams::clear_has_bpageup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowPreOrNextPageVideoParams::clear_bpageup() {
  bpageup_ = false;
  clear_has_bpageup();
}
inline bool ShowPreOrNextPageVideoParams::bpageup() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowPreOrNextPageVideoParams.bPageUp)
  return bpageup_;
}
inline void ShowPreOrNextPageVideoParams::set_bpageup(bool value) {
  set_has_bpageup();
  bpageup_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowPreOrNextPageVideoParams.bPageUp)
}

// -------------------------------------------------------------------

// ShowSharingFrameWindowsParams

// optional bool bShow = 1;
inline bool ShowSharingFrameWindowsParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowSharingFrameWindowsParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowSharingFrameWindowsParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowSharingFrameWindowsParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ShowSharingFrameWindowsParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSharingFrameWindowsParams.bShow)
  return bshow_;
}
inline void ShowSharingFrameWindowsParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSharingFrameWindowsParams.bShow)
}

// -------------------------------------------------------------------

// SwitchSplitScreenModeParams

// optional bool bSplit = 1;
inline bool SwitchSplitScreenModeParams::has_bsplit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchSplitScreenModeParams::set_has_bsplit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchSplitScreenModeParams::clear_has_bsplit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchSplitScreenModeParams::clear_bsplit() {
  bsplit_ = false;
  clear_has_bsplit();
}
inline bool SwitchSplitScreenModeParams::bsplit() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwitchSplitScreenModeParams.bSplit)
  return bsplit_;
}
inline void SwitchSplitScreenModeParams::set_bsplit(bool value) {
  set_has_bsplit();
  bsplit_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwitchSplitScreenModeParams.bSplit)
}

// -------------------------------------------------------------------

// SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams

// optional int32 minimizeUIMOde = 1;
inline bool SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::has_minimizeuimode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::set_has_minimizeuimode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::clear_has_minimizeuimode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::clear_minimizeuimode() {
  minimizeuimode_ = 0;
  clear_has_minimizeuimode();
}
inline ::google::protobuf::int32 SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::minimizeuimode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams.minimizeUIMOde)
  return minimizeuimode_;
}
inline void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::set_minimizeuimode(::google::protobuf::int32 value) {
  set_has_minimizeuimode();
  minimizeuimode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams.minimizeUIMOde)
}

// -------------------------------------------------------------------

// SwapToShowShareViewOrVideoParams

// optional bool bToDisplayShare = 1;
inline bool SwapToShowShareViewOrVideoParams::has_btodisplayshare() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwapToShowShareViewOrVideoParams::set_has_btodisplayshare() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwapToShowShareViewOrVideoParams::clear_has_btodisplayshare() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwapToShowShareViewOrVideoParams::clear_btodisplayshare() {
  btodisplayshare_ = false;
  clear_has_btodisplayshare();
}
inline bool SwapToShowShareViewOrVideoParams::btodisplayshare() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams.bToDisplayShare)
  return btodisplayshare_;
}
inline void SwapToShowShareViewOrVideoParams::set_btodisplayshare(bool value) {
  set_has_btodisplayshare();
  btodisplayshare_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams.bToDisplayShare)
}

// -------------------------------------------------------------------

// ShowSettingDlgParams

// optional string hParent = 1;
inline bool ShowSettingDlgParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowSettingDlgParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowSettingDlgParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowSettingDlgParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& ShowSettingDlgParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  return hparent_.GetNoArena();
}
inline void ShowSettingDlgParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
#if LANG_CXX11
inline void ShowSettingDlgParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
#endif
inline void ShowSettingDlgParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
inline void ShowSettingDlgParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
inline ::std::string* ShowSettingDlgParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowSettingDlgParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowSettingDlgParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}

// optional string left = 2;
inline bool ShowSettingDlgParams::has_left() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShowSettingDlgParams::set_has_left() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShowSettingDlgParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShowSettingDlgParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& ShowSettingDlgParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.left)
  return left_.GetNoArena();
}
inline void ShowSettingDlgParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
#if LANG_CXX11
inline void ShowSettingDlgParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
#endif
inline void ShowSettingDlgParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
inline void ShowSettingDlgParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
inline ::std::string* ShowSettingDlgParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowSettingDlgParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowSettingDlgParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.left)
}

// optional string top = 3;
inline bool ShowSettingDlgParams::has_top() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShowSettingDlgParams::set_has_top() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShowSettingDlgParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShowSettingDlgParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& ShowSettingDlgParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.top)
  return top_.GetNoArena();
}
inline void ShowSettingDlgParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
#if LANG_CXX11
inline void ShowSettingDlgParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
#endif
inline void ShowSettingDlgParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
inline void ShowSettingDlgParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
inline ::std::string* ShowSettingDlgParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowSettingDlgParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowSettingDlgParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.top)
}

// optional string hSettingWnd = 4;
inline bool ShowSettingDlgParams::has_hsettingwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShowSettingDlgParams::set_has_hsettingwnd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShowSettingDlgParams::clear_has_hsettingwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShowSettingDlgParams::clear_hsettingwnd() {
  hsettingwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hsettingwnd();
}
inline const ::std::string& ShowSettingDlgParams::hsettingwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  return hsettingwnd_.GetNoArena();
}
inline void ShowSettingDlgParams::set_hsettingwnd(const ::std::string& value) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
#if LANG_CXX11
inline void ShowSettingDlgParams::set_hsettingwnd(::std::string&& value) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
#endif
inline void ShowSettingDlgParams::set_hsettingwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
inline void ShowSettingDlgParams::set_hsettingwnd(const char* value, size_t size) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
inline ::std::string* ShowSettingDlgParams::mutable_hsettingwnd() {
  set_has_hsettingwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  return hsettingwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowSettingDlgParams::release_hsettingwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  clear_has_hsettingwnd();
  return hsettingwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowSettingDlgParams::set_allocated_hsettingwnd(::std::string* hsettingwnd) {
  if (hsettingwnd != NULL) {
    set_has_hsettingwnd();
  } else {
    clear_has_hsettingwnd();
  }
  hsettingwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hsettingwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}

// optional bool bShow = 5;
inline bool ShowSettingDlgParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShowSettingDlgParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShowSettingDlgParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShowSettingDlgParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ShowSettingDlgParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.bShow)
  return bshow_;
}
inline void ShowSettingDlgParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.bShow)
}

// -------------------------------------------------------------------

// ScheduleMeetingWithWndParams

// optional string hSelfWnd = 1;
inline bool ScheduleMeetingWithWndParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScheduleMeetingWithWndParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScheduleMeetingWithWndParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScheduleMeetingWithWndParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
inline const ::std::string& ScheduleMeetingWithWndParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
inline void ScheduleMeetingWithWndParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
#if LANG_CXX11
inline void ScheduleMeetingWithWndParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
#endif
inline void ScheduleMeetingWithWndParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
inline void ScheduleMeetingWithWndParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
inline ::std::string* ScheduleMeetingWithWndParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleMeetingWithWndParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleMeetingWithWndParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}

// optional string hParent = 2;
inline bool ScheduleMeetingWithWndParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScheduleMeetingWithWndParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScheduleMeetingWithWndParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScheduleMeetingWithWndParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& ScheduleMeetingWithWndParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  return hparent_.GetNoArena();
}
inline void ScheduleMeetingWithWndParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
#if LANG_CXX11
inline void ScheduleMeetingWithWndParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
#endif
inline void ScheduleMeetingWithWndParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
inline void ScheduleMeetingWithWndParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
inline ::std::string* ScheduleMeetingWithWndParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleMeetingWithWndParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleMeetingWithWndParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}

// optional string left = 3;
inline bool ScheduleMeetingWithWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScheduleMeetingWithWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScheduleMeetingWithWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScheduleMeetingWithWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& ScheduleMeetingWithWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  return left_.GetNoArena();
}
inline void ScheduleMeetingWithWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
#if LANG_CXX11
inline void ScheduleMeetingWithWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
#endif
inline void ScheduleMeetingWithWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
inline void ScheduleMeetingWithWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
inline ::std::string* ScheduleMeetingWithWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleMeetingWithWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleMeetingWithWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}

// optional string top = 4;
inline bool ScheduleMeetingWithWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScheduleMeetingWithWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScheduleMeetingWithWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScheduleMeetingWithWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& ScheduleMeetingWithWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  return top_.GetNoArena();
}
inline void ScheduleMeetingWithWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
#if LANG_CXX11
inline void ScheduleMeetingWithWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
#endif
inline void ScheduleMeetingWithWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
inline void ScheduleMeetingWithWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
inline ::std::string* ScheduleMeetingWithWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleMeetingWithWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleMeetingWithWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}

// -------------------------------------------------------------------

// EditMeetingParams

// optional uint64 meetingNumber = 1;
inline bool EditMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 EditMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingParams.meetingNumber)
  return meetingnumber_;
}
inline void EditMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingParams.meetingNumber)
}

// -------------------------------------------------------------------

// EditMeetingWithWndParams

// optional string hSelfWnd = 1;
inline bool EditMeetingWithWndParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditMeetingWithWndParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditMeetingWithWndParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditMeetingWithWndParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
inline const ::std::string& EditMeetingWithWndParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
inline void EditMeetingWithWndParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
#if LANG_CXX11
inline void EditMeetingWithWndParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
#endif
inline void EditMeetingWithWndParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
inline void EditMeetingWithWndParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
inline ::std::string* EditMeetingWithWndParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditMeetingWithWndParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditMeetingWithWndParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}

// optional string hParent = 2;
inline bool EditMeetingWithWndParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditMeetingWithWndParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditMeetingWithWndParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditMeetingWithWndParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& EditMeetingWithWndParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  return hparent_.GetNoArena();
}
inline void EditMeetingWithWndParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
#if LANG_CXX11
inline void EditMeetingWithWndParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
#endif
inline void EditMeetingWithWndParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
inline void EditMeetingWithWndParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
inline ::std::string* EditMeetingWithWndParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditMeetingWithWndParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditMeetingWithWndParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}

// optional string left = 3;
inline bool EditMeetingWithWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditMeetingWithWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditMeetingWithWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditMeetingWithWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& EditMeetingWithWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  return left_.GetNoArena();
}
inline void EditMeetingWithWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
#if LANG_CXX11
inline void EditMeetingWithWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
#endif
inline void EditMeetingWithWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
inline void EditMeetingWithWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
inline ::std::string* EditMeetingWithWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditMeetingWithWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditMeetingWithWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}

// optional string top = 4;
inline bool EditMeetingWithWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EditMeetingWithWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EditMeetingWithWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EditMeetingWithWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& EditMeetingWithWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  return top_.GetNoArena();
}
inline void EditMeetingWithWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
#if LANG_CXX11
inline void EditMeetingWithWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
#endif
inline void EditMeetingWithWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
inline void EditMeetingWithWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
inline ::std::string* EditMeetingWithWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditMeetingWithWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditMeetingWithWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}

// optional uint64 meetingNumber = 5;
inline bool EditMeetingWithWndParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EditMeetingWithWndParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EditMeetingWithWndParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EditMeetingWithWndParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 EditMeetingWithWndParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.meetingNumber)
  return meetingnumber_;
}
inline void EditMeetingWithWndParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.meetingNumber)
}

// -------------------------------------------------------------------

// DeleteMeetingParams

// optional uint64 meetingNumber = 1;
inline bool DeleteMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 DeleteMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DeleteMeetingParams.meetingNumber)
  return meetingnumber_;
}
inline void DeleteMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DeleteMeetingParams.meetingNumber)
}

// -------------------------------------------------------------------

// AddCustomizedPictureResourceParams

// optional string strPNGID = 1;
inline bool AddCustomizedPictureResourceParams::has_strpngid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCustomizedPictureResourceParams::set_has_strpngid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCustomizedPictureResourceParams::clear_has_strpngid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCustomizedPictureResourceParams::clear_strpngid() {
  strpngid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strpngid();
}
inline const ::std::string& AddCustomizedPictureResourceParams::strpngid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  return strpngid_.GetNoArena();
}
inline void AddCustomizedPictureResourceParams::set_strpngid(const ::std::string& value) {
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
#if LANG_CXX11
inline void AddCustomizedPictureResourceParams::set_strpngid(::std::string&& value) {
  set_has_strpngid();
  strpngid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
#endif
inline void AddCustomizedPictureResourceParams::set_strpngid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
inline void AddCustomizedPictureResourceParams::set_strpngid(const char* value, size_t size) {
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
inline ::std::string* AddCustomizedPictureResourceParams::mutable_strpngid() {
  set_has_strpngid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  return strpngid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddCustomizedPictureResourceParams::release_strpngid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  clear_has_strpngid();
  return strpngid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddCustomizedPictureResourceParams::set_allocated_strpngid(::std::string* strpngid) {
  if (strpngid != NULL) {
    set_has_strpngid();
  } else {
    clear_has_strpngid();
  }
  strpngid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpngid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}

// optional string strPNGPath = 2;
inline bool AddCustomizedPictureResourceParams::has_strpngpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCustomizedPictureResourceParams::set_has_strpngpath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCustomizedPictureResourceParams::clear_has_strpngpath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCustomizedPictureResourceParams::clear_strpngpath() {
  strpngpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strpngpath();
}
inline const ::std::string& AddCustomizedPictureResourceParams::strpngpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  return strpngpath_.GetNoArena();
}
inline void AddCustomizedPictureResourceParams::set_strpngpath(const ::std::string& value) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
#if LANG_CXX11
inline void AddCustomizedPictureResourceParams::set_strpngpath(::std::string&& value) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
#endif
inline void AddCustomizedPictureResourceParams::set_strpngpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
inline void AddCustomizedPictureResourceParams::set_strpngpath(const char* value, size_t size) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
inline ::std::string* AddCustomizedPictureResourceParams::mutable_strpngpath() {
  set_has_strpngpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  return strpngpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddCustomizedPictureResourceParams::release_strpngpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  clear_has_strpngpath();
  return strpngpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddCustomizedPictureResourceParams::set_allocated_strpngpath(::std::string* strpngpath) {
  if (strpngpath != NULL) {
    set_has_strpngpath();
  } else {
    clear_has_strpngpath();
  }
  strpngpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpngpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}

// -------------------------------------------------------------------

// AddCustomizedStringResourceParams

// optional int32 customizedStringType = 1;
inline bool AddCustomizedStringResourceParams::has_customizedstringtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCustomizedStringResourceParams::set_has_customizedstringtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCustomizedStringResourceParams::clear_has_customizedstringtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCustomizedStringResourceParams::clear_customizedstringtype() {
  customizedstringtype_ = 0;
  clear_has_customizedstringtype();
}
inline ::google::protobuf::int32 AddCustomizedStringResourceParams::customizedstringtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedStringResourceParams.customizedStringType)
  return customizedstringtype_;
}
inline void AddCustomizedStringResourceParams::set_customizedstringtype(::google::protobuf::int32 value) {
  set_has_customizedstringtype();
  customizedstringtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedStringResourceParams.customizedStringType)
}

// optional string strCustomizedString = 2;
inline bool AddCustomizedStringResourceParams::has_strcustomizedstring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCustomizedStringResourceParams::set_has_strcustomizedstring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCustomizedStringResourceParams::clear_has_strcustomizedstring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCustomizedStringResourceParams::clear_strcustomizedstring() {
  strcustomizedstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strcustomizedstring();
}
inline const ::std::string& AddCustomizedStringResourceParams::strcustomizedstring() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  return strcustomizedstring_.GetNoArena();
}
inline void AddCustomizedStringResourceParams::set_strcustomizedstring(const ::std::string& value) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
#if LANG_CXX11
inline void AddCustomizedStringResourceParams::set_strcustomizedstring(::std::string&& value) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
#endif
inline void AddCustomizedStringResourceParams::set_strcustomizedstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
inline void AddCustomizedStringResourceParams::set_strcustomizedstring(const char* value, size_t size) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
inline ::std::string* AddCustomizedStringResourceParams::mutable_strcustomizedstring() {
  set_has_strcustomizedstring();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  return strcustomizedstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddCustomizedStringResourceParams::release_strcustomizedstring() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  clear_has_strcustomizedstring();
  return strcustomizedstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddCustomizedStringResourceParams::set_allocated_strcustomizedstring(::std::string* strcustomizedstring) {
  if (strcustomizedstring != NULL) {
    set_has_strcustomizedstring();
  } else {
    clear_has_strcustomizedstring();
  }
  strcustomizedstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcustomizedstring);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}

// -------------------------------------------------------------------

// AddCustomizedURLResourceParams

// optional int32 customizedURLType = 1;
inline bool AddCustomizedURLResourceParams::has_customizedurltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCustomizedURLResourceParams::set_has_customizedurltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCustomizedURLResourceParams::clear_has_customizedurltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCustomizedURLResourceParams::clear_customizedurltype() {
  customizedurltype_ = 0;
  clear_has_customizedurltype();
}
inline ::google::protobuf::int32 AddCustomizedURLResourceParams::customizedurltype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedURLResourceParams.customizedURLType)
  return customizedurltype_;
}
inline void AddCustomizedURLResourceParams::set_customizedurltype(::google::protobuf::int32 value) {
  set_has_customizedurltype();
  customizedurltype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedURLResourceParams.customizedURLType)
}

// optional string strCustomizedURL = 2;
inline bool AddCustomizedURLResourceParams::has_strcustomizedurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCustomizedURLResourceParams::set_has_strcustomizedurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCustomizedURLResourceParams::clear_has_strcustomizedurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCustomizedURLResourceParams::clear_strcustomizedurl() {
  strcustomizedurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strcustomizedurl();
}
inline const ::std::string& AddCustomizedURLResourceParams::strcustomizedurl() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  return strcustomizedurl_.GetNoArena();
}
inline void AddCustomizedURLResourceParams::set_strcustomizedurl(const ::std::string& value) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
#if LANG_CXX11
inline void AddCustomizedURLResourceParams::set_strcustomizedurl(::std::string&& value) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
#endif
inline void AddCustomizedURLResourceParams::set_strcustomizedurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
inline void AddCustomizedURLResourceParams::set_strcustomizedurl(const char* value, size_t size) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
inline ::std::string* AddCustomizedURLResourceParams::mutable_strcustomizedurl() {
  set_has_strcustomizedurl();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  return strcustomizedurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddCustomizedURLResourceParams::release_strcustomizedurl() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  clear_has_strcustomizedurl();
  return strcustomizedurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddCustomizedURLResourceParams::set_allocated_strcustomizedurl(::std::string* strcustomizedurl) {
  if (strcustomizedurl != NULL) {
    set_has_strcustomizedurl();
  } else {
    clear_has_strcustomizedurl();
  }
  strcustomizedurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcustomizedurl);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}

// -------------------------------------------------------------------

// TryWithMeetingNumberParams

// optional uint64 meetingNumber = 1;
inline bool TryWithMeetingNumberParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TryWithMeetingNumberParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TryWithMeetingNumberParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TryWithMeetingNumberParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
inline ::google::protobuf::uint64 TryWithMeetingNumberParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TryWithMeetingNumberParams.meetingNumber)
  return meetingnumber_;
}
inline void TryWithMeetingNumberParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TryWithMeetingNumberParams.meetingNumber)
}

// -------------------------------------------------------------------

// TryWithPairingCodeParams

// optional string paringCode = 1;
inline bool TryWithPairingCodeParams::has_paringcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TryWithPairingCodeParams::set_has_paringcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TryWithPairingCodeParams::clear_has_paringcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TryWithPairingCodeParams::clear_paringcode() {
  paringcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paringcode();
}
inline const ::std::string& TryWithPairingCodeParams::paringcode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  return paringcode_.GetNoArena();
}
inline void TryWithPairingCodeParams::set_paringcode(const ::std::string& value) {
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
#if LANG_CXX11
inline void TryWithPairingCodeParams::set_paringcode(::std::string&& value) {
  set_has_paringcode();
  paringcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
#endif
inline void TryWithPairingCodeParams::set_paringcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
inline void TryWithPairingCodeParams::set_paringcode(const char* value, size_t size) {
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
inline ::std::string* TryWithPairingCodeParams::mutable_paringcode() {
  set_has_paringcode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  return paringcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TryWithPairingCodeParams::release_paringcode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  clear_has_paringcode();
  return paringcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TryWithPairingCodeParams::set_allocated_paringcode(::std::string* paringcode) {
  if (paringcode != NULL) {
    set_has_paringcode();
  } else {
    clear_has_paringcode();
  }
  paringcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paringcode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}

// -------------------------------------------------------------------

// StartAnnotationParams

// optional int32 viewType = 1;
inline bool StartAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 StartAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.viewType)
  return viewtype_;
}
inline void StartAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.viewType)
}

// optional string left = 2;
inline bool StartAnnotationParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartAnnotationParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartAnnotationParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartAnnotationParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& StartAnnotationParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.left)
  return left_.GetNoArena();
}
inline void StartAnnotationParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.left)
}
#if LANG_CXX11
inline void StartAnnotationParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAnnotationParams.left)
}
#endif
inline void StartAnnotationParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAnnotationParams.left)
}
inline void StartAnnotationParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAnnotationParams.left)
}
inline ::std::string* StartAnnotationParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAnnotationParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartAnnotationParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAnnotationParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartAnnotationParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAnnotationParams.left)
}

// optional string top = 3;
inline bool StartAnnotationParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartAnnotationParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartAnnotationParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartAnnotationParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& StartAnnotationParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.top)
  return top_.GetNoArena();
}
inline void StartAnnotationParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.top)
}
#if LANG_CXX11
inline void StartAnnotationParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAnnotationParams.top)
}
#endif
inline void StartAnnotationParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAnnotationParams.top)
}
inline void StartAnnotationParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAnnotationParams.top)
}
inline ::std::string* StartAnnotationParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAnnotationParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartAnnotationParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAnnotationParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartAnnotationParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAnnotationParams.top)
}

// -------------------------------------------------------------------

// StopAnnotationParams

// optional int32 viewType = 1;
inline bool StopAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 StopAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StopAnnotationParams.viewType)
  return viewtype_;
}
inline void StopAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StopAnnotationParams.viewType)
}

// -------------------------------------------------------------------

// SetToolParams

// optional int32 viewType = 1;
inline bool SetToolParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetToolParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetToolParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetToolParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 SetToolParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetToolParams.viewType)
  return viewtype_;
}
inline void SetToolParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetToolParams.viewType)
}

// optional int32 toolType = 2;
inline bool SetToolParams::has_tooltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetToolParams::set_has_tooltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetToolParams::clear_has_tooltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetToolParams::clear_tooltype() {
  tooltype_ = 0;
  clear_has_tooltype();
}
inline ::google::protobuf::int32 SetToolParams::tooltype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetToolParams.toolType)
  return tooltype_;
}
inline void SetToolParams::set_tooltype(::google::protobuf::int32 value) {
  set_has_tooltype();
  tooltype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetToolParams.toolType)
}

// -------------------------------------------------------------------

// ClearAnnotationParams

// optional int32 viewType = 1;
inline bool ClearAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClearAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClearAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClearAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 ClearAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ClearAnnotationParams.viewType)
  return viewtype_;
}
inline void ClearAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ClearAnnotationParams.viewType)
}

// optional int32 clearType = 2;
inline bool ClearAnnotationParams::has_cleartype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClearAnnotationParams::set_has_cleartype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClearAnnotationParams::clear_has_cleartype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClearAnnotationParams::clear_cleartype() {
  cleartype_ = 0;
  clear_has_cleartype();
}
inline ::google::protobuf::int32 ClearAnnotationParams::cleartype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ClearAnnotationParams.clearType)
  return cleartype_;
}
inline void ClearAnnotationParams::set_cleartype(::google::protobuf::int32 value) {
  set_has_cleartype();
  cleartype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ClearAnnotationParams.clearType)
}

// -------------------------------------------------------------------

// SetColorParams

// optional int32 viewType = 1;
inline bool SetColorParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetColorParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetColorParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetColorParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 SetColorParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetColorParams.viewType)
  return viewtype_;
}
inline void SetColorParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetColorParams.viewType)
}

// optional string color = 2;
inline bool SetColorParams::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetColorParams::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetColorParams::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetColorParams::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color();
}
inline const ::std::string& SetColorParams::color() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetColorParams.color)
  return color_.GetNoArena();
}
inline void SetColorParams::set_color(const ::std::string& value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetColorParams.color)
}
#if LANG_CXX11
inline void SetColorParams::set_color(::std::string&& value) {
  set_has_color();
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetColorParams.color)
}
#endif
inline void SetColorParams::set_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetColorParams.color)
}
inline void SetColorParams::set_color(const char* value, size_t size) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetColorParams.color)
}
inline ::std::string* SetColorParams::mutable_color() {
  set_has_color();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetColorParams.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetColorParams::release_color() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetColorParams.color)
  clear_has_color();
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetColorParams::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetColorParams.color)
}

// -------------------------------------------------------------------

// SetLineWidthParams

// optional int32 viewType = 1;
inline bool SetLineWidthParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetLineWidthParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetLineWidthParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetLineWidthParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 SetLineWidthParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetLineWidthParams.viewType)
  return viewtype_;
}
inline void SetLineWidthParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetLineWidthParams.viewType)
}

// optional string lineWidth = 2;
inline bool SetLineWidthParams::has_linewidth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetLineWidthParams::set_has_linewidth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetLineWidthParams::clear_has_linewidth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetLineWidthParams::clear_linewidth() {
  linewidth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_linewidth();
}
inline const ::std::string& SetLineWidthParams::linewidth() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  return linewidth_.GetNoArena();
}
inline void SetLineWidthParams::set_linewidth(const ::std::string& value) {
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
#if LANG_CXX11
inline void SetLineWidthParams::set_linewidth(::std::string&& value) {
  set_has_linewidth();
  linewidth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
#endif
inline void SetLineWidthParams::set_linewidth(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
inline void SetLineWidthParams::set_linewidth(const char* value, size_t size) {
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
inline ::std::string* SetLineWidthParams::mutable_linewidth() {
  set_has_linewidth();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  return linewidth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetLineWidthParams::release_linewidth() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  clear_has_linewidth();
  return linewidth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetLineWidthParams::set_allocated_linewidth(::std::string* linewidth) {
  if (linewidth != NULL) {
    set_has_linewidth();
  } else {
    clear_has_linewidth();
  }
  linewidth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), linewidth);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}

// -------------------------------------------------------------------

// UndoParams

// optional int32 viewType = 1;
inline bool UndoParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UndoParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UndoParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UndoParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 UndoParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UndoParams.viewType)
  return viewtype_;
}
inline void UndoParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UndoParams.viewType)
}

// -------------------------------------------------------------------

// RedoParams

// optional int32 viewType = 1;
inline bool RedoParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedoParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedoParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedoParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 RedoParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedoParams.viewType)
  return viewtype_;
}
inline void RedoParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedoParams.viewType)
}

// -------------------------------------------------------------------

// MuteAudioParams

// optional int32 userID = 1;
inline bool MuteAudioParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MuteAudioParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MuteAudioParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MuteAudioParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 MuteAudioParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteAudioParams.userID)
  return userid_;
}
inline void MuteAudioParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteAudioParams.userID)
}

// optional bool allowUnmuteBySelf = 2;
inline bool MuteAudioParams::has_allowunmutebyself() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MuteAudioParams::set_has_allowunmutebyself() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MuteAudioParams::clear_has_allowunmutebyself() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MuteAudioParams::clear_allowunmutebyself() {
  allowunmutebyself_ = false;
  clear_has_allowunmutebyself();
}
inline bool MuteAudioParams::allowunmutebyself() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteAudioParams.allowUnmuteBySelf)
  return allowunmutebyself_;
}
inline void MuteAudioParams::set_allowunmutebyself(bool value) {
  set_has_allowunmutebyself();
  allowunmutebyself_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteAudioParams.allowUnmuteBySelf)
}

// -------------------------------------------------------------------

// UnmuteAudioParams

// optional int32 userID = 1;
inline bool UnmuteAudioParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnmuteAudioParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnmuteAudioParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnmuteAudioParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 UnmuteAudioParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnmuteAudioParams.userID)
  return userid_;
}
inline void UnmuteAudioParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnmuteAudioParams.userID)
}

// -------------------------------------------------------------------

// EnablePlayChimeWhenEnterOrExitParams

// optional bool bEnable = 1;
inline bool EnablePlayChimeWhenEnterOrExitParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnablePlayChimeWhenEnterOrExitParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnablePlayChimeWhenEnterOrExitParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnablePlayChimeWhenEnterOrExitParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnablePlayChimeWhenEnterOrExitParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams.bEnable)
  return benable_;
}
inline void EnablePlayChimeWhenEnterOrExitParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams.bEnable)
}

// -------------------------------------------------------------------

// EnableInviteButtonOnMeeitngUIParams

// optional bool bEnable = 1;
inline bool EnableInviteButtonOnMeeitngUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableInviteButtonOnMeeitngUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableInviteButtonOnMeeitngUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableInviteButtonOnMeeitngUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableInviteButtonOnMeeitngUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams.bEnable)
  return benable_;
}
inline void EnableInviteButtonOnMeeitngUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams.bEnable)
}

// -------------------------------------------------------------------

// SetFloatVideoPosParams

// optional string left = 1;
inline bool SetFloatVideoPosParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFloatVideoPosParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFloatVideoPosParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFloatVideoPosParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& SetFloatVideoPosParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  return left_.GetNoArena();
}
inline void SetFloatVideoPosParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
#if LANG_CXX11
inline void SetFloatVideoPosParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
#endif
inline void SetFloatVideoPosParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
inline void SetFloatVideoPosParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
inline ::std::string* SetFloatVideoPosParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFloatVideoPosParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFloatVideoPosParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}

// optional string top = 2;
inline bool SetFloatVideoPosParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFloatVideoPosParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFloatVideoPosParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFloatVideoPosParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& SetFloatVideoPosParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  return top_.GetNoArena();
}
inline void SetFloatVideoPosParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
#if LANG_CXX11
inline void SetFloatVideoPosParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
#endif
inline void SetFloatVideoPosParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
inline void SetFloatVideoPosParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
inline ::std::string* SetFloatVideoPosParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFloatVideoPosParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFloatVideoPosParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}

// optional string hSelfWnd = 3;
inline bool SetFloatVideoPosParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetFloatVideoPosParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetFloatVideoPosParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetFloatVideoPosParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
inline const ::std::string& SetFloatVideoPosParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
inline void SetFloatVideoPosParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
#if LANG_CXX11
inline void SetFloatVideoPosParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
#endif
inline void SetFloatVideoPosParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
inline void SetFloatVideoPosParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
inline ::std::string* SetFloatVideoPosParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFloatVideoPosParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFloatVideoPosParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}

// optional string hParent = 4;
inline bool SetFloatVideoPosParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetFloatVideoPosParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetFloatVideoPosParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetFloatVideoPosParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& SetFloatVideoPosParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  return hparent_.GetNoArena();
}
inline void SetFloatVideoPosParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
#if LANG_CXX11
inline void SetFloatVideoPosParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
#endif
inline void SetFloatVideoPosParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
inline void SetFloatVideoPosParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
inline ::std::string* SetFloatVideoPosParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFloatVideoPosParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFloatVideoPosParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}

// -------------------------------------------------------------------

// SetBottomFloatToolBarWndVisibilityParams

// optional bool bShow = 1;
inline bool SetBottomFloatToolBarWndVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetBottomFloatToolBarWndVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetBottomFloatToolBarWndVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetBottomFloatToolBarWndVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetBottomFloatToolBarWndVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams.bShow)
  return bshow_;
}
inline void SetBottomFloatToolBarWndVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams.bShow)
}

// -------------------------------------------------------------------

// SetSharingToolBarVisibilityParams

// optional bool bShow = 1;
inline bool SetSharingToolBarVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSharingToolBarVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSharingToolBarVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSharingToolBarVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetSharingToolBarVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetSharingToolBarVisibilityParams.bShow)
  return bshow_;
}
inline void SetSharingToolBarVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetSharingToolBarVisibilityParams.bShow)
}

// -------------------------------------------------------------------

// SetDirectShareMonitorIDParams

// optional string monitorID = 1;
inline bool SetDirectShareMonitorIDParams::has_monitorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetDirectShareMonitorIDParams::set_has_monitorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetDirectShareMonitorIDParams::clear_has_monitorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetDirectShareMonitorIDParams::clear_monitorid() {
  monitorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_monitorid();
}
inline const ::std::string& SetDirectShareMonitorIDParams::monitorid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  return monitorid_.GetNoArena();
}
inline void SetDirectShareMonitorIDParams::set_monitorid(const ::std::string& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
#if LANG_CXX11
inline void SetDirectShareMonitorIDParams::set_monitorid(::std::string&& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
#endif
inline void SetDirectShareMonitorIDParams::set_monitorid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
inline void SetDirectShareMonitorIDParams::set_monitorid(const char* value, size_t size) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
inline ::std::string* SetDirectShareMonitorIDParams::mutable_monitorid() {
  set_has_monitorid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  return monitorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDirectShareMonitorIDParams::release_monitorid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  clear_has_monitorid();
  return monitorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDirectShareMonitorIDParams::set_allocated_monitorid(::std::string* monitorid) {
  if (monitorid != NULL) {
    set_has_monitorid();
  } else {
    clear_has_monitorid();
  }
  monitorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitorid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}

// -------------------------------------------------------------------

// SetMeetingUIPosParams

// optional string left = 1;
inline bool SetMeetingUIPosParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMeetingUIPosParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMeetingUIPosParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMeetingUIPosParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
inline const ::std::string& SetMeetingUIPosParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  return left_.GetNoArena();
}
inline void SetMeetingUIPosParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
#if LANG_CXX11
inline void SetMeetingUIPosParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
#endif
inline void SetMeetingUIPosParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
inline void SetMeetingUIPosParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
inline ::std::string* SetMeetingUIPosParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMeetingUIPosParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMeetingUIPosParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}

// optional string top = 2;
inline bool SetMeetingUIPosParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetMeetingUIPosParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetMeetingUIPosParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetMeetingUIPosParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
inline const ::std::string& SetMeetingUIPosParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  return top_.GetNoArena();
}
inline void SetMeetingUIPosParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
#if LANG_CXX11
inline void SetMeetingUIPosParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
#endif
inline void SetMeetingUIPosParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
inline void SetMeetingUIPosParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
inline ::std::string* SetMeetingUIPosParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMeetingUIPosParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMeetingUIPosParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}

// optional string hSelfWnd = 3;
inline bool SetMeetingUIPosParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetMeetingUIPosParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetMeetingUIPosParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetMeetingUIPosParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
inline const ::std::string& SetMeetingUIPosParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
inline void SetMeetingUIPosParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
#if LANG_CXX11
inline void SetMeetingUIPosParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
#endif
inline void SetMeetingUIPosParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
inline void SetMeetingUIPosParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
inline ::std::string* SetMeetingUIPosParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMeetingUIPosParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMeetingUIPosParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}

// optional string hParent = 4;
inline bool SetMeetingUIPosParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetMeetingUIPosParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetMeetingUIPosParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetMeetingUIPosParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
inline const ::std::string& SetMeetingUIPosParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  return hparent_.GetNoArena();
}
inline void SetMeetingUIPosParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
#if LANG_CXX11
inline void SetMeetingUIPosParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
#endif
inline void SetMeetingUIPosParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
inline void SetMeetingUIPosParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
inline ::std::string* SetMeetingUIPosParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMeetingUIPosParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMeetingUIPosParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}

// -------------------------------------------------------------------

// DisableWaitingForHostDialogParams

// optional bool bDisable = 1;
inline bool DisableWaitingForHostDialogParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableWaitingForHostDialogParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableWaitingForHostDialogParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableWaitingForHostDialogParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableWaitingForHostDialogParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableWaitingForHostDialogParams.bDisable)
  return bdisable_;
}
inline void DisableWaitingForHostDialogParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableWaitingForHostDialogParams.bDisable)
}

// -------------------------------------------------------------------

// DisablePopupMeetingWrongPSWDlgParams

// optional bool bDisable = 1;
inline bool DisablePopupMeetingWrongPSWDlgParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisablePopupMeetingWrongPSWDlgParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisablePopupMeetingWrongPSWDlgParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisablePopupMeetingWrongPSWDlgParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisablePopupMeetingWrongPSWDlgParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams.bDisable)
  return bdisable_;
}
inline void DisablePopupMeetingWrongPSWDlgParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams.bDisable)
}

// -------------------------------------------------------------------

// EnableAutoEndOtherMeetingWhenStartMeetingParams

// optional bool bEnable = 1;
inline bool EnableAutoEndOtherMeetingWhenStartMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoEndOtherMeetingWhenStartMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoEndOtherMeetingWhenStartMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoEndOtherMeetingWhenStartMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoEndOtherMeetingWhenStartMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams.bEnable)
  return benable_;
}
inline void EnableAutoEndOtherMeetingWhenStartMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableLButtonDBClick4SwitchFullScreenModeParams

// optional bool bEnable = 1;
inline bool EnableLButtonDBClick4SwitchFullScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableLButtonDBClick4SwitchFullScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableLButtonDBClick4SwitchFullScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableLButtonDBClick4SwitchFullScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableLButtonDBClick4SwitchFullScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams.bEnable)
  return benable_;
}
inline void EnableLButtonDBClick4SwitchFullScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams.bEnable)
}

// -------------------------------------------------------------------

// SetFloatVideoWndVisibilityParams

// optional bool bShow = 1;
inline bool SetFloatVideoWndVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFloatVideoWndVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFloatVideoWndVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFloatVideoWndVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetFloatVideoWndVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams.bShow)
  return bshow_;
}
inline void SetFloatVideoWndVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams.bShow)
}

// -------------------------------------------------------------------

// PrePopulateWebinarRegistrationInfoParams

// optional string email = 1;
inline bool PrePopulateWebinarRegistrationInfoParams::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrePopulateWebinarRegistrationInfoParams::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrePopulateWebinarRegistrationInfoParams::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrePopulateWebinarRegistrationInfoParams::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& PrePopulateWebinarRegistrationInfoParams::email() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  return email_.GetNoArena();
}
inline void PrePopulateWebinarRegistrationInfoParams::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
#if LANG_CXX11
inline void PrePopulateWebinarRegistrationInfoParams::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
#endif
inline void PrePopulateWebinarRegistrationInfoParams::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
inline void PrePopulateWebinarRegistrationInfoParams::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
inline ::std::string* PrePopulateWebinarRegistrationInfoParams::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrePopulateWebinarRegistrationInfoParams::release_email() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrePopulateWebinarRegistrationInfoParams::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}

// optional string userName = 2;
inline bool PrePopulateWebinarRegistrationInfoParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrePopulateWebinarRegistrationInfoParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrePopulateWebinarRegistrationInfoParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrePopulateWebinarRegistrationInfoParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PrePopulateWebinarRegistrationInfoParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  return username_.GetNoArena();
}
inline void PrePopulateWebinarRegistrationInfoParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
#if LANG_CXX11
inline void PrePopulateWebinarRegistrationInfoParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
#endif
inline void PrePopulateWebinarRegistrationInfoParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
inline void PrePopulateWebinarRegistrationInfoParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
inline ::std::string* PrePopulateWebinarRegistrationInfoParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrePopulateWebinarRegistrationInfoParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrePopulateWebinarRegistrationInfoParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}

// -------------------------------------------------------------------

// EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams

// optional bool bEnable = 1;
inline bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams.bEnable)
  return benable_;
}
inline void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoAdjustMicVolumeWhenJoinAudioParams

// optional bool bEnable = 1;
inline bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoAdjustMicVolumeWhenJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoAdjustMicVolumeWhenJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoAdjustMicVolumeWhenJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams.bEnable)
  return benable_;
}
inline void EnableAutoAdjustMicVolumeWhenJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams.bEnable)
}

// -------------------------------------------------------------------

// ConfigDSCPParams

// optional int32 dscpAudio = 1;
inline bool ConfigDSCPParams::has_dscpaudio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigDSCPParams::set_has_dscpaudio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigDSCPParams::clear_has_dscpaudio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigDSCPParams::clear_dscpaudio() {
  dscpaudio_ = 0;
  clear_has_dscpaudio();
}
inline ::google::protobuf::int32 ConfigDSCPParams::dscpaudio() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.dscpAudio)
  return dscpaudio_;
}
inline void ConfigDSCPParams::set_dscpaudio(::google::protobuf::int32 value) {
  set_has_dscpaudio();
  dscpaudio_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.dscpAudio)
}

// optional int32 dscpVideo = 2;
inline bool ConfigDSCPParams::has_dscpvideo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigDSCPParams::set_has_dscpvideo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigDSCPParams::clear_has_dscpvideo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigDSCPParams::clear_dscpvideo() {
  dscpvideo_ = 0;
  clear_has_dscpvideo();
}
inline ::google::protobuf::int32 ConfigDSCPParams::dscpvideo() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.dscpVideo)
  return dscpvideo_;
}
inline void ConfigDSCPParams::set_dscpvideo(::google::protobuf::int32 value) {
  set_has_dscpvideo();
  dscpvideo_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.dscpVideo)
}

// optional bool bReset = 3;
inline bool ConfigDSCPParams::has_breset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigDSCPParams::set_has_breset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigDSCPParams::clear_has_breset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigDSCPParams::clear_breset() {
  breset_ = false;
  clear_has_breset();
}
inline bool ConfigDSCPParams::breset() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.bReset)
  return breset_;
}
inline void ConfigDSCPParams::set_breset(bool value) {
  set_has_breset();
  breset_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.bReset)
}

// -------------------------------------------------------------------

// EnableHIdeFullPhoneNumber4PureCallinUserParams

// optional bool bEnable = 1;
inline bool EnableHIdeFullPhoneNumber4PureCallinUserParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableHIdeFullPhoneNumber4PureCallinUserParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableHIdeFullPhoneNumber4PureCallinUserParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableHIdeFullPhoneNumber4PureCallinUserParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableHIdeFullPhoneNumber4PureCallinUserParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams.bEnable)
  return benable_;
}
inline void EnableHIdeFullPhoneNumber4PureCallinUserParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams.bEnable)
}

// -------------------------------------------------------------------

// EnableShareIOSDeviceParams

// optional bool bEnable = 1;
inline bool EnableShareIOSDeviceParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableShareIOSDeviceParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableShareIOSDeviceParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableShareIOSDeviceParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableShareIOSDeviceParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShareIOSDeviceParams.bEnable)
  return benable_;
}
inline void EnableShareIOSDeviceParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShareIOSDeviceParams.bEnable)
}

// -------------------------------------------------------------------

// EnableShareWhiteBoardParams

// optional bool bEnable = 1;
inline bool EnableShareWhiteBoardParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableShareWhiteBoardParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableShareWhiteBoardParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableShareWhiteBoardParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableShareWhiteBoardParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShareWhiteBoardParams.bEnable)
  return benable_;
}
inline void EnableShareWhiteBoardParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShareWhiteBoardParams.bEnable)
}

// -------------------------------------------------------------------

// EnableLengthLimitationOfMeetingNumberParams

// optional bool bEnable = 1;
inline bool EnableLengthLimitationOfMeetingNumberParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableLengthLimitationOfMeetingNumberParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableLengthLimitationOfMeetingNumberParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableLengthLimitationOfMeetingNumberParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableLengthLimitationOfMeetingNumberParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams.bEnable)
  return benable_;
}
inline void EnableLengthLimitationOfMeetingNumberParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams.bEnable)
}

// -------------------------------------------------------------------

// ForceDisableMultiShareParams

// optional bool bDisable = 1;
inline bool ForceDisableMultiShareParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForceDisableMultiShareParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForceDisableMultiShareParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForceDisableMultiShareParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool ForceDisableMultiShareParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ForceDisableMultiShareParams.bDisable)
  return bdisable_;
}
inline void ForceDisableMultiShareParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ForceDisableMultiShareParams.bDisable)
}

// -------------------------------------------------------------------

// EnableLocalRecordingConverProgressBarDialogParams

// optional bool bEnable = 1;
inline bool EnableLocalRecordingConverProgressBarDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableLocalRecordingConverProgressBarDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableLocalRecordingConverProgressBarDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableLocalRecordingConverProgressBarDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableLocalRecordingConverProgressBarDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams.bEnable)
  return benable_;
}
inline void EnableLocalRecordingConverProgressBarDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams.bEnable)
}

// -------------------------------------------------------------------

// SetMaxDurationForOnlyHostInMeetingParams

// optional int32 nDuration = 1;
inline bool SetMaxDurationForOnlyHostInMeetingParams::has_nduration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMaxDurationForOnlyHostInMeetingParams::set_has_nduration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMaxDurationForOnlyHostInMeetingParams::clear_has_nduration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMaxDurationForOnlyHostInMeetingParams::clear_nduration() {
  nduration_ = 0;
  clear_has_nduration();
}
inline ::google::protobuf::int32 SetMaxDurationForOnlyHostInMeetingParams::nduration() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams.nDuration)
  return nduration_;
}
inline void SetMaxDurationForOnlyHostInMeetingParams::set_nduration(::google::protobuf::int32 value) {
  set_has_nduration();
  nduration_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams.nDuration)
}

// -------------------------------------------------------------------

// EnableApproveRemoteControlDlgParams

// optional bool bEnable = 1;
inline bool EnableApproveRemoteControlDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableApproveRemoteControlDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableApproveRemoteControlDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableApproveRemoteControlDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableApproveRemoteControlDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams.bEnable)
  return benable_;
}
inline void EnableApproveRemoteControlDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams.bEnable)
}

// -------------------------------------------------------------------

// EnableDeclineRemoteControlResponseDlgParams

// optional bool bEnable = 1;
inline bool EnableDeclineRemoteControlResponseDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableDeclineRemoteControlResponseDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableDeclineRemoteControlResponseDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableDeclineRemoteControlResponseDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableDeclineRemoteControlResponseDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams.bEnable)
  return benable_;
}
inline void EnableDeclineRemoteControlResponseDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams.bEnable)
}

// -------------------------------------------------------------------

// EnableLeaveMeetingOptionForHostParams

// optional bool bEnable = 1;
inline bool EnableLeaveMeetingOptionForHostParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableLeaveMeetingOptionForHostParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableLeaveMeetingOptionForHostParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableLeaveMeetingOptionForHostParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableLeaveMeetingOptionForHostParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams.bEnable)
  return benable_;
}
inline void EnableLeaveMeetingOptionForHostParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams.bEnable)
}

// -------------------------------------------------------------------

// EnableVideoButtonOnMeetingUIParams

// optional bool bEnable = 1;
inline bool EnableVideoButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableVideoButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableVideoButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableVideoButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableVideoButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams.bEnable)
  return benable_;
}
inline void EnableVideoButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAudioButtonOnMeetingUIParams

// optional bool bEnable = 1;
inline bool EnableAudioButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAudioButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAudioButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAudioButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAudioButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams.bEnable)
  return benable_;
}
inline void EnableAudioButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams.bEnable)
}

// -------------------------------------------------------------------

// EnableEnterAndExitFullScreenButtonOnMeetingUIParams

// optional bool bEnable = 1;
inline bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams.bEnable)
  return benable_;
}
inline void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams.bEnable)
}

// -------------------------------------------------------------------

// RedirectClickShareBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickShareBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickShareBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickShareBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickShareBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickShareBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickShareBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickShareBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickShareBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickEndMeetingBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickEndMeetingBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickEndMeetingBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickEndMeetingBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickEndMeetingBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickEndMeetingBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickEndMeetingBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectFreeMeetingEndingReminderDlgParams

// optional bool bRedirect = 1;
inline bool RedirectFreeMeetingEndingReminderDlgParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectFreeMeetingEndingReminderDlgParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectFreeMeetingEndingReminderDlgParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectFreeMeetingEndingReminderDlgParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectFreeMeetingEndingReminderDlgParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams.bRedirect)
  return bredirect_;
}
inline void RedirectFreeMeetingEndingReminderDlgParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickCustomLiveStreamMenuEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickCustomLiveStreamMenuEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickCustomLiveStreamMenuEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickCustomLiveStreamMenuEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickCustomLiveStreamMenuEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickCustomLiveStreamMenuEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickCustomLiveStreamMenuEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickParticipantListBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickParticipantListBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickParticipantListBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickParticipantListBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickParticipantListBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickParticipantListBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickParticipantListBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickCCBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickCCBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickCCBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickCCBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickCCBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickCCBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickCCBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickCCBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickCCBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickAudioBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickAudioBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickAudioBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickAudioBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickAudioBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickAudioBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickAudioBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickAudioBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickAudioBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectClickAudioMenuBTNEventParams

// optional bool bRedirect = 1;
inline bool RedirectClickAudioMenuBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectClickAudioMenuBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectClickAudioMenuBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectClickAudioMenuBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectClickAudioMenuBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams.bRedirect)
  return bredirect_;
}
inline void RedirectClickAudioMenuBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectMeetingWarningMsgParams

// optional bool bRedirectBadNetwork = 1;
inline bool RedirectMeetingWarningMsgParams::has_bredirectbadnetwork() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectMeetingWarningMsgParams::set_has_bredirectbadnetwork() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectMeetingWarningMsgParams::clear_has_bredirectbadnetwork() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectMeetingWarningMsgParams::clear_bredirectbadnetwork() {
  bredirectbadnetwork_ = false;
  clear_has_bredirectbadnetwork();
}
inline bool RedirectMeetingWarningMsgParams::bredirectbadnetwork() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectBadNetwork)
  return bredirectbadnetwork_;
}
inline void RedirectMeetingWarningMsgParams::set_bredirectbadnetwork(bool value) {
  set_has_bredirectbadnetwork();
  bredirectbadnetwork_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectBadNetwork)
}

// optional bool bRedirectWarnHighCPU = 2;
inline bool RedirectMeetingWarningMsgParams::has_bredirectwarnhighcpu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedirectMeetingWarningMsgParams::set_has_bredirectwarnhighcpu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedirectMeetingWarningMsgParams::clear_has_bredirectwarnhighcpu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedirectMeetingWarningMsgParams::clear_bredirectwarnhighcpu() {
  bredirectwarnhighcpu_ = false;
  clear_has_bredirectwarnhighcpu();
}
inline bool RedirectMeetingWarningMsgParams::bredirectwarnhighcpu() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectWarnHighCPU)
  return bredirectwarnhighcpu_;
}
inline void RedirectMeetingWarningMsgParams::set_bredirectwarnhighcpu(bool value) {
  set_has_bredirectwarnhighcpu();
  bredirectwarnhighcpu_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectWarnHighCPU)
}

// -------------------------------------------------------------------

// EnableToolTipsShowParams

// optional bool bEnable = 1;
inline bool EnableToolTipsShowParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableToolTipsShowParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableToolTipsShowParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableToolTipsShowParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableToolTipsShowParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableToolTipsShowParams.bEnable)
  return benable_;
}
inline void EnableToolTipsShowParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableToolTipsShowParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAirplayInstructionWindowParams

// optional bool bEnable = 1;
inline bool EnableAirplayInstructionWindowParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAirplayInstructionWindowParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAirplayInstructionWindowParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAirplayInstructionWindowParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAirplayInstructionWindowParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAirplayInstructionWindowParams.bEnable)
  return benable_;
}
inline void EnableAirplayInstructionWindowParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAirplayInstructionWindowParams.bEnable)
}

// -------------------------------------------------------------------

// EnableClaimHostFeatureParams

// optional bool bEnable = 1;
inline bool EnableClaimHostFeatureParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableClaimHostFeatureParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableClaimHostFeatureParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableClaimHostFeatureParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableClaimHostFeatureParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableClaimHostFeatureParams.bEnable)
  return benable_;
}
inline void EnableClaimHostFeatureParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableClaimHostFeatureParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoHideJoinAudioDialogParams

// optional bool bEnable = 1;
inline bool EnableAutoHideJoinAudioDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoHideJoinAudioDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoHideJoinAudioDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoHideJoinAudioDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoHideJoinAudioDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams.bEnable)
  return benable_;
}
inline void EnableAutoHideJoinAudioDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams.bEnable)
}

// -------------------------------------------------------------------

// AlwaysShowIconOnTaskBarParams

// optional bool bAlwaysShow = 1;
inline bool AlwaysShowIconOnTaskBarParams::has_balwaysshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlwaysShowIconOnTaskBarParams::set_has_balwaysshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlwaysShowIconOnTaskBarParams::clear_has_balwaysshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlwaysShowIconOnTaskBarParams::clear_balwaysshow() {
  balwaysshow_ = false;
  clear_has_balwaysshow();
}
inline bool AlwaysShowIconOnTaskBarParams::balwaysshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams.bAlwaysShow)
  return balwaysshow_;
}
inline void AlwaysShowIconOnTaskBarParams::set_balwaysshow(bool value) {
  set_has_balwaysshow();
  balwaysshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams.bAlwaysShow)
}

// -------------------------------------------------------------------

// DisableSplitScreenModeUIElementsParams

// optional bool bDisable = 1;
inline bool DisableSplitScreenModeUIElementsParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableSplitScreenModeUIElementsParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableSplitScreenModeUIElementsParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableSplitScreenModeUIElementsParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableSplitScreenModeUIElementsParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams.bDisable)
  return bdisable_;
}
inline void DisableSplitScreenModeUIElementsParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams.bDisable)
}

// -------------------------------------------------------------------

// SetShowAudioUseComputerSoundChkboxParams

// optional bool bShow = 1;
inline bool SetShowAudioUseComputerSoundChkboxParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowAudioUseComputerSoundChkboxParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowAudioUseComputerSoundChkboxParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowAudioUseComputerSoundChkboxParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowAudioUseComputerSoundChkboxParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams.bShow)
  return bshow_;
}
inline void SetShowAudioUseComputerSoundChkboxParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams.bShow)
}

// -------------------------------------------------------------------

// SetShowCallInTabParams

// optional bool bShow = 1;
inline bool SetShowCallInTabParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowCallInTabParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowCallInTabParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowCallInTabParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowCallInTabParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowCallInTabParams.bShow)
  return bshow_;
}
inline void SetShowCallInTabParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowCallInTabParams.bShow)
}

// -------------------------------------------------------------------

// SetShowCallMeTabParams

// optional bool bShow = 1;
inline bool SetShowCallMeTabParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowCallMeTabParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowCallMeTabParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowCallMeTabParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowCallMeTabParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowCallMeTabParams.bShow)
  return bshow_;
}
inline void SetShowCallMeTabParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowCallMeTabParams.bShow)
}

// -------------------------------------------------------------------

// DisableTopMostAttr4SettingDialogParams

// optional bool bDisable = 1;
inline bool DisableTopMostAttr4SettingDialogParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableTopMostAttr4SettingDialogParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableTopMostAttr4SettingDialogParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableTopMostAttr4SettingDialogParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableTopMostAttr4SettingDialogParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams.bDisable)
  return bdisable_;
}
inline void DisableTopMostAttr4SettingDialogParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams.bDisable)
}

// -------------------------------------------------------------------

// EnableGrabShareWithoutReminderParams

// optional bool bEnable = 1;
inline bool EnableGrabShareWithoutReminderParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableGrabShareWithoutReminderParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableGrabShareWithoutReminderParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableGrabShareWithoutReminderParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableGrabShareWithoutReminderParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams.bEnable)
  return benable_;
}
inline void EnableGrabShareWithoutReminderParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams.bEnable)
}

// -------------------------------------------------------------------

// EnableShowShareSwitchMultiToSingleConfirmDlgParams

// optional bool bEnable = 1;
inline bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableShowShareSwitchMultiToSingleConfirmDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableShowShareSwitchMultiToSingleConfirmDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableShowShareSwitchMultiToSingleConfirmDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams.bEnable)
  return benable_;
}
inline void EnableShowShareSwitchMultiToSingleConfirmDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams.bEnable)
}

// -------------------------------------------------------------------

// DisableFreeMeetingRemainTimeNotifyParams

// optional bool bDisable = 1;
inline bool DisableFreeMeetingRemainTimeNotifyParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableFreeMeetingRemainTimeNotifyParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableFreeMeetingRemainTimeNotifyParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableFreeMeetingRemainTimeNotifyParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableFreeMeetingRemainTimeNotifyParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams.bDisable)
  return bdisable_;
}
inline void DisableFreeMeetingRemainTimeNotifyParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams.bDisable)
}

// -------------------------------------------------------------------

// HideChatItemOnMeetingUIParams

// optional bool bHide = 1;
inline bool HideChatItemOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideChatItemOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideChatItemOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideChatItemOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideChatItemOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideChatItemOnMeetingUIParams.bHide)
  return bhide_;
}
inline void HideChatItemOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideChatItemOnMeetingUIParams.bHide)
}

// -------------------------------------------------------------------

// HideRecordItemOnMeetingUIParams

// optional bool bHide = 1;
inline bool HideRecordItemOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideRecordItemOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideRecordItemOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideRecordItemOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideRecordItemOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams.bHide)
  return bhide_;
}
inline void HideRecordItemOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams.bHide)
}

// -------------------------------------------------------------------

// HideUpgradeFreeMeetingButtonParams

// optional bool bHide = 1;
inline bool HideUpgradeFreeMeetingButtonParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideUpgradeFreeMeetingButtonParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideUpgradeFreeMeetingButtonParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideUpgradeFreeMeetingButtonParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideUpgradeFreeMeetingButtonParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams.bHide)
  return bhide_;
}
inline void HideUpgradeFreeMeetingButtonParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams.bHide)
}

// -------------------------------------------------------------------

// SetShowInviteDlgTabPageParams

// optional int32 tabPage = 1;
inline bool SetShowInviteDlgTabPageParams::has_tabpage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowInviteDlgTabPageParams::set_has_tabpage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowInviteDlgTabPageParams::clear_has_tabpage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowInviteDlgTabPageParams::clear_tabpage() {
  tabpage_ = 0;
  clear_has_tabpage();
}
inline ::google::protobuf::int32 SetShowInviteDlgTabPageParams::tabpage() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.tabPage)
  return tabpage_;
}
inline void SetShowInviteDlgTabPageParams::set_tabpage(::google::protobuf::int32 value) {
  set_has_tabpage();
  tabpage_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.tabPage)
}

// optional bool bShow = 2;
inline bool SetShowInviteDlgTabPageParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetShowInviteDlgTabPageParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetShowInviteDlgTabPageParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetShowInviteDlgTabPageParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowInviteDlgTabPageParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.bShow)
  return bshow_;
}
inline void SetShowInviteDlgTabPageParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.bShow)
}

// -------------------------------------------------------------------

// SetShowH323SubTabPageParams

// optional int32 tabPage = 1;
inline bool SetShowH323SubTabPageParams::has_tabpage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowH323SubTabPageParams::set_has_tabpage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowH323SubTabPageParams::clear_has_tabpage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowH323SubTabPageParams::clear_tabpage() {
  tabpage_ = 0;
  clear_has_tabpage();
}
inline ::google::protobuf::int32 SetShowH323SubTabPageParams::tabpage() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowH323SubTabPageParams.tabPage)
  return tabpage_;
}
inline void SetShowH323SubTabPageParams::set_tabpage(::google::protobuf::int32 value) {
  set_has_tabpage();
  tabpage_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowH323SubTabPageParams.tabPage)
}

// optional bool bShow = 2;
inline bool SetShowH323SubTabPageParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetShowH323SubTabPageParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetShowH323SubTabPageParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetShowH323SubTabPageParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowH323SubTabPageParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowH323SubTabPageParams.bShow)
  return bshow_;
}
inline void SetShowH323SubTabPageParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowH323SubTabPageParams.bShow)
}

// -------------------------------------------------------------------

// HideUpgradeWarningMsgForFreeUserWhenScheduleParams

// optional bool bHide = 1;
inline bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams.bHide)
  return bhide_;
}
inline void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams.bHide)
}

// -------------------------------------------------------------------

// HideSwitchCameraButtonParams

// optional bool bHide = 1;
inline bool HideSwitchCameraButtonParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideSwitchCameraButtonParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideSwitchCameraButtonParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideSwitchCameraButtonParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideSwitchCameraButtonParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideSwitchCameraButtonParams.bHide)
  return bhide_;
}
inline void HideSwitchCameraButtonParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideSwitchCameraButtonParams.bHide)
}

// -------------------------------------------------------------------

// HideCopyUrlOnInviteWindowParams

// optional bool bHide = 1;
inline bool HideCopyUrlOnInviteWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideCopyUrlOnInviteWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideCopyUrlOnInviteWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideCopyUrlOnInviteWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideCopyUrlOnInviteWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams.bHide)
  return bhide_;
}
inline void HideCopyUrlOnInviteWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams.bHide)
}

// -------------------------------------------------------------------

// HideCopyInvitationOnInviteWindowParams

// optional bool bHide = 1;
inline bool HideCopyInvitationOnInviteWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideCopyInvitationOnInviteWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideCopyInvitationOnInviteWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideCopyInvitationOnInviteWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideCopyInvitationOnInviteWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams.bHide)
  return bhide_;
}
inline void HideCopyInvitationOnInviteWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams.bHide)
}

// -------------------------------------------------------------------

// HideKeypadButtonOnMeetingWindowParams

// optional bool bHide = 1;
inline bool HideKeypadButtonOnMeetingWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideKeypadButtonOnMeetingWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideKeypadButtonOnMeetingWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideKeypadButtonOnMeetingWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideKeypadButtonOnMeetingWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams.bHide)
  return bhide_;
}
inline void HideKeypadButtonOnMeetingWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams.bHide)
}

// -------------------------------------------------------------------

// HideRemoteControlOnMeetingUIParams

// optional bool bHide = 1;
inline bool HideRemoteControlOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideRemoteControlOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideRemoteControlOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideRemoteControlOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideRemoteControlOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams.bHide)
  return bhide_;
}
inline void HideRemoteControlOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams.bHide)
}

// -------------------------------------------------------------------

// HideQAOnMeetingUIParams

// optional bool bHide = 1;
inline bool HideQAOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideQAOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideQAOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideQAOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideQAOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideQAOnMeetingUIParams.bHide)
  return bhide_;
}
inline void HideQAOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideQAOnMeetingUIParams.bHide)
}

// -------------------------------------------------------------------

// HidePollOnMeetingUIParams

// optional bool bHide = 1;
inline bool HidePollOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HidePollOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HidePollOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HidePollOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HidePollOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HidePollOnMeetingUIParams.bHide)
  return bhide_;
}
inline void HidePollOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HidePollOnMeetingUIParams.bHide)
}

// -------------------------------------------------------------------

// EnableInputMeetingPasswordDlgParams

// optional bool bEnable = 1;
inline bool EnableInputMeetingPasswordDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableInputMeetingPasswordDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableInputMeetingPasswordDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableInputMeetingPasswordDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableInputMeetingPasswordDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams.bEnable)
  return benable_;
}
inline void EnableInputMeetingPasswordDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams.bEnable)
}

// -------------------------------------------------------------------

// EnableInputMeetingScreenNameDlgParams

// optional bool bEnable = 1;
inline bool EnableInputMeetingScreenNameDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableInputMeetingScreenNameDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableInputMeetingScreenNameDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableInputMeetingScreenNameDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableInputMeetingScreenNameDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams.bEnable)
  return benable_;
}
inline void EnableInputMeetingScreenNameDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams.bEnable)
}

// -------------------------------------------------------------------

// RedirectWebinarNeedRegisterParams

// optional bool bRedirect = 1;
inline bool RedirectWebinarNeedRegisterParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectWebinarNeedRegisterParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectWebinarNeedRegisterParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectWebinarNeedRegisterParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectWebinarNeedRegisterParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams.bRedirect)
  return bredirect_;
}
inline void RedirectWebinarNeedRegisterParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams.bRedirect)
}

// -------------------------------------------------------------------

// RedirectEndOtherMeetingParams

// optional bool bRedirect = 1;
inline bool RedirectEndOtherMeetingParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectEndOtherMeetingParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectEndOtherMeetingParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectEndOtherMeetingParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
inline bool RedirectEndOtherMeetingParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectEndOtherMeetingParams.bRedirect)
  return bredirect_;
}
inline void RedirectEndOtherMeetingParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectEndOtherMeetingParams.bRedirect)
}

// -------------------------------------------------------------------

// EnableForceAutoStartMyVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
inline bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableForceAutoStartMyVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableForceAutoStartMyVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableForceAutoStartMyVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
inline void EnableForceAutoStartMyVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableForceAutoStopMyVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
inline bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableForceAutoStopMyVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableForceAutoStopMyVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableForceAutoStopMyVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
inline void EnableForceAutoStopMyVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams

// optional bool bDisable = 1;
inline bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams.bDisable)
  return bdisable_;
}
inline void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams.bDisable)
}

// -------------------------------------------------------------------

// DisableShowJoinMeetingWndParams

// optional bool bDisable = 1;
inline bool DisableShowJoinMeetingWndParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableShowJoinMeetingWndParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableShowJoinMeetingWndParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableShowJoinMeetingWndParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableShowJoinMeetingWndParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableShowJoinMeetingWndParams.bDisable)
  return bdisable_;
}
inline void DisableShowJoinMeetingWndParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableShowJoinMeetingWndParams.bDisable)
}

// -------------------------------------------------------------------

// DisableConfidentialWatermarkParams

// optional bool bDisable = 1;
inline bool DisableConfidentialWatermarkParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableConfidentialWatermarkParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableConfidentialWatermarkParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableConfidentialWatermarkParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableConfidentialWatermarkParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableConfidentialWatermarkParams.bDisable)
  return bdisable_;
}
inline void DisableConfidentialWatermarkParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableConfidentialWatermarkParams.bDisable)
}

// -------------------------------------------------------------------

// DisableRemoteCtrlCopyPasteFeatureParams

// optional bool bDisable = 1;
inline bool DisableRemoteCtrlCopyPasteFeatureParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableRemoteCtrlCopyPasteFeatureParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableRemoteCtrlCopyPasteFeatureParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableRemoteCtrlCopyPasteFeatureParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableRemoteCtrlCopyPasteFeatureParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams.bDisable)
  return bdisable_;
}
inline void DisableRemoteCtrlCopyPasteFeatureParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams.bDisable)
}

// -------------------------------------------------------------------

// DisableToolbarInviteButtonClickOriginActionParams

// optional bool bDisable = 1;
inline bool DisableToolbarInviteButtonClickOriginActionParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableToolbarInviteButtonClickOriginActionParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableToolbarInviteButtonClickOriginActionParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableToolbarInviteButtonClickOriginActionParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableToolbarInviteButtonClickOriginActionParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams.bDisable)
  return bdisable_;
}
inline void DisableToolbarInviteButtonClickOriginActionParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams.bDisable)
}

// -------------------------------------------------------------------

// SetShowVideoOptimizeChkboxParams

// optional bool bShow = 1;
inline bool SetShowVideoOptimizeChkboxParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetShowVideoOptimizeChkboxParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetShowVideoOptimizeChkboxParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetShowVideoOptimizeChkboxParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool SetShowVideoOptimizeChkboxParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams.bShow)
  return bshow_;
}
inline void SetShowVideoOptimizeChkboxParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams.bShow)
}

// -------------------------------------------------------------------

// InputMeetingPasswordAndScreenNameParams

// optional string psw = 1;
inline bool InputMeetingPasswordAndScreenNameParams::has_psw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMeetingPasswordAndScreenNameParams::set_has_psw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InputMeetingPasswordAndScreenNameParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InputMeetingPasswordAndScreenNameParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
inline const ::std::string& InputMeetingPasswordAndScreenNameParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  return psw_.GetNoArena();
}
inline void InputMeetingPasswordAndScreenNameParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
#if LANG_CXX11
inline void InputMeetingPasswordAndScreenNameParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
#endif
inline void InputMeetingPasswordAndScreenNameParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
inline void InputMeetingPasswordAndScreenNameParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
inline ::std::string* InputMeetingPasswordAndScreenNameParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMeetingPasswordAndScreenNameParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMeetingPasswordAndScreenNameParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}

// optional string screenName = 2;
inline bool InputMeetingPasswordAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputMeetingPasswordAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InputMeetingPasswordAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InputMeetingPasswordAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
inline const ::std::string& InputMeetingPasswordAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
inline void InputMeetingPasswordAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
#if LANG_CXX11
inline void InputMeetingPasswordAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
#endif
inline void InputMeetingPasswordAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
inline void InputMeetingPasswordAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
inline ::std::string* InputMeetingPasswordAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMeetingPasswordAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMeetingPasswordAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}

// -------------------------------------------------------------------

// InputMeetingIDAndScreenNameParams

// optional string meetingID = 1;
inline bool InputMeetingIDAndScreenNameParams::has_meetingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMeetingIDAndScreenNameParams::set_has_meetingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InputMeetingIDAndScreenNameParams::clear_has_meetingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InputMeetingIDAndScreenNameParams::clear_meetingid() {
  meetingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_meetingid();
}
inline const ::std::string& InputMeetingIDAndScreenNameParams::meetingid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  return meetingid_.GetNoArena();
}
inline void InputMeetingIDAndScreenNameParams::set_meetingid(const ::std::string& value) {
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
#if LANG_CXX11
inline void InputMeetingIDAndScreenNameParams::set_meetingid(::std::string&& value) {
  set_has_meetingid();
  meetingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
#endif
inline void InputMeetingIDAndScreenNameParams::set_meetingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
inline void InputMeetingIDAndScreenNameParams::set_meetingid(const char* value, size_t size) {
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
inline ::std::string* InputMeetingIDAndScreenNameParams::mutable_meetingid() {
  set_has_meetingid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  return meetingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMeetingIDAndScreenNameParams::release_meetingid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  clear_has_meetingid();
  return meetingid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMeetingIDAndScreenNameParams::set_allocated_meetingid(::std::string* meetingid) {
  if (meetingid != NULL) {
    set_has_meetingid();
  } else {
    clear_has_meetingid();
  }
  meetingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meetingid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}

// optional string screenName = 2;
inline bool InputMeetingIDAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputMeetingIDAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InputMeetingIDAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InputMeetingIDAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
inline const ::std::string& InputMeetingIDAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
inline void InputMeetingIDAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
#if LANG_CXX11
inline void InputMeetingIDAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
#endif
inline void InputMeetingIDAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
inline void InputMeetingIDAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
inline ::std::string* InputMeetingIDAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMeetingIDAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMeetingIDAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}

// -------------------------------------------------------------------

// InputMeetingScreenNameParams

// optional string screenName = 1;
inline bool InputMeetingScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMeetingScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InputMeetingScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InputMeetingScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
inline const ::std::string& InputMeetingScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
inline void InputMeetingScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
#if LANG_CXX11
inline void InputMeetingScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
#endif
inline void InputMeetingScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
inline void InputMeetingScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
inline ::std::string* InputMeetingScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMeetingScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMeetingScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}

// -------------------------------------------------------------------

// InputWebinarRegisterEmailAndScreenNameParams

// optional string email = 1;
inline bool InputWebinarRegisterEmailAndScreenNameParams::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& InputWebinarRegisterEmailAndScreenNameParams::email() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  return email_.GetNoArena();
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
#if LANG_CXX11
inline void InputWebinarRegisterEmailAndScreenNameParams::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
#endif
inline void InputWebinarRegisterEmailAndScreenNameParams::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
inline ::std::string* InputWebinarRegisterEmailAndScreenNameParams::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputWebinarRegisterEmailAndScreenNameParams::release_email() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}

// optional string screenName = 2;
inline bool InputWebinarRegisterEmailAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InputWebinarRegisterEmailAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
inline const ::std::string& InputWebinarRegisterEmailAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
#if LANG_CXX11
inline void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
#endif
inline void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
inline ::std::string* InputWebinarRegisterEmailAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputWebinarRegisterEmailAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputWebinarRegisterEmailAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}

// -------------------------------------------------------------------

// CallOutH323Params

// optional string deviceName = 1;
inline bool CallOutH323Params::has_devicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallOutH323Params::set_has_devicename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallOutH323Params::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallOutH323Params::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
inline const ::std::string& CallOutH323Params::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceName)
  return devicename_.GetNoArena();
}
inline void CallOutH323Params::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
#if LANG_CXX11
inline void CallOutH323Params::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
#endif
inline void CallOutH323Params::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
inline void CallOutH323Params::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
inline ::std::string* CallOutH323Params::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallOutH323Params::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallOutH323Params::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceName)
}

// optional string deviceIP = 2;
inline bool CallOutH323Params::has_deviceip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallOutH323Params::set_has_deviceip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallOutH323Params::clear_has_deviceip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallOutH323Params::clear_deviceip() {
  deviceip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceip();
}
inline const ::std::string& CallOutH323Params::deviceip() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  return deviceip_.GetNoArena();
}
inline void CallOutH323Params::set_deviceip(const ::std::string& value) {
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
#if LANG_CXX11
inline void CallOutH323Params::set_deviceip(::std::string&& value) {
  set_has_deviceip();
  deviceip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
#endif
inline void CallOutH323Params::set_deviceip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
inline void CallOutH323Params::set_deviceip(const char* value, size_t size) {
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
inline ::std::string* CallOutH323Params::mutable_deviceip() {
  set_has_deviceip();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  return deviceip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallOutH323Params::release_deviceip() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  clear_has_deviceip();
  return deviceip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallOutH323Params::set_allocated_deviceip(::std::string* deviceip) {
  if (deviceip != NULL) {
    set_has_deviceip();
  } else {
    clear_has_deviceip();
  }
  deviceip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceip);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}

// optional string deviceE164num = 3;
inline bool CallOutH323Params::has_devicee164num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CallOutH323Params::set_has_devicee164num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CallOutH323Params::clear_has_devicee164num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CallOutH323Params::clear_devicee164num() {
  devicee164num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicee164num();
}
inline const ::std::string& CallOutH323Params::devicee164num() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  return devicee164num_.GetNoArena();
}
inline void CallOutH323Params::set_devicee164num(const ::std::string& value) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
#if LANG_CXX11
inline void CallOutH323Params::set_devicee164num(::std::string&& value) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
#endif
inline void CallOutH323Params::set_devicee164num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
inline void CallOutH323Params::set_devicee164num(const char* value, size_t size) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
inline ::std::string* CallOutH323Params::mutable_devicee164num() {
  set_has_devicee164num();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  return devicee164num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallOutH323Params::release_devicee164num() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  clear_has_devicee164num();
  return devicee164num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallOutH323Params::set_allocated_devicee164num(::std::string* devicee164num) {
  if (devicee164num != NULL) {
    set_has_devicee164num();
  } else {
    clear_has_devicee164num();
  }
  devicee164num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicee164num);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}

// optional int32 h323DeviceType = 4;
inline bool CallOutH323Params::has_h323devicetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CallOutH323Params::set_has_h323devicetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CallOutH323Params::clear_has_h323devicetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CallOutH323Params::clear_h323devicetype() {
  h323devicetype_ = 0;
  clear_has_h323devicetype();
}
inline ::google::protobuf::int32 CallOutH323Params::h323devicetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.h323DeviceType)
  return h323devicetype_;
}
inline void CallOutH323Params::set_h323devicetype(::google::protobuf::int32 value) {
  set_has_h323devicetype();
  h323devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.h323DeviceType)
}

// -------------------------------------------------------------------

// GetUserInfoByUserIDParams

// optional uint32 userID = 1;
inline bool GetUserInfoByUserIDParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoByUserIDParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoByUserIDParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoByUserIDParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 GetUserInfoByUserIDParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetUserInfoByUserIDParams.userID)
  return userid_;
}
inline void GetUserInfoByUserIDParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetUserInfoByUserIDParams.userID)
}

// -------------------------------------------------------------------

// StartRecordingParams

// optional string recPath = 1;
inline bool StartRecordingParams::has_recpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartRecordingParams::set_has_recpath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartRecordingParams::clear_has_recpath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartRecordingParams::clear_recpath() {
  recpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recpath();
}
inline const ::std::string& StartRecordingParams::recpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartRecordingParams.recPath)
  return recpath_.GetNoArena();
}
inline void StartRecordingParams::set_recpath(const ::std::string& value) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartRecordingParams.recPath)
}
#if LANG_CXX11
inline void StartRecordingParams::set_recpath(::std::string&& value) {
  set_has_recpath();
  recpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartRecordingParams.recPath)
}
#endif
inline void StartRecordingParams::set_recpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartRecordingParams.recPath)
}
inline void StartRecordingParams::set_recpath(const char* value, size_t size) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartRecordingParams.recPath)
}
inline ::std::string* StartRecordingParams::mutable_recpath() {
  set_has_recpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartRecordingParams.recPath)
  return recpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartRecordingParams::release_recpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartRecordingParams.recPath)
  clear_has_recpath();
  return recpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartRecordingParams::set_allocated_recpath(::std::string* recpath) {
  if (recpath != NULL) {
    set_has_recpath();
  } else {
    clear_has_recpath();
  }
  recpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartRecordingParams.recPath)
}

// -------------------------------------------------------------------

// CanStartRecordingParams

// optional bool bCloudRecording = 1;
inline bool CanStartRecordingParams::has_bcloudrecording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanStartRecordingParams::set_has_bcloudrecording() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanStartRecordingParams::clear_has_bcloudrecording() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanStartRecordingParams::clear_bcloudrecording() {
  bcloudrecording_ = false;
  clear_has_bcloudrecording();
}
inline bool CanStartRecordingParams::bcloudrecording() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CanStartRecordingParams.bCloudRecording)
  return bcloudrecording_;
}
inline void CanStartRecordingParams::set_bcloudrecording(bool value) {
  set_has_bcloudrecording();
  bcloudrecording_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CanStartRecordingParams.bCloudRecording)
}

// optional uint32 userID = 2;
inline bool CanStartRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanStartRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CanStartRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CanStartRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CanStartRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CanStartRecordingParams.userID)
  return userid_;
}
inline void CanStartRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CanStartRecordingParams.userID)
}

// -------------------------------------------------------------------

// IsSupportLocalRecordingParams

// optional uint32 userID = 1;
inline bool IsSupportLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsSupportLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsSupportLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsSupportLocalRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 IsSupportLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.IsSupportLocalRecordingParams.userID)
  return userid_;
}
inline void IsSupportLocalRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.IsSupportLocalRecordingParams.userID)
}

// -------------------------------------------------------------------

// AllowLocalRecordingParams

// optional int32 userID = 1;
inline bool AllowLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllowLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllowLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllowLocalRecordingParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 AllowLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AllowLocalRecordingParams.userID)
  return userid_;
}
inline void AllowLocalRecordingParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AllowLocalRecordingParams.userID)
}

// -------------------------------------------------------------------

// DisAllowLocalRecordingParams

// optional uint32 userID = 1;
inline bool DisAllowLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisAllowLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisAllowLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisAllowLocalRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 DisAllowLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisAllowLocalRecordingParams.userID)
  return userid_;
}
inline void DisAllowLocalRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisAllowLocalRecordingParams.userID)
}

// -------------------------------------------------------------------

// StartAppShareParams

// optional string hShareApp = 1;
inline bool StartAppShareParams::has_hshareapp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartAppShareParams::set_has_hshareapp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartAppShareParams::clear_has_hshareapp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartAppShareParams::clear_hshareapp() {
  hshareapp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hshareapp();
}
inline const ::std::string& StartAppShareParams::hshareapp() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  return hshareapp_.GetNoArena();
}
inline void StartAppShareParams::set_hshareapp(const ::std::string& value) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
#if LANG_CXX11
inline void StartAppShareParams::set_hshareapp(::std::string&& value) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
#endif
inline void StartAppShareParams::set_hshareapp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
inline void StartAppShareParams::set_hshareapp(const char* value, size_t size) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
inline ::std::string* StartAppShareParams::mutable_hshareapp() {
  set_has_hshareapp();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  return hshareapp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartAppShareParams::release_hshareapp() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  clear_has_hshareapp();
  return hshareapp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartAppShareParams::set_allocated_hshareapp(::std::string* hshareapp) {
  if (hshareapp != NULL) {
    set_has_hshareapp();
  } else {
    clear_has_hshareapp();
  }
  hshareapp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hshareapp);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}

// -------------------------------------------------------------------

// StartMonitorShareParams

// optional string monitorID = 1;
inline bool StartMonitorShareParams::has_monitorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartMonitorShareParams::set_has_monitorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartMonitorShareParams::clear_has_monitorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartMonitorShareParams::clear_monitorid() {
  monitorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_monitorid();
}
inline const ::std::string& StartMonitorShareParams::monitorid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  return monitorid_.GetNoArena();
}
inline void StartMonitorShareParams::set_monitorid(const ::std::string& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
#if LANG_CXX11
inline void StartMonitorShareParams::set_monitorid(::std::string&& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
#endif
inline void StartMonitorShareParams::set_monitorid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
inline void StartMonitorShareParams::set_monitorid(const char* value, size_t size) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
inline ::std::string* StartMonitorShareParams::mutable_monitorid() {
  set_has_monitorid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  return monitorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartMonitorShareParams::release_monitorid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  clear_has_monitorid();
  return monitorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartMonitorShareParams::set_allocated_monitorid(::std::string* monitorid) {
  if (monitorid != NULL) {
    set_has_monitorid();
  } else {
    clear_has_monitorid();
  }
  monitorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitorid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}

// -------------------------------------------------------------------

// MuteVideoParams

// optional uint32 userID = 1;
inline bool MuteVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MuteVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MuteVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MuteVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 MuteVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteVideoParams.userID)
  return userid_;
}
inline void MuteVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteVideoParams.userID)
}

// -------------------------------------------------------------------

// UnMuteVideoParams

// optional uint32 userID = 1;
inline bool UnMuteVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnMuteVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnMuteVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnMuteVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 UnMuteVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnMuteVideoParams.userID)
  return userid_;
}
inline void UnMuteVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnMuteVideoParams.userID)
}

// -------------------------------------------------------------------

// PinVideoParams

// optional bool bPin = 1;
inline bool PinVideoParams::has_bpin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PinVideoParams::set_has_bpin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PinVideoParams::clear_has_bpin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PinVideoParams::clear_bpin() {
  bpin_ = false;
  clear_has_bpin();
}
inline bool PinVideoParams::bpin() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.bPin)
  return bpin_;
}
inline void PinVideoParams::set_bpin(bool value) {
  set_has_bpin();
  bpin_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.bPin)
}

// optional bool bFirstView = 2;
inline bool PinVideoParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PinVideoParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PinVideoParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PinVideoParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
inline bool PinVideoParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.bFirstView)
  return bfirstview_;
}
inline void PinVideoParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.bFirstView)
}

// optional uint32 userID = 3;
inline bool PinVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PinVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PinVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PinVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PinVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.userID)
  return userid_;
}
inline void PinVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.userID)
}

// -------------------------------------------------------------------

// SpotlightVideoParams

// optional bool bSpotlight = 1;
inline bool SpotlightVideoParams::has_bspotlight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpotlightVideoParams::set_has_bspotlight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpotlightVideoParams::clear_has_bspotlight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpotlightVideoParams::clear_bspotlight() {
  bspotlight_ = false;
  clear_has_bspotlight();
}
inline bool SpotlightVideoParams::bspotlight() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SpotlightVideoParams.bSpotlight)
  return bspotlight_;
}
inline void SpotlightVideoParams::set_bspotlight(bool value) {
  set_has_bspotlight();
  bspotlight_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SpotlightVideoParams.bSpotlight)
}

// optional uint32 userID = 2;
inline bool SpotlightVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpotlightVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpotlightVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpotlightVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 SpotlightVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SpotlightVideoParams.userID)
  return userid_;
}
inline void SpotlightVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SpotlightVideoParams.userID)
}

// -------------------------------------------------------------------

// HideOrShowNoVideoUserOnVideoWallParams

// optional bool bHide = 1;
inline bool HideOrShowNoVideoUserOnVideoWallParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideOrShowNoVideoUserOnVideoWallParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideOrShowNoVideoUserOnVideoWallParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideOrShowNoVideoUserOnVideoWallParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
inline bool HideOrShowNoVideoUserOnVideoWallParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams.bHide)
  return bhide_;
}
inline void HideOrShowNoVideoUserOnVideoWallParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams.bHide)
}

// -------------------------------------------------------------------

// CreateRendererParams

// optional uint64 recvHandle = 1;
inline bool CreateRendererParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRendererParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRendererParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRendererParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 CreateRendererParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CreateRendererParams.recvHandle)
  return recvhandle_;
}
inline void CreateRendererParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CreateRendererParams.recvHandle)
}

// -------------------------------------------------------------------

// DestroyRendererParams

// optional uint64 recvHandle = 1;
inline bool DestroyRendererParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyRendererParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyRendererParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyRendererParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 DestroyRendererParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DestroyRendererParams.recvHandle)
  return recvhandle_;
}
inline void DestroyRendererParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DestroyRendererParams.recvHandle)
}

// -------------------------------------------------------------------

// SubscribeParams

// optional uint32 userID = 1;
inline bool SubscribeParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 SubscribeParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.userID)
  return userid_;
}
inline void SubscribeParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.userID)
}

// optional int32 rawDataType = 2;
inline bool SubscribeParams::has_rawdatatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeParams::set_has_rawdatatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeParams::clear_has_rawdatatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeParams::clear_rawdatatype() {
  rawdatatype_ = 0;
  clear_has_rawdatatype();
}
inline ::google::protobuf::int32 SubscribeParams::rawdatatype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.rawDataType)
  return rawdatatype_;
}
inline void SubscribeParams::set_rawdatatype(::google::protobuf::int32 value) {
  set_has_rawdatatype();
  rawdatatype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.rawDataType)
}

// optional uint64 recvHandle = 3;
inline bool SubscribeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubscribeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubscribeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubscribeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 SubscribeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.recvHandle)
  return recvhandle_;
}
inline void SubscribeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.recvHandle)
}

// -------------------------------------------------------------------

// UnSubscribeParams

// optional uint64 recvHandle = 1;
inline bool UnSubscribeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnSubscribeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnSubscribeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnSubscribeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 UnSubscribeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnSubscribeParams.recvHandle)
  return recvhandle_;
}
inline void UnSubscribeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnSubscribeParams.recvHandle)
}

// -------------------------------------------------------------------

// SetRawDataResolutionParams

// optional int32 resolution = 1;
inline bool SetRawDataResolutionParams::has_resolution() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetRawDataResolutionParams::set_has_resolution() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetRawDataResolutionParams::clear_has_resolution() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetRawDataResolutionParams::clear_resolution() {
  resolution_ = 0;
  clear_has_resolution();
}
inline ::google::protobuf::int32 SetRawDataResolutionParams::resolution() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRawDataResolutionParams.resolution)
  return resolution_;
}
inline void SetRawDataResolutionParams::set_resolution(::google::protobuf::int32 value) {
  set_has_resolution();
  resolution_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRawDataResolutionParams.resolution)
}

// optional uint64 recvHandle = 2;
inline bool SetRawDataResolutionParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetRawDataResolutionParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetRawDataResolutionParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetRawDataResolutionParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 SetRawDataResolutionParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRawDataResolutionParams.recvHandle)
  return recvhandle_;
}
inline void SetRawDataResolutionParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRawDataResolutionParams.recvHandle)
}

// -------------------------------------------------------------------

// GetResolutionParams

// optional uint64 recvHandle = 1;
inline bool GetResolutionParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetResolutionParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetResolutionParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetResolutionParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 GetResolutionParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetResolutionParams.recvHandle)
  return recvhandle_;
}
inline void GetResolutionParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetResolutionParams.recvHandle)
}

// -------------------------------------------------------------------

// GetRawDataTypeParams

// optional uint64 recvHandle = 1;
inline bool GetRawDataTypeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRawDataTypeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRawDataTypeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRawDataTypeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 GetRawDataTypeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetRawDataTypeParams.recvHandle)
  return recvhandle_;
}
inline void GetRawDataTypeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetRawDataTypeParams.recvHandle)
}

// -------------------------------------------------------------------

// GetUserIdParams

// optional uint64 recvHandle = 1;
inline bool GetUserIdParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserIdParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserIdParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserIdParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
inline ::google::protobuf::uint64 GetUserIdParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetUserIdParams.recvHandle)
  return recvhandle_;
}
inline void GetUserIdParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetUserIdParams.recvHandle)
}

// -------------------------------------------------------------------

// EnableZoomAuthRealNameMeetingUIShownParams

// optional bool bEnable = 1;
inline bool EnableZoomAuthRealNameMeetingUIShownParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableZoomAuthRealNameMeetingUIShownParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableZoomAuthRealNameMeetingUIShownParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableZoomAuthRealNameMeetingUIShownParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableZoomAuthRealNameMeetingUIShownParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams.bEnable)
  return benable_;
}
inline void EnableZoomAuthRealNameMeetingUIShownParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams.bEnable)
}

// -------------------------------------------------------------------

// RetrieveParams

// optional string countryCode = 1;
inline bool RetrieveParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetrieveParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetrieveParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetrieveParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
inline const ::std::string& RetrieveParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RetrieveParams.countryCode)
  return countrycode_.GetNoArena();
}
inline void RetrieveParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RetrieveParams.countryCode)
}
#if LANG_CXX11
inline void RetrieveParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.RetrieveParams.countryCode)
}
#endif
inline void RetrieveParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.RetrieveParams.countryCode)
}
inline void RetrieveParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.RetrieveParams.countryCode)
}
inline ::std::string* RetrieveParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.RetrieveParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RetrieveParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.RetrieveParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RetrieveParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.RetrieveParams.countryCode)
}

// optional string phoneNum = 2;
inline bool RetrieveParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetrieveParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetrieveParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetrieveParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
inline const ::std::string& RetrieveParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RetrieveParams.phoneNum)
  return phonenum_.GetNoArena();
}
inline void RetrieveParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
#if LANG_CXX11
inline void RetrieveParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
#endif
inline void RetrieveParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
inline void RetrieveParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
inline ::std::string* RetrieveParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.RetrieveParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RetrieveParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.RetrieveParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RetrieveParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.RetrieveParams.phoneNum)
}

// -------------------------------------------------------------------

// VerifyParams

// optional string countryCode = 1;
inline bool VerifyParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
inline const ::std::string& VerifyParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.countryCode)
  return countrycode_.GetNoArena();
}
inline void VerifyParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.countryCode)
}
#if LANG_CXX11
inline void VerifyParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.countryCode)
}
#endif
inline void VerifyParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.countryCode)
}
inline void VerifyParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.countryCode)
}
inline ::std::string* VerifyParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.countryCode)
}

// optional string phoneNum = 2;
inline bool VerifyParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
inline const ::std::string& VerifyParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.phoneNum)
  return phonenum_.GetNoArena();
}
inline void VerifyParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.phoneNum)
}
#if LANG_CXX11
inline void VerifyParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.phoneNum)
}
#endif
inline void VerifyParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.phoneNum)
}
inline void VerifyParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.phoneNum)
}
inline ::std::string* VerifyParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.phoneNum)
}

// optional string verificationCode = 3;
inline bool VerifyParams::has_verificationcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyParams::set_has_verificationcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyParams::clear_has_verificationcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyParams::clear_verificationcode() {
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verificationcode();
}
inline const ::std::string& VerifyParams::verificationcode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.verificationCode)
  return verificationcode_.GetNoArena();
}
inline void VerifyParams::set_verificationcode(const ::std::string& value) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.verificationCode)
}
#if LANG_CXX11
inline void VerifyParams::set_verificationcode(::std::string&& value) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.verificationCode)
}
#endif
inline void VerifyParams::set_verificationcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.verificationCode)
}
inline void VerifyParams::set_verificationcode(const char* value, size_t size) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.verificationCode)
}
inline ::std::string* VerifyParams::mutable_verificationcode() {
  set_has_verificationcode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.verificationCode)
  return verificationcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyParams::release_verificationcode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.verificationCode)
  clear_has_verificationcode();
  return verificationcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyParams::set_allocated_verificationcode(::std::string* verificationcode) {
  if (verificationcode != NULL) {
    set_has_verificationcode();
  } else {
    clear_has_verificationcode();
  }
  verificationcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verificationcode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.verificationCode)
}

// -------------------------------------------------------------------

// SetDefaultCellPhoneInfoParams

// optional string countryCode = 1;
inline bool SetDefaultCellPhoneInfoParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetDefaultCellPhoneInfoParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetDefaultCellPhoneInfoParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetDefaultCellPhoneInfoParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
inline const ::std::string& SetDefaultCellPhoneInfoParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  return countrycode_.GetNoArena();
}
inline void SetDefaultCellPhoneInfoParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
#if LANG_CXX11
inline void SetDefaultCellPhoneInfoParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
#endif
inline void SetDefaultCellPhoneInfoParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
inline void SetDefaultCellPhoneInfoParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
inline ::std::string* SetDefaultCellPhoneInfoParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDefaultCellPhoneInfoParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDefaultCellPhoneInfoParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}

// optional string phoneNum = 2;
inline bool SetDefaultCellPhoneInfoParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetDefaultCellPhoneInfoParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetDefaultCellPhoneInfoParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetDefaultCellPhoneInfoParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
inline const ::std::string& SetDefaultCellPhoneInfoParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  return phonenum_.GetNoArena();
}
inline void SetDefaultCellPhoneInfoParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
#if LANG_CXX11
inline void SetDefaultCellPhoneInfoParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
#endif
inline void SetDefaultCellPhoneInfoParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
inline void SetDefaultCellPhoneInfoParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
inline ::std::string* SetDefaultCellPhoneInfoParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDefaultCellPhoneInfoParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDefaultCellPhoneInfoParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}

// -------------------------------------------------------------------

// EnableAlwaysShowMeetingControlsParams

// optional bool bEnable = 1;
inline bool EnableAlwaysShowMeetingControlsParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAlwaysShowMeetingControlsParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAlwaysShowMeetingControlsParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAlwaysShowMeetingControlsParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAlwaysShowMeetingControlsParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams.bEnable)
  return benable_;
}
inline void EnableAlwaysShowMeetingControlsParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams.bEnable)
}

// -------------------------------------------------------------------

// SelectMicParams

// optional string deviceID = 1;
inline bool SelectMicParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectMicParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectMicParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectMicParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& SelectMicParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectMicParams.deviceID)
  return deviceid_.GetNoArena();
}
inline void SelectMicParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectMicParams.deviceID)
}
#if LANG_CXX11
inline void SelectMicParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectMicParams.deviceID)
}
#endif
inline void SelectMicParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectMicParams.deviceID)
}
inline void SelectMicParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectMicParams.deviceID)
}
inline ::std::string* SelectMicParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectMicParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectMicParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectMicParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectMicParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectMicParams.deviceID)
}

// optional string deviceName = 2;
inline bool SelectMicParams::has_devicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectMicParams::set_has_devicename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectMicParams::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectMicParams::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
inline const ::std::string& SelectMicParams::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectMicParams.deviceName)
  return devicename_.GetNoArena();
}
inline void SelectMicParams::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectMicParams.deviceName)
}
#if LANG_CXX11
inline void SelectMicParams::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectMicParams.deviceName)
}
#endif
inline void SelectMicParams::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectMicParams.deviceName)
}
inline void SelectMicParams::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectMicParams.deviceName)
}
inline ::std::string* SelectMicParams::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectMicParams.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectMicParams::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectMicParams.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectMicParams::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectMicParams.deviceName)
}

// -------------------------------------------------------------------

// SelectSpeakerParams

// optional string deviceID = 1;
inline bool SelectSpeakerParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectSpeakerParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectSpeakerParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectSpeakerParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& SelectSpeakerParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  return deviceid_.GetNoArena();
}
inline void SelectSpeakerParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
#if LANG_CXX11
inline void SelectSpeakerParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
#endif
inline void SelectSpeakerParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
inline void SelectSpeakerParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
inline ::std::string* SelectSpeakerParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectSpeakerParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectSpeakerParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}

// optional string deviceName = 2;
inline bool SelectSpeakerParams::has_devicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectSpeakerParams::set_has_devicename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectSpeakerParams::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectSpeakerParams::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
inline const ::std::string& SelectSpeakerParams::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  return devicename_.GetNoArena();
}
inline void SelectSpeakerParams::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
#if LANG_CXX11
inline void SelectSpeakerParams::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
#endif
inline void SelectSpeakerParams::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
inline void SelectSpeakerParams::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
inline ::std::string* SelectSpeakerParams::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectSpeakerParams::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectSpeakerParams::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}

// -------------------------------------------------------------------

// EnableAutoJoinAudioParams

// optional bool bEnable = 1;
inline bool EnableAutoJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoJoinAudioParams.bEnable)
  return benable_;
}
inline void EnableAutoJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoJoinAudioParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoAdjustMicParams

// optional bool bEnable = 1;
inline bool EnableAutoAdjustMicParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoAdjustMicParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoAdjustMicParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoAdjustMicParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoAdjustMicParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustMicParams.bEnable)
  return benable_;
}
inline void EnableAutoAdjustMicParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustMicParams.bEnable)
}

// -------------------------------------------------------------------

// EnableStereoAudioParams

// optional bool bEnable = 1;
inline bool EnableStereoAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableStereoAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableStereoAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableStereoAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableStereoAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableStereoAudioParams.bEnable)
  return benable_;
}
inline void EnableStereoAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableStereoAudioParams.bEnable)
}

// -------------------------------------------------------------------

// EnableMicOriginalInputParams

// optional bool bEnable = 1;
inline bool EnableMicOriginalInputParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableMicOriginalInputParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableMicOriginalInputParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableMicOriginalInputParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableMicOriginalInputParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableMicOriginalInputParams.bEnable)
  return benable_;
}
inline void EnableMicOriginalInputParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableMicOriginalInputParams.bEnable)
}

// -------------------------------------------------------------------

// EnableHoldSpaceKeyToSpeakParams

// optional bool bEnable = 1;
inline bool EnableHoldSpaceKeyToSpeakParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableHoldSpaceKeyToSpeakParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableHoldSpaceKeyToSpeakParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableHoldSpaceKeyToSpeakParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableHoldSpaceKeyToSpeakParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams.bEnable)
  return benable_;
}
inline void EnableHoldSpaceKeyToSpeakParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAlwaysMuteMicWhenJoinVoipParams

// optional bool bEnable = 1;
inline bool EnableAlwaysMuteMicWhenJoinVoipParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAlwaysMuteMicWhenJoinVoipParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAlwaysMuteMicWhenJoinVoipParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAlwaysMuteMicWhenJoinVoipParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAlwaysMuteMicWhenJoinVoipParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams.bEnable)
  return benable_;
}
inline void EnableAlwaysMuteMicWhenJoinVoipParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams.bEnable)
}

// -------------------------------------------------------------------

// EnableSuppressAudioNotifyParams

// optional bool bEnable = 1;
inline bool EnableSuppressAudioNotifyParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableSuppressAudioNotifyParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableSuppressAudioNotifyParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableSuppressAudioNotifyParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableSuppressAudioNotifyParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSuppressAudioNotifyParams.bEnable)
  return benable_;
}
inline void EnableSuppressAudioNotifyParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSuppressAudioNotifyParams.bEnable)
}

// -------------------------------------------------------------------

// SetEchoCancellationLevelParams

// optional int32 level = 1;
inline bool SetEchoCancellationLevelParams::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetEchoCancellationLevelParams::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetEchoCancellationLevelParams::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetEchoCancellationLevelParams::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SetEchoCancellationLevelParams::level() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetEchoCancellationLevelParams.level)
  return level_;
}
inline void SetEchoCancellationLevelParams::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetEchoCancellationLevelParams.level)
}

// -------------------------------------------------------------------

// SetMicVolParams

// optional float value = 1;
inline bool SetMicVolParams::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMicVolParams::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMicVolParams::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMicVolParams::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float SetMicVolParams::value() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMicVolParams.value)
  return value_;
}
inline void SetMicVolParams::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMicVolParams.value)
}

// -------------------------------------------------------------------

// SetSpeakerVolParams

// optional float value = 1;
inline bool SetSpeakerVolParams::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSpeakerVolParams::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSpeakerVolParams::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSpeakerVolParams::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float SetSpeakerVolParams::value() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetSpeakerVolParams.value)
  return value_;
}
inline void SetSpeakerVolParams::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetSpeakerVolParams.value)
}

// -------------------------------------------------------------------

// EnableDualScreenModeParams

// optional bool bEnable = 1;
inline bool EnableDualScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableDualScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableDualScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableDualScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableDualScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDualScreenModeParams.bEnable)
  return benable_;
}
inline void EnableDualScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDualScreenModeParams.bEnable)
}

// -------------------------------------------------------------------

// TurnOffAeroModeInSharingParams

// optional bool bTurnOff = 1;
inline bool TurnOffAeroModeInSharingParams::has_bturnoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnOffAeroModeInSharingParams::set_has_bturnoff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnOffAeroModeInSharingParams::clear_has_bturnoff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnOffAeroModeInSharingParams::clear_bturnoff() {
  bturnoff_ = false;
  clear_has_bturnoff();
}
inline bool TurnOffAeroModeInSharingParams::bturnoff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TurnOffAeroModeInSharingParams.bTurnOff)
  return bturnoff_;
}
inline void TurnOffAeroModeInSharingParams::set_bturnoff(bool value) {
  set_has_bturnoff();
  bturnoff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TurnOffAeroModeInSharingParams.bTurnOff)
}

// -------------------------------------------------------------------

// EnableAutoFitToWindowWhenViewSharingParams

// optional bool bEnable = 1;
inline bool EnableAutoFitToWindowWhenViewSharingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoFitToWindowWhenViewSharingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoFitToWindowWhenViewSharingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoFitToWindowWhenViewSharingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoFitToWindowWhenViewSharingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams.bEnable)
  return benable_;
}
inline void EnableAutoFitToWindowWhenViewSharingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoFullScreenVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
inline bool EnableAutoFullScreenVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoFullScreenVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoFullScreenVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoFullScreenVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoFullScreenVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
inline void EnableAutoFullScreenVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableSplitScreenModeParams

// optional bool bEnable = 1;
inline bool EnableSplitScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableSplitScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableSplitScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableSplitScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableSplitScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSplitScreenModeParams.bEnable)
  return benable_;
}
inline void EnableSplitScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSplitScreenModeParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoFullScreenVideoWhenViewShareParams

// optional bool bEnable = 1;
inline bool EnableAutoFullScreenVideoWhenViewShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoFullScreenVideoWhenViewShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoFullScreenVideoWhenViewShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoFullScreenVideoWhenViewShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoFullScreenVideoWhenViewShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams.bEnable)
  return benable_;
}
inline void EnableAutoFullScreenVideoWhenViewShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams.bEnable)
}

// -------------------------------------------------------------------

// EnableDisplayReminderWindowWhenExitParams

// optional bool bEnable = 1;
inline bool EnableDisplayReminderWindowWhenExitParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableDisplayReminderWindowWhenExitParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableDisplayReminderWindowWhenExitParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableDisplayReminderWindowWhenExitParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableDisplayReminderWindowWhenExitParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams.bEnable)
  return benable_;
}
inline void EnableDisplayReminderWindowWhenExitParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams.bEnable)
}

// -------------------------------------------------------------------

// EnableShowMyMeetingElapseTimeParams

// optional bool bEnable = 1;
inline bool EnableShowMyMeetingElapseTimeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableShowMyMeetingElapseTimeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableShowMyMeetingElapseTimeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableShowMyMeetingElapseTimeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableShowMyMeetingElapseTimeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams.bEnable)
  return benable_;
}
inline void EnableShowMyMeetingElapseTimeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAccelerateGPUWhenShareParams

// optional bool bEnable = 1;
inline bool EnableAccelerateGPUWhenShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAccelerateGPUWhenShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAccelerateGPUWhenShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAccelerateGPUWhenShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAccelerateGPUWhenShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams.bEnable)
  return benable_;
}
inline void EnableAccelerateGPUWhenShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams.bEnable)
}

// -------------------------------------------------------------------

// EnableRemoteControlAllApplicationsParams

// optional bool bEnable = 1;
inline bool EnableRemoteControlAllApplicationsParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableRemoteControlAllApplicationsParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableRemoteControlAllApplicationsParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableRemoteControlAllApplicationsParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableRemoteControlAllApplicationsParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams.bEnable)
  return benable_;
}
inline void EnableRemoteControlAllApplicationsParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams.bEnable)
}

// -------------------------------------------------------------------

// SetRecordingPathParams

// optional string recPath = 1;
inline bool SetRecordingPathParams::has_recpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetRecordingPathParams::set_has_recpath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetRecordingPathParams::clear_has_recpath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetRecordingPathParams::clear_recpath() {
  recpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recpath();
}
inline const ::std::string& SetRecordingPathParams::recpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  return recpath_.GetNoArena();
}
inline void SetRecordingPathParams::set_recpath(const ::std::string& value) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
#if LANG_CXX11
inline void SetRecordingPathParams::set_recpath(::std::string&& value) {
  set_has_recpath();
  recpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
#endif
inline void SetRecordingPathParams::set_recpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
inline void SetRecordingPathParams::set_recpath(const char* value, size_t size) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
inline ::std::string* SetRecordingPathParams::mutable_recpath() {
  set_has_recpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  return recpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetRecordingPathParams::release_recpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  clear_has_recpath();
  return recpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetRecordingPathParams::set_allocated_recpath(::std::string* recpath) {
  if (recpath != NULL) {
    set_has_recpath();
  } else {
    clear_has_recpath();
  }
  recpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}

// -------------------------------------------------------------------

// EnableSelectRecordFileLocationAfterMeetingParams

// optional bool bEnable = 1;
inline bool EnableSelectRecordFileLocationAfterMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableSelectRecordFileLocationAfterMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableSelectRecordFileLocationAfterMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableSelectRecordFileLocationAfterMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableSelectRecordFileLocationAfterMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams.bEnable)
  return benable_;
}
inline void EnableSelectRecordFileLocationAfterMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableMultiAudioStreamRecordParams

// optional bool bEnable = 1;
inline bool EnableMultiAudioStreamRecordParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableMultiAudioStreamRecordParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableMultiAudioStreamRecordParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableMultiAudioStreamRecordParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableMultiAudioStreamRecordParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams.bEnable)
  return benable_;
}
inline void EnableMultiAudioStreamRecordParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAddTimestampWatermarkParams

// optional bool bEnable = 1;
inline bool EnableAddTimestampWatermarkParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAddTimestampWatermarkParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAddTimestampWatermarkParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAddTimestampWatermarkParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAddTimestampWatermarkParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAddTimestampWatermarkParams.bEnable)
  return benable_;
}
inline void EnableAddTimestampWatermarkParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAddTimestampWatermarkParams.bEnable)
}

// -------------------------------------------------------------------

// EnableOptimizeFor3rdPartyVideoEditorParams

// optional bool bEnable = 1;
inline bool EnableOptimizeFor3rdPartyVideoEditorParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableOptimizeFor3rdPartyVideoEditorParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableOptimizeFor3rdPartyVideoEditorParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableOptimizeFor3rdPartyVideoEditorParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableOptimizeFor3rdPartyVideoEditorParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams.bEnable)
  return benable_;
}
inline void EnableOptimizeFor3rdPartyVideoEditorParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams.bEnable)
}

// -------------------------------------------------------------------

// EnableShowVideoThumbnailWhenShareParams

// optional bool bEnable = 1;
inline bool EnableShowVideoThumbnailWhenShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableShowVideoThumbnailWhenShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableShowVideoThumbnailWhenShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableShowVideoThumbnailWhenShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableShowVideoThumbnailWhenShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams.bEnable)
  return benable_;
}
inline void EnableShowVideoThumbnailWhenShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams.bEnable)
}

// -------------------------------------------------------------------

// EnablePlaceVideoNextToShareInRecordParams

// optional bool bEnable = 1;
inline bool EnablePlaceVideoNextToShareInRecordParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnablePlaceVideoNextToShareInRecordParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnablePlaceVideoNextToShareInRecordParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnablePlaceVideoNextToShareInRecordParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnablePlaceVideoNextToShareInRecordParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams.bEnable)
  return benable_;
}
inline void EnablePlaceVideoNextToShareInRecordParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams.bEnable)
}

// -------------------------------------------------------------------

// DisableAdvancedFeatures4GeneralSettingParams

// optional bool bDisable = 1;
inline bool DisableAdvancedFeatures4GeneralSettingParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableAdvancedFeatures4GeneralSettingParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableAdvancedFeatures4GeneralSettingParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableAdvancedFeatures4GeneralSettingParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableAdvancedFeatures4GeneralSettingParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams.bDisable)
  return bdisable_;
}
inline void DisableAdvancedFeatures4GeneralSettingParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams.bDisable)
}

// -------------------------------------------------------------------

// DisableAccountSettingTabPageParams

// optional bool bDisable = 1;
inline bool DisableAccountSettingTabPageParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableAccountSettingTabPageParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableAccountSettingTabPageParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableAccountSettingTabPageParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
inline bool DisableAccountSettingTabPageParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAccountSettingTabPageParams.bDisable)
  return bdisable_;
}
inline void DisableAccountSettingTabPageParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAccountSettingTabPageParams.bDisable)
}

// -------------------------------------------------------------------

// ConfSettingDialogShownTabPageParams

// optional uint64 showOption = 1;
inline bool ConfSettingDialogShownTabPageParams::has_showoption() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfSettingDialogShownTabPageParams::set_has_showoption() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfSettingDialogShownTabPageParams::clear_has_showoption() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfSettingDialogShownTabPageParams::clear_showoption() {
  showoption_ = GOOGLE_ULONGLONG(0);
  clear_has_showoption();
}
inline ::google::protobuf::uint64 ConfSettingDialogShownTabPageParams::showoption() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams.showOption)
  return showoption_;
}
inline void ConfSettingDialogShownTabPageParams::set_showoption(::google::protobuf::uint64 value) {
  set_has_showoption();
  showoption_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams.showOption)
}

// -------------------------------------------------------------------

// SelectVideoCameraParams

// optional string deviceID = 1;
inline bool SelectVideoCameraParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectVideoCameraParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectVideoCameraParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectVideoCameraParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& SelectVideoCameraParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  return deviceid_.GetNoArena();
}
inline void SelectVideoCameraParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
#if LANG_CXX11
inline void SelectVideoCameraParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
#endif
inline void SelectVideoCameraParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
inline void SelectVideoCameraParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
inline ::std::string* SelectVideoCameraParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectVideoCameraParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectVideoCameraParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}

// -------------------------------------------------------------------

// EnableVideoMirrorEffectParams

// optional bool bEnable = 1;
inline bool EnableVideoMirrorEffectParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableVideoMirrorEffectParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableVideoMirrorEffectParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableVideoMirrorEffectParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableVideoMirrorEffectParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoMirrorEffectParams.bEnable)
  return benable_;
}
inline void EnableVideoMirrorEffectParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoMirrorEffectParams.bEnable)
}

// -------------------------------------------------------------------

// EnableFaceBeautyEffectParams

// optional bool bEnable = 1;
inline bool EnableFaceBeautyEffectParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableFaceBeautyEffectParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableFaceBeautyEffectParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableFaceBeautyEffectParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableFaceBeautyEffectParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableFaceBeautyEffectParams.bEnable)
  return benable_;
}
inline void EnableFaceBeautyEffectParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableFaceBeautyEffectParams.bEnable)
}

// -------------------------------------------------------------------

// EnableHDVideoParams

// optional bool bEnable = 1;
inline bool EnableHDVideoParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableHDVideoParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableHDVideoParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableHDVideoParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableHDVideoParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHDVideoParams.bEnable)
  return benable_;
}
inline void EnableHDVideoParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHDVideoParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAlwaysShowNameOnVideoParams

// optional bool bEnable = 1;
inline bool EnableAlwaysShowNameOnVideoParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAlwaysShowNameOnVideoParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAlwaysShowNameOnVideoParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAlwaysShowNameOnVideoParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAlwaysShowNameOnVideoParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams.bEnable)
  return benable_;
}
inline void EnableAlwaysShowNameOnVideoParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams.bEnable)
}

// -------------------------------------------------------------------

// EnableVideoPreviewDialogParams

// optional bool bEnable = 1;
inline bool EnableVideoPreviewDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableVideoPreviewDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableVideoPreviewDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableVideoPreviewDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableVideoPreviewDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoPreviewDialogParams.bEnable)
  return benable_;
}
inline void EnableVideoPreviewDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoPreviewDialogParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAutoTurnOffVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
inline bool EnableAutoTurnOffVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAutoTurnOffVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAutoTurnOffVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAutoTurnOffVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAutoTurnOffVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
inline void EnableAutoTurnOffVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams.bEnable)
}

// -------------------------------------------------------------------

// EnableAlwaysUse16v9Params

// optional bool bEnable = 1;
inline bool EnableAlwaysUse16v9Params::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableAlwaysUse16v9Params::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableAlwaysUse16v9Params::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableAlwaysUse16v9Params::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableAlwaysUse16v9Params::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysUse16v9Params.bEnable)
  return benable_;
}
inline void EnableAlwaysUse16v9Params::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysUse16v9Params.bEnable)
}

// -------------------------------------------------------------------

// EnableSpotlightSelfParams

// optional bool bEnable = 1;
inline bool EnableSpotlightSelfParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableSpotlightSelfParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableSpotlightSelfParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableSpotlightSelfParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableSpotlightSelfParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSpotlightSelfParams.bEnable)
  return benable_;
}
inline void EnableSpotlightSelfParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSpotlightSelfParams.bEnable)
}

// -------------------------------------------------------------------

// EnableHardwareEncodeParams

// optional bool bEnable = 1;
inline bool EnableHardwareEncodeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableHardwareEncodeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableHardwareEncodeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableHardwareEncodeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableHardwareEncodeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHardwareEncodeParams.bEnable)
  return benable_;
}
inline void EnableHardwareEncodeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHardwareEncodeParams.bEnable)
}

// optional int32 encodeType = 2;
inline bool EnableHardwareEncodeParams::has_encodetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnableHardwareEncodeParams::set_has_encodetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnableHardwareEncodeParams::clear_has_encodetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnableHardwareEncodeParams::clear_encodetype() {
  encodetype_ = 0;
  clear_has_encodetype();
}
inline ::google::protobuf::int32 EnableHardwareEncodeParams::encodetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHardwareEncodeParams.encodeType)
  return encodetype_;
}
inline void EnableHardwareEncodeParams::set_encodetype(::google::protobuf::int32 value) {
  set_has_encodetype();
  encodetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHardwareEncodeParams.encodeType)
}

// -------------------------------------------------------------------

// IsHardwareEncodeEnabledParams

// optional int32 encodeType = 1;
inline bool IsHardwareEncodeEnabledParams::has_encodetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsHardwareEncodeEnabledParams::set_has_encodetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsHardwareEncodeEnabledParams::clear_has_encodetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsHardwareEncodeEnabledParams::clear_encodetype() {
  encodetype_ = 0;
  clear_has_encodetype();
}
inline ::google::protobuf::int32 IsHardwareEncodeEnabledParams::encodetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.IsHardwareEncodeEnabledParams.encodeType)
  return encodetype_;
}
inline void IsHardwareEncodeEnabledParams::set_encodetype(::google::protobuf::int32 value) {
  set_has_encodetype();
  encodetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.IsHardwareEncodeEnabledParams.encodeType)
}

// -------------------------------------------------------------------

// Enable49VideoesInGallaryViewParams

// optional bool bEnable = 1;
inline bool Enable49VideoesInGallaryViewParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Enable49VideoesInGallaryViewParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Enable49VideoesInGallaryViewParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Enable49VideoesInGallaryViewParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool Enable49VideoesInGallaryViewParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams.bEnable)
  return benable_;
}
inline void Enable49VideoesInGallaryViewParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams.bEnable)
}

// -------------------------------------------------------------------

// EnableHideNoVideoUsersOnWallViewParams

// optional bool bEnable = 1;
inline bool EnableHideNoVideoUsersOnWallViewParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableHideNoVideoUsersOnWallViewParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableHideNoVideoUsersOnWallViewParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableHideNoVideoUsersOnWallViewParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
inline bool EnableHideNoVideoUsersOnWallViewParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams.bEnable)
  return benable_;
}
inline void EnableHideNoVideoUsersOnWallViewParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams.bEnable)
}

// -------------------------------------------------------------------

// SetTeamIdentifierParams

// optional string identifier = 1;
inline bool SetTeamIdentifierParams::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTeamIdentifierParams::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTeamIdentifierParams::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTeamIdentifierParams::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identifier();
}
inline const ::std::string& SetTeamIdentifierParams::identifier() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  return identifier_.GetNoArena();
}
inline void SetTeamIdentifierParams::set_identifier(const ::std::string& value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
#if LANG_CXX11
inline void SetTeamIdentifierParams::set_identifier(::std::string&& value) {
  set_has_identifier();
  identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
#endif
inline void SetTeamIdentifierParams::set_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
inline void SetTeamIdentifierParams::set_identifier(const char* value, size_t size) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
inline ::std::string* SetTeamIdentifierParams::mutable_identifier() {
  set_has_identifier();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetTeamIdentifierParams::release_identifier() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  clear_has_identifier();
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetTeamIdentifierParams::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    set_has_identifier();
  } else {
    clear_has_identifier();
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace sdk
}  // namespace electron
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_electron_5fsdk_2eproto__INCLUDED
