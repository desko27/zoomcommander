// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: electron_sdk.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "electron_sdk.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace electron {
namespace sdk {
namespace proto {
class InitSDKParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InitSDKParams>
     _instance;
} _InitSDKParams_default_instance_;
class AuthParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AuthParams>
     _instance;
} _AuthParams_default_instance_;
class AuthWithJwtTokenParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AuthWithJwtTokenParams>
     _instance;
} _AuthWithJwtTokenParams_default_instance_;
class LoginParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LoginParams>
     _instance;
} _LoginParams_default_instance_;
class LoginWithSSOTokenParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LoginWithSSOTokenParams>
     _instance;
} _LoginWithSSOTokenParams_default_instance_;
class StartMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartMeetingParams>
     _instance;
} _StartMeetingParams_default_instance_;
class StartWithoutLoginParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartWithoutLoginParams>
     _instance;
} _StartWithoutLoginParams_default_instance_;
class JoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<JoinMeetingParams>
     _instance;
} _JoinMeetingParams_default_instance_;
class JoinWithoutLoginParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<JoinWithoutLoginParams>
     _instance;
} _JoinWithoutLoginParams_default_instance_;
class LeaveMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LeaveMeetingParams>
     _instance;
} _LeaveMeetingParams_default_instance_;
class HandleZoomWebUriProtocolActionParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HandleZoomWebUriProtocolActionParams>
     _instance;
} _HandleZoomWebUriProtocolActionParams_default_instance_;
class ShowChatDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowChatDlgParams>
     _instance;
} _ShowChatDlgParams_default_instance_;
class EnterFullScreenParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterFullScreenParams>
     _instance;
} _EnterFullScreenParams_default_instance_;
class ExitFullScreenParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExitFullScreenParams>
     _instance;
} _ExitFullScreenParams_default_instance_;
class MoveFloatVideoWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MoveFloatVideoWndParams>
     _instance;
} _MoveFloatVideoWndParams_default_instance_;
class ShowSharingToolbarParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowSharingToolbarParams>
     _instance;
} _ShowSharingToolbarParams_default_instance_;
class ChangeFloatoActiveSpkVideoSizeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeFloatoActiveSpkVideoSizeParams>
     _instance;
} _ChangeFloatoActiveSpkVideoSizeParams_default_instance_;
class ShowParticipantsListWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowParticipantsListWndParams>
     _instance;
} _ShowParticipantsListWndParams_default_instance_;
class ShowBottomFloatToolbarWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowBottomFloatToolbarWndParams>
     _instance;
} _ShowBottomFloatToolbarWndParams_default_instance_;
class ShowPreOrNextPageVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowPreOrNextPageVideoParams>
     _instance;
} _ShowPreOrNextPageVideoParams_default_instance_;
class ShowSharingFrameWindowsParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowSharingFrameWindowsParams>
     _instance;
} _ShowSharingFrameWindowsParams_default_instance_;
class SwitchSplitScreenModeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SwitchSplitScreenModeParams>
     _instance;
} _SwitchSplitScreenModeParams_default_instance_;
class SwitchMinimizeUIMode4FirstScreenMeetingUIWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams>
     _instance;
} _SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams_default_instance_;
class SwapToShowShareViewOrVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SwapToShowShareViewOrVideoParams>
     _instance;
} _SwapToShowShareViewOrVideoParams_default_instance_;
class ShowSettingDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowSettingDlgParams>
     _instance;
} _ShowSettingDlgParams_default_instance_;
class ScheduleMeetingWithWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScheduleMeetingWithWndParams>
     _instance;
} _ScheduleMeetingWithWndParams_default_instance_;
class EditMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EditMeetingParams>
     _instance;
} _EditMeetingParams_default_instance_;
class EditMeetingWithWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EditMeetingWithWndParams>
     _instance;
} _EditMeetingWithWndParams_default_instance_;
class DeleteMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteMeetingParams>
     _instance;
} _DeleteMeetingParams_default_instance_;
class AddCustomizedPictureResourceParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddCustomizedPictureResourceParams>
     _instance;
} _AddCustomizedPictureResourceParams_default_instance_;
class AddCustomizedStringResourceParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddCustomizedStringResourceParams>
     _instance;
} _AddCustomizedStringResourceParams_default_instance_;
class AddCustomizedURLResourceParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddCustomizedURLResourceParams>
     _instance;
} _AddCustomizedURLResourceParams_default_instance_;
class TryWithMeetingNumberParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TryWithMeetingNumberParams>
     _instance;
} _TryWithMeetingNumberParams_default_instance_;
class TryWithPairingCodeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TryWithPairingCodeParams>
     _instance;
} _TryWithPairingCodeParams_default_instance_;
class StartAnnotationParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartAnnotationParams>
     _instance;
} _StartAnnotationParams_default_instance_;
class StopAnnotationParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StopAnnotationParams>
     _instance;
} _StopAnnotationParams_default_instance_;
class SetToolParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetToolParams>
     _instance;
} _SetToolParams_default_instance_;
class ClearAnnotationParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClearAnnotationParams>
     _instance;
} _ClearAnnotationParams_default_instance_;
class SetColorParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetColorParams>
     _instance;
} _SetColorParams_default_instance_;
class SetLineWidthParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetLineWidthParams>
     _instance;
} _SetLineWidthParams_default_instance_;
class UndoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UndoParams>
     _instance;
} _UndoParams_default_instance_;
class RedoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedoParams>
     _instance;
} _RedoParams_default_instance_;
class MuteAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MuteAudioParams>
     _instance;
} _MuteAudioParams_default_instance_;
class UnmuteAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnmuteAudioParams>
     _instance;
} _UnmuteAudioParams_default_instance_;
class EnablePlayChimeWhenEnterOrExitParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnablePlayChimeWhenEnterOrExitParams>
     _instance;
} _EnablePlayChimeWhenEnterOrExitParams_default_instance_;
class EnableInviteButtonOnMeeitngUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableInviteButtonOnMeeitngUIParams>
     _instance;
} _EnableInviteButtonOnMeeitngUIParams_default_instance_;
class SetFloatVideoPosParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetFloatVideoPosParams>
     _instance;
} _SetFloatVideoPosParams_default_instance_;
class SetBottomFloatToolBarWndVisibilityParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetBottomFloatToolBarWndVisibilityParams>
     _instance;
} _SetBottomFloatToolBarWndVisibilityParams_default_instance_;
class SetSharingToolBarVisibilityParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSharingToolBarVisibilityParams>
     _instance;
} _SetSharingToolBarVisibilityParams_default_instance_;
class SetDirectShareMonitorIDParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetDirectShareMonitorIDParams>
     _instance;
} _SetDirectShareMonitorIDParams_default_instance_;
class SetMeetingUIPosParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetMeetingUIPosParams>
     _instance;
} _SetMeetingUIPosParams_default_instance_;
class DisableWaitingForHostDialogParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableWaitingForHostDialogParams>
     _instance;
} _DisableWaitingForHostDialogParams_default_instance_;
class DisablePopupMeetingWrongPSWDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisablePopupMeetingWrongPSWDlgParams>
     _instance;
} _DisablePopupMeetingWrongPSWDlgParams_default_instance_;
class EnableAutoEndOtherMeetingWhenStartMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoEndOtherMeetingWhenStartMeetingParams>
     _instance;
} _EnableAutoEndOtherMeetingWhenStartMeetingParams_default_instance_;
class EnableLButtonDBClick4SwitchFullScreenModeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableLButtonDBClick4SwitchFullScreenModeParams>
     _instance;
} _EnableLButtonDBClick4SwitchFullScreenModeParams_default_instance_;
class SetFloatVideoWndVisibilityParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetFloatVideoWndVisibilityParams>
     _instance;
} _SetFloatVideoWndVisibilityParams_default_instance_;
class PrePopulateWebinarRegistrationInfoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PrePopulateWebinarRegistrationInfoParams>
     _instance;
} _PrePopulateWebinarRegistrationInfoParams_default_instance_;
class EnableAutoAdjustSpeakerVolumeWhenJoinAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams>
     _instance;
} _EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams_default_instance_;
class EnableAutoAdjustMicVolumeWhenJoinAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoAdjustMicVolumeWhenJoinAudioParams>
     _instance;
} _EnableAutoAdjustMicVolumeWhenJoinAudioParams_default_instance_;
class ConfigDSCPParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigDSCPParams>
     _instance;
} _ConfigDSCPParams_default_instance_;
class EnableHIdeFullPhoneNumber4PureCallinUserParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableHIdeFullPhoneNumber4PureCallinUserParams>
     _instance;
} _EnableHIdeFullPhoneNumber4PureCallinUserParams_default_instance_;
class EnableShareIOSDeviceParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableShareIOSDeviceParams>
     _instance;
} _EnableShareIOSDeviceParams_default_instance_;
class EnableShareWhiteBoardParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableShareWhiteBoardParams>
     _instance;
} _EnableShareWhiteBoardParams_default_instance_;
class EnableLengthLimitationOfMeetingNumberParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableLengthLimitationOfMeetingNumberParams>
     _instance;
} _EnableLengthLimitationOfMeetingNumberParams_default_instance_;
class ForceDisableMultiShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceDisableMultiShareParams>
     _instance;
} _ForceDisableMultiShareParams_default_instance_;
class EnableLocalRecordingConverProgressBarDialogParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableLocalRecordingConverProgressBarDialogParams>
     _instance;
} _EnableLocalRecordingConverProgressBarDialogParams_default_instance_;
class SetMaxDurationForOnlyHostInMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetMaxDurationForOnlyHostInMeetingParams>
     _instance;
} _SetMaxDurationForOnlyHostInMeetingParams_default_instance_;
class EnableApproveRemoteControlDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableApproveRemoteControlDlgParams>
     _instance;
} _EnableApproveRemoteControlDlgParams_default_instance_;
class EnableDeclineRemoteControlResponseDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableDeclineRemoteControlResponseDlgParams>
     _instance;
} _EnableDeclineRemoteControlResponseDlgParams_default_instance_;
class EnableLeaveMeetingOptionForHostParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableLeaveMeetingOptionForHostParams>
     _instance;
} _EnableLeaveMeetingOptionForHostParams_default_instance_;
class EnableVideoButtonOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableVideoButtonOnMeetingUIParams>
     _instance;
} _EnableVideoButtonOnMeetingUIParams_default_instance_;
class EnableAudioButtonOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAudioButtonOnMeetingUIParams>
     _instance;
} _EnableAudioButtonOnMeetingUIParams_default_instance_;
class EnableEnterAndExitFullScreenButtonOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableEnterAndExitFullScreenButtonOnMeetingUIParams>
     _instance;
} _EnableEnterAndExitFullScreenButtonOnMeetingUIParams_default_instance_;
class RedirectClickShareBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickShareBTNEventParams>
     _instance;
} _RedirectClickShareBTNEventParams_default_instance_;
class RedirectClickEndMeetingBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickEndMeetingBTNEventParams>
     _instance;
} _RedirectClickEndMeetingBTNEventParams_default_instance_;
class RedirectFreeMeetingEndingReminderDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectFreeMeetingEndingReminderDlgParams>
     _instance;
} _RedirectFreeMeetingEndingReminderDlgParams_default_instance_;
class RedirectClickCustomLiveStreamMenuEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickCustomLiveStreamMenuEventParams>
     _instance;
} _RedirectClickCustomLiveStreamMenuEventParams_default_instance_;
class RedirectClickParticipantListBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickParticipantListBTNEventParams>
     _instance;
} _RedirectClickParticipantListBTNEventParams_default_instance_;
class RedirectClickCCBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickCCBTNEventParams>
     _instance;
} _RedirectClickCCBTNEventParams_default_instance_;
class RedirectClickAudioBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickAudioBTNEventParams>
     _instance;
} _RedirectClickAudioBTNEventParams_default_instance_;
class RedirectClickAudioMenuBTNEventParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectClickAudioMenuBTNEventParams>
     _instance;
} _RedirectClickAudioMenuBTNEventParams_default_instance_;
class RedirectMeetingWarningMsgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectMeetingWarningMsgParams>
     _instance;
} _RedirectMeetingWarningMsgParams_default_instance_;
class EnableToolTipsShowParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableToolTipsShowParams>
     _instance;
} _EnableToolTipsShowParams_default_instance_;
class EnableAirplayInstructionWindowParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAirplayInstructionWindowParams>
     _instance;
} _EnableAirplayInstructionWindowParams_default_instance_;
class EnableClaimHostFeatureParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableClaimHostFeatureParams>
     _instance;
} _EnableClaimHostFeatureParams_default_instance_;
class EnableAutoHideJoinAudioDialogParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoHideJoinAudioDialogParams>
     _instance;
} _EnableAutoHideJoinAudioDialogParams_default_instance_;
class AlwaysShowIconOnTaskBarParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AlwaysShowIconOnTaskBarParams>
     _instance;
} _AlwaysShowIconOnTaskBarParams_default_instance_;
class DisableSplitScreenModeUIElementsParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableSplitScreenModeUIElementsParams>
     _instance;
} _DisableSplitScreenModeUIElementsParams_default_instance_;
class SetShowAudioUseComputerSoundChkboxParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowAudioUseComputerSoundChkboxParams>
     _instance;
} _SetShowAudioUseComputerSoundChkboxParams_default_instance_;
class SetShowCallInTabParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowCallInTabParams>
     _instance;
} _SetShowCallInTabParams_default_instance_;
class SetShowCallMeTabParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowCallMeTabParams>
     _instance;
} _SetShowCallMeTabParams_default_instance_;
class DisableTopMostAttr4SettingDialogParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableTopMostAttr4SettingDialogParams>
     _instance;
} _DisableTopMostAttr4SettingDialogParams_default_instance_;
class EnableGrabShareWithoutReminderParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableGrabShareWithoutReminderParams>
     _instance;
} _EnableGrabShareWithoutReminderParams_default_instance_;
class EnableShowShareSwitchMultiToSingleConfirmDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableShowShareSwitchMultiToSingleConfirmDlgParams>
     _instance;
} _EnableShowShareSwitchMultiToSingleConfirmDlgParams_default_instance_;
class DisableFreeMeetingRemainTimeNotifyParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableFreeMeetingRemainTimeNotifyParams>
     _instance;
} _DisableFreeMeetingRemainTimeNotifyParams_default_instance_;
class HideChatItemOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideChatItemOnMeetingUIParams>
     _instance;
} _HideChatItemOnMeetingUIParams_default_instance_;
class HideRecordItemOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideRecordItemOnMeetingUIParams>
     _instance;
} _HideRecordItemOnMeetingUIParams_default_instance_;
class HideUpgradeFreeMeetingButtonParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideUpgradeFreeMeetingButtonParams>
     _instance;
} _HideUpgradeFreeMeetingButtonParams_default_instance_;
class SetShowInviteDlgTabPageParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowInviteDlgTabPageParams>
     _instance;
} _SetShowInviteDlgTabPageParams_default_instance_;
class SetShowH323SubTabPageParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowH323SubTabPageParams>
     _instance;
} _SetShowH323SubTabPageParams_default_instance_;
class HideUpgradeWarningMsgForFreeUserWhenScheduleParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideUpgradeWarningMsgForFreeUserWhenScheduleParams>
     _instance;
} _HideUpgradeWarningMsgForFreeUserWhenScheduleParams_default_instance_;
class HideSwitchCameraButtonParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideSwitchCameraButtonParams>
     _instance;
} _HideSwitchCameraButtonParams_default_instance_;
class HideCopyUrlOnInviteWindowParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideCopyUrlOnInviteWindowParams>
     _instance;
} _HideCopyUrlOnInviteWindowParams_default_instance_;
class HideCopyInvitationOnInviteWindowParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideCopyInvitationOnInviteWindowParams>
     _instance;
} _HideCopyInvitationOnInviteWindowParams_default_instance_;
class HideKeypadButtonOnMeetingWindowParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideKeypadButtonOnMeetingWindowParams>
     _instance;
} _HideKeypadButtonOnMeetingWindowParams_default_instance_;
class HideRemoteControlOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideRemoteControlOnMeetingUIParams>
     _instance;
} _HideRemoteControlOnMeetingUIParams_default_instance_;
class HideQAOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideQAOnMeetingUIParams>
     _instance;
} _HideQAOnMeetingUIParams_default_instance_;
class HidePollOnMeetingUIParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HidePollOnMeetingUIParams>
     _instance;
} _HidePollOnMeetingUIParams_default_instance_;
class EnableInputMeetingPasswordDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableInputMeetingPasswordDlgParams>
     _instance;
} _EnableInputMeetingPasswordDlgParams_default_instance_;
class EnableInputMeetingScreenNameDlgParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableInputMeetingScreenNameDlgParams>
     _instance;
} _EnableInputMeetingScreenNameDlgParams_default_instance_;
class RedirectWebinarNeedRegisterParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectWebinarNeedRegisterParams>
     _instance;
} _RedirectWebinarNeedRegisterParams_default_instance_;
class RedirectEndOtherMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectEndOtherMeetingParams>
     _instance;
} _RedirectEndOtherMeetingParams_default_instance_;
class EnableForceAutoStartMyVideoWhenJoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableForceAutoStartMyVideoWhenJoinMeetingParams>
     _instance;
} _EnableForceAutoStartMyVideoWhenJoinMeetingParams_default_instance_;
class EnableForceAutoStopMyVideoWhenJoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableForceAutoStopMyVideoWhenJoinMeetingParams>
     _instance;
} _EnableForceAutoStopMyVideoWhenJoinMeetingParams_default_instance_;
class DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams>
     _instance;
} _DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams_default_instance_;
class DisableShowJoinMeetingWndParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableShowJoinMeetingWndParams>
     _instance;
} _DisableShowJoinMeetingWndParams_default_instance_;
class DisableConfidentialWatermarkParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableConfidentialWatermarkParams>
     _instance;
} _DisableConfidentialWatermarkParams_default_instance_;
class DisableRemoteCtrlCopyPasteFeatureParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableRemoteCtrlCopyPasteFeatureParams>
     _instance;
} _DisableRemoteCtrlCopyPasteFeatureParams_default_instance_;
class DisableToolbarInviteButtonClickOriginActionParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableToolbarInviteButtonClickOriginActionParams>
     _instance;
} _DisableToolbarInviteButtonClickOriginActionParams_default_instance_;
class SetShowVideoOptimizeChkboxParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetShowVideoOptimizeChkboxParams>
     _instance;
} _SetShowVideoOptimizeChkboxParams_default_instance_;
class InputMeetingPasswordAndScreenNameParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InputMeetingPasswordAndScreenNameParams>
     _instance;
} _InputMeetingPasswordAndScreenNameParams_default_instance_;
class InputMeetingIDAndScreenNameParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InputMeetingIDAndScreenNameParams>
     _instance;
} _InputMeetingIDAndScreenNameParams_default_instance_;
class InputMeetingScreenNameParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InputMeetingScreenNameParams>
     _instance;
} _InputMeetingScreenNameParams_default_instance_;
class InputWebinarRegisterEmailAndScreenNameParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InputWebinarRegisterEmailAndScreenNameParams>
     _instance;
} _InputWebinarRegisterEmailAndScreenNameParams_default_instance_;
class CallOutH323ParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallOutH323Params>
     _instance;
} _CallOutH323Params_default_instance_;
class GetUserInfoByUserIDParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoByUserIDParams>
     _instance;
} _GetUserInfoByUserIDParams_default_instance_;
class StartRecordingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartRecordingParams>
     _instance;
} _StartRecordingParams_default_instance_;
class CanStartRecordingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CanStartRecordingParams>
     _instance;
} _CanStartRecordingParams_default_instance_;
class IsSupportLocalRecordingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IsSupportLocalRecordingParams>
     _instance;
} _IsSupportLocalRecordingParams_default_instance_;
class AllowLocalRecordingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllowLocalRecordingParams>
     _instance;
} _AllowLocalRecordingParams_default_instance_;
class DisAllowLocalRecordingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisAllowLocalRecordingParams>
     _instance;
} _DisAllowLocalRecordingParams_default_instance_;
class StartAppShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartAppShareParams>
     _instance;
} _StartAppShareParams_default_instance_;
class StartMonitorShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartMonitorShareParams>
     _instance;
} _StartMonitorShareParams_default_instance_;
class MuteVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MuteVideoParams>
     _instance;
} _MuteVideoParams_default_instance_;
class UnMuteVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnMuteVideoParams>
     _instance;
} _UnMuteVideoParams_default_instance_;
class PinVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PinVideoParams>
     _instance;
} _PinVideoParams_default_instance_;
class SpotlightVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SpotlightVideoParams>
     _instance;
} _SpotlightVideoParams_default_instance_;
class HideOrShowNoVideoUserOnVideoWallParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HideOrShowNoVideoUserOnVideoWallParams>
     _instance;
} _HideOrShowNoVideoUserOnVideoWallParams_default_instance_;
class CreateRendererParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateRendererParams>
     _instance;
} _CreateRendererParams_default_instance_;
class DestroyRendererParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DestroyRendererParams>
     _instance;
} _DestroyRendererParams_default_instance_;
class SubscribeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubscribeParams>
     _instance;
} _SubscribeParams_default_instance_;
class UnSubscribeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnSubscribeParams>
     _instance;
} _UnSubscribeParams_default_instance_;
class SetRawDataResolutionParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetRawDataResolutionParams>
     _instance;
} _SetRawDataResolutionParams_default_instance_;
class GetResolutionParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetResolutionParams>
     _instance;
} _GetResolutionParams_default_instance_;
class GetRawDataTypeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRawDataTypeParams>
     _instance;
} _GetRawDataTypeParams_default_instance_;
class GetUserIdParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetUserIdParams>
     _instance;
} _GetUserIdParams_default_instance_;
class EnableZoomAuthRealNameMeetingUIShownParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableZoomAuthRealNameMeetingUIShownParams>
     _instance;
} _EnableZoomAuthRealNameMeetingUIShownParams_default_instance_;
class RetrieveParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RetrieveParams>
     _instance;
} _RetrieveParams_default_instance_;
class VerifyParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VerifyParams>
     _instance;
} _VerifyParams_default_instance_;
class SetDefaultCellPhoneInfoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetDefaultCellPhoneInfoParams>
     _instance;
} _SetDefaultCellPhoneInfoParams_default_instance_;
class EnableAlwaysShowMeetingControlsParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAlwaysShowMeetingControlsParams>
     _instance;
} _EnableAlwaysShowMeetingControlsParams_default_instance_;
class SelectMicParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectMicParams>
     _instance;
} _SelectMicParams_default_instance_;
class SelectSpeakerParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectSpeakerParams>
     _instance;
} _SelectSpeakerParams_default_instance_;
class EnableAutoJoinAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoJoinAudioParams>
     _instance;
} _EnableAutoJoinAudioParams_default_instance_;
class EnableAutoAdjustMicParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoAdjustMicParams>
     _instance;
} _EnableAutoAdjustMicParams_default_instance_;
class EnableStereoAudioParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableStereoAudioParams>
     _instance;
} _EnableStereoAudioParams_default_instance_;
class EnableMicOriginalInputParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableMicOriginalInputParams>
     _instance;
} _EnableMicOriginalInputParams_default_instance_;
class EnableHoldSpaceKeyToSpeakParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableHoldSpaceKeyToSpeakParams>
     _instance;
} _EnableHoldSpaceKeyToSpeakParams_default_instance_;
class EnableAlwaysMuteMicWhenJoinVoipParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAlwaysMuteMicWhenJoinVoipParams>
     _instance;
} _EnableAlwaysMuteMicWhenJoinVoipParams_default_instance_;
class EnableSuppressAudioNotifyParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableSuppressAudioNotifyParams>
     _instance;
} _EnableSuppressAudioNotifyParams_default_instance_;
class SetEchoCancellationLevelParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetEchoCancellationLevelParams>
     _instance;
} _SetEchoCancellationLevelParams_default_instance_;
class SetMicVolParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetMicVolParams>
     _instance;
} _SetMicVolParams_default_instance_;
class SetSpeakerVolParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSpeakerVolParams>
     _instance;
} _SetSpeakerVolParams_default_instance_;
class EnableDualScreenModeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableDualScreenModeParams>
     _instance;
} _EnableDualScreenModeParams_default_instance_;
class TurnOffAeroModeInSharingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TurnOffAeroModeInSharingParams>
     _instance;
} _TurnOffAeroModeInSharingParams_default_instance_;
class EnableAutoFitToWindowWhenViewSharingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoFitToWindowWhenViewSharingParams>
     _instance;
} _EnableAutoFitToWindowWhenViewSharingParams_default_instance_;
class EnableAutoFullScreenVideoWhenJoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoFullScreenVideoWhenJoinMeetingParams>
     _instance;
} _EnableAutoFullScreenVideoWhenJoinMeetingParams_default_instance_;
class EnableSplitScreenModeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableSplitScreenModeParams>
     _instance;
} _EnableSplitScreenModeParams_default_instance_;
class EnableAutoFullScreenVideoWhenViewShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoFullScreenVideoWhenViewShareParams>
     _instance;
} _EnableAutoFullScreenVideoWhenViewShareParams_default_instance_;
class EnableDisplayReminderWindowWhenExitParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableDisplayReminderWindowWhenExitParams>
     _instance;
} _EnableDisplayReminderWindowWhenExitParams_default_instance_;
class EnableShowMyMeetingElapseTimeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableShowMyMeetingElapseTimeParams>
     _instance;
} _EnableShowMyMeetingElapseTimeParams_default_instance_;
class EnableAccelerateGPUWhenShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAccelerateGPUWhenShareParams>
     _instance;
} _EnableAccelerateGPUWhenShareParams_default_instance_;
class EnableRemoteControlAllApplicationsParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableRemoteControlAllApplicationsParams>
     _instance;
} _EnableRemoteControlAllApplicationsParams_default_instance_;
class SetRecordingPathParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetRecordingPathParams>
     _instance;
} _SetRecordingPathParams_default_instance_;
class EnableSelectRecordFileLocationAfterMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableSelectRecordFileLocationAfterMeetingParams>
     _instance;
} _EnableSelectRecordFileLocationAfterMeetingParams_default_instance_;
class EnableMultiAudioStreamRecordParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableMultiAudioStreamRecordParams>
     _instance;
} _EnableMultiAudioStreamRecordParams_default_instance_;
class EnableAddTimestampWatermarkParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAddTimestampWatermarkParams>
     _instance;
} _EnableAddTimestampWatermarkParams_default_instance_;
class EnableOptimizeFor3rdPartyVideoEditorParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableOptimizeFor3rdPartyVideoEditorParams>
     _instance;
} _EnableOptimizeFor3rdPartyVideoEditorParams_default_instance_;
class EnableShowVideoThumbnailWhenShareParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableShowVideoThumbnailWhenShareParams>
     _instance;
} _EnableShowVideoThumbnailWhenShareParams_default_instance_;
class EnablePlaceVideoNextToShareInRecordParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnablePlaceVideoNextToShareInRecordParams>
     _instance;
} _EnablePlaceVideoNextToShareInRecordParams_default_instance_;
class DisableAdvancedFeatures4GeneralSettingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableAdvancedFeatures4GeneralSettingParams>
     _instance;
} _DisableAdvancedFeatures4GeneralSettingParams_default_instance_;
class DisableAccountSettingTabPageParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DisableAccountSettingTabPageParams>
     _instance;
} _DisableAccountSettingTabPageParams_default_instance_;
class ConfSettingDialogShownTabPageParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfSettingDialogShownTabPageParams>
     _instance;
} _ConfSettingDialogShownTabPageParams_default_instance_;
class SelectVideoCameraParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectVideoCameraParams>
     _instance;
} _SelectVideoCameraParams_default_instance_;
class EnableVideoMirrorEffectParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableVideoMirrorEffectParams>
     _instance;
} _EnableVideoMirrorEffectParams_default_instance_;
class EnableFaceBeautyEffectParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableFaceBeautyEffectParams>
     _instance;
} _EnableFaceBeautyEffectParams_default_instance_;
class EnableHDVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableHDVideoParams>
     _instance;
} _EnableHDVideoParams_default_instance_;
class EnableAlwaysShowNameOnVideoParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAlwaysShowNameOnVideoParams>
     _instance;
} _EnableAlwaysShowNameOnVideoParams_default_instance_;
class EnableVideoPreviewDialogParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableVideoPreviewDialogParams>
     _instance;
} _EnableVideoPreviewDialogParams_default_instance_;
class EnableAutoTurnOffVideoWhenJoinMeetingParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAutoTurnOffVideoWhenJoinMeetingParams>
     _instance;
} _EnableAutoTurnOffVideoWhenJoinMeetingParams_default_instance_;
class EnableAlwaysUse16v9ParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableAlwaysUse16v9Params>
     _instance;
} _EnableAlwaysUse16v9Params_default_instance_;
class EnableSpotlightSelfParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableSpotlightSelfParams>
     _instance;
} _EnableSpotlightSelfParams_default_instance_;
class EnableHardwareEncodeParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableHardwareEncodeParams>
     _instance;
} _EnableHardwareEncodeParams_default_instance_;
class IsHardwareEncodeEnabledParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IsHardwareEncodeEnabledParams>
     _instance;
} _IsHardwareEncodeEnabledParams_default_instance_;
class Enable49VideoesInGallaryViewParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Enable49VideoesInGallaryViewParams>
     _instance;
} _Enable49VideoesInGallaryViewParams_default_instance_;
class EnableHideNoVideoUsersOnWallViewParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnableHideNoVideoUsersOnWallViewParams>
     _instance;
} _EnableHideNoVideoUsersOnWallViewParams_default_instance_;
class SetTeamIdentifierParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetTeamIdentifierParams>
     _instance;
} _SetTeamIdentifierParams_default_instance_;

namespace protobuf_electron_5fsdk_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _InitSDKParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InitSDKParams_default_instance_);_AuthParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AuthParams_default_instance_);_AuthWithJwtTokenParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AuthWithJwtTokenParams_default_instance_);_LoginParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LoginParams_default_instance_);_LoginWithSSOTokenParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LoginWithSSOTokenParams_default_instance_);_StartMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartMeetingParams_default_instance_);_StartWithoutLoginParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartWithoutLoginParams_default_instance_);_JoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_JoinMeetingParams_default_instance_);_JoinWithoutLoginParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_JoinWithoutLoginParams_default_instance_);_LeaveMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LeaveMeetingParams_default_instance_);_HandleZoomWebUriProtocolActionParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HandleZoomWebUriProtocolActionParams_default_instance_);_ShowChatDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowChatDlgParams_default_instance_);_EnterFullScreenParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterFullScreenParams_default_instance_);_ExitFullScreenParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExitFullScreenParams_default_instance_);_MoveFloatVideoWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MoveFloatVideoWndParams_default_instance_);_ShowSharingToolbarParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowSharingToolbarParams_default_instance_);_ChangeFloatoActiveSpkVideoSizeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeFloatoActiveSpkVideoSizeParams_default_instance_);_ShowParticipantsListWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowParticipantsListWndParams_default_instance_);_ShowBottomFloatToolbarWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowBottomFloatToolbarWndParams_default_instance_);_ShowPreOrNextPageVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowPreOrNextPageVideoParams_default_instance_);_ShowSharingFrameWindowsParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowSharingFrameWindowsParams_default_instance_);_SwitchSplitScreenModeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SwitchSplitScreenModeParams_default_instance_);_SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams_default_instance_);_SwapToShowShareViewOrVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SwapToShowShareViewOrVideoParams_default_instance_);_ShowSettingDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowSettingDlgParams_default_instance_);_ScheduleMeetingWithWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScheduleMeetingWithWndParams_default_instance_);_EditMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EditMeetingParams_default_instance_);_EditMeetingWithWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EditMeetingWithWndParams_default_instance_);_DeleteMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteMeetingParams_default_instance_);_AddCustomizedPictureResourceParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddCustomizedPictureResourceParams_default_instance_);_AddCustomizedStringResourceParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddCustomizedStringResourceParams_default_instance_);_AddCustomizedURLResourceParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddCustomizedURLResourceParams_default_instance_);_TryWithMeetingNumberParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TryWithMeetingNumberParams_default_instance_);_TryWithPairingCodeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TryWithPairingCodeParams_default_instance_);_StartAnnotationParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartAnnotationParams_default_instance_);_StopAnnotationParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StopAnnotationParams_default_instance_);_SetToolParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetToolParams_default_instance_);_ClearAnnotationParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClearAnnotationParams_default_instance_);_SetColorParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetColorParams_default_instance_);_SetLineWidthParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetLineWidthParams_default_instance_);_UndoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UndoParams_default_instance_);_RedoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedoParams_default_instance_);_MuteAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MuteAudioParams_default_instance_);_UnmuteAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnmuteAudioParams_default_instance_);_EnablePlayChimeWhenEnterOrExitParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnablePlayChimeWhenEnterOrExitParams_default_instance_);_EnableInviteButtonOnMeeitngUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableInviteButtonOnMeeitngUIParams_default_instance_);_SetFloatVideoPosParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetFloatVideoPosParams_default_instance_);_SetBottomFloatToolBarWndVisibilityParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetBottomFloatToolBarWndVisibilityParams_default_instance_);_SetSharingToolBarVisibilityParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSharingToolBarVisibilityParams_default_instance_);_SetDirectShareMonitorIDParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetDirectShareMonitorIDParams_default_instance_);_SetMeetingUIPosParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetMeetingUIPosParams_default_instance_);_DisableWaitingForHostDialogParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableWaitingForHostDialogParams_default_instance_);_DisablePopupMeetingWrongPSWDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisablePopupMeetingWrongPSWDlgParams_default_instance_);_EnableAutoEndOtherMeetingWhenStartMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoEndOtherMeetingWhenStartMeetingParams_default_instance_);_EnableLButtonDBClick4SwitchFullScreenModeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableLButtonDBClick4SwitchFullScreenModeParams_default_instance_);_SetFloatVideoWndVisibilityParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetFloatVideoWndVisibilityParams_default_instance_);_PrePopulateWebinarRegistrationInfoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PrePopulateWebinarRegistrationInfoParams_default_instance_);_EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams_default_instance_);_EnableAutoAdjustMicVolumeWhenJoinAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoAdjustMicVolumeWhenJoinAudioParams_default_instance_);_ConfigDSCPParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigDSCPParams_default_instance_);_EnableHIdeFullPhoneNumber4PureCallinUserParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableHIdeFullPhoneNumber4PureCallinUserParams_default_instance_);_EnableShareIOSDeviceParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableShareIOSDeviceParams_default_instance_);_EnableShareWhiteBoardParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableShareWhiteBoardParams_default_instance_);_EnableLengthLimitationOfMeetingNumberParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableLengthLimitationOfMeetingNumberParams_default_instance_);_ForceDisableMultiShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceDisableMultiShareParams_default_instance_);_EnableLocalRecordingConverProgressBarDialogParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableLocalRecordingConverProgressBarDialogParams_default_instance_);_SetMaxDurationForOnlyHostInMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetMaxDurationForOnlyHostInMeetingParams_default_instance_);_EnableApproveRemoteControlDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableApproveRemoteControlDlgParams_default_instance_);_EnableDeclineRemoteControlResponseDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableDeclineRemoteControlResponseDlgParams_default_instance_);_EnableLeaveMeetingOptionForHostParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableLeaveMeetingOptionForHostParams_default_instance_);_EnableVideoButtonOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableVideoButtonOnMeetingUIParams_default_instance_);_EnableAudioButtonOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAudioButtonOnMeetingUIParams_default_instance_);_EnableEnterAndExitFullScreenButtonOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableEnterAndExitFullScreenButtonOnMeetingUIParams_default_instance_);_RedirectClickShareBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickShareBTNEventParams_default_instance_);_RedirectClickEndMeetingBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickEndMeetingBTNEventParams_default_instance_);_RedirectFreeMeetingEndingReminderDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectFreeMeetingEndingReminderDlgParams_default_instance_);_RedirectClickCustomLiveStreamMenuEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickCustomLiveStreamMenuEventParams_default_instance_);_RedirectClickParticipantListBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickParticipantListBTNEventParams_default_instance_);_RedirectClickCCBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickCCBTNEventParams_default_instance_);_RedirectClickAudioBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickAudioBTNEventParams_default_instance_);_RedirectClickAudioMenuBTNEventParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectClickAudioMenuBTNEventParams_default_instance_);_RedirectMeetingWarningMsgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectMeetingWarningMsgParams_default_instance_);_EnableToolTipsShowParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableToolTipsShowParams_default_instance_);_EnableAirplayInstructionWindowParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAirplayInstructionWindowParams_default_instance_);_EnableClaimHostFeatureParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableClaimHostFeatureParams_default_instance_);_EnableAutoHideJoinAudioDialogParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoHideJoinAudioDialogParams_default_instance_);_AlwaysShowIconOnTaskBarParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AlwaysShowIconOnTaskBarParams_default_instance_);_DisableSplitScreenModeUIElementsParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableSplitScreenModeUIElementsParams_default_instance_);_SetShowAudioUseComputerSoundChkboxParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowAudioUseComputerSoundChkboxParams_default_instance_);_SetShowCallInTabParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowCallInTabParams_default_instance_);_SetShowCallMeTabParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowCallMeTabParams_default_instance_);_DisableTopMostAttr4SettingDialogParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableTopMostAttr4SettingDialogParams_default_instance_);_EnableGrabShareWithoutReminderParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableGrabShareWithoutReminderParams_default_instance_);_EnableShowShareSwitchMultiToSingleConfirmDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableShowShareSwitchMultiToSingleConfirmDlgParams_default_instance_);_DisableFreeMeetingRemainTimeNotifyParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableFreeMeetingRemainTimeNotifyParams_default_instance_);_HideChatItemOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideChatItemOnMeetingUIParams_default_instance_);_HideRecordItemOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideRecordItemOnMeetingUIParams_default_instance_);_HideUpgradeFreeMeetingButtonParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideUpgradeFreeMeetingButtonParams_default_instance_);_SetShowInviteDlgTabPageParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowInviteDlgTabPageParams_default_instance_);_SetShowH323SubTabPageParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowH323SubTabPageParams_default_instance_);_HideUpgradeWarningMsgForFreeUserWhenScheduleParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideUpgradeWarningMsgForFreeUserWhenScheduleParams_default_instance_);_HideSwitchCameraButtonParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideSwitchCameraButtonParams_default_instance_);_HideCopyUrlOnInviteWindowParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideCopyUrlOnInviteWindowParams_default_instance_);_HideCopyInvitationOnInviteWindowParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideCopyInvitationOnInviteWindowParams_default_instance_);_HideKeypadButtonOnMeetingWindowParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideKeypadButtonOnMeetingWindowParams_default_instance_);_HideRemoteControlOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideRemoteControlOnMeetingUIParams_default_instance_);_HideQAOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideQAOnMeetingUIParams_default_instance_);_HidePollOnMeetingUIParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HidePollOnMeetingUIParams_default_instance_);_EnableInputMeetingPasswordDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableInputMeetingPasswordDlgParams_default_instance_);_EnableInputMeetingScreenNameDlgParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableInputMeetingScreenNameDlgParams_default_instance_);_RedirectWebinarNeedRegisterParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectWebinarNeedRegisterParams_default_instance_);_RedirectEndOtherMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectEndOtherMeetingParams_default_instance_);_EnableForceAutoStartMyVideoWhenJoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableForceAutoStartMyVideoWhenJoinMeetingParams_default_instance_);_EnableForceAutoStopMyVideoWhenJoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableForceAutoStopMyVideoWhenJoinMeetingParams_default_instance_);_DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams_default_instance_);_DisableShowJoinMeetingWndParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableShowJoinMeetingWndParams_default_instance_);_DisableConfidentialWatermarkParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableConfidentialWatermarkParams_default_instance_);_DisableRemoteCtrlCopyPasteFeatureParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableRemoteCtrlCopyPasteFeatureParams_default_instance_);_DisableToolbarInviteButtonClickOriginActionParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableToolbarInviteButtonClickOriginActionParams_default_instance_);_SetShowVideoOptimizeChkboxParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetShowVideoOptimizeChkboxParams_default_instance_);_InputMeetingPasswordAndScreenNameParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InputMeetingPasswordAndScreenNameParams_default_instance_);_InputMeetingIDAndScreenNameParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InputMeetingIDAndScreenNameParams_default_instance_);_InputMeetingScreenNameParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InputMeetingScreenNameParams_default_instance_);_InputWebinarRegisterEmailAndScreenNameParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InputWebinarRegisterEmailAndScreenNameParams_default_instance_);_CallOutH323Params_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallOutH323Params_default_instance_);_GetUserInfoByUserIDParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetUserInfoByUserIDParams_default_instance_);_StartRecordingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartRecordingParams_default_instance_);_CanStartRecordingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CanStartRecordingParams_default_instance_);_IsSupportLocalRecordingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IsSupportLocalRecordingParams_default_instance_);_AllowLocalRecordingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllowLocalRecordingParams_default_instance_);_DisAllowLocalRecordingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisAllowLocalRecordingParams_default_instance_);_StartAppShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartAppShareParams_default_instance_);_StartMonitorShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartMonitorShareParams_default_instance_);_MuteVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MuteVideoParams_default_instance_);_UnMuteVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnMuteVideoParams_default_instance_);_PinVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PinVideoParams_default_instance_);_SpotlightVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SpotlightVideoParams_default_instance_);_HideOrShowNoVideoUserOnVideoWallParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HideOrShowNoVideoUserOnVideoWallParams_default_instance_);_CreateRendererParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateRendererParams_default_instance_);_DestroyRendererParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DestroyRendererParams_default_instance_);_SubscribeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubscribeParams_default_instance_);_UnSubscribeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnSubscribeParams_default_instance_);_SetRawDataResolutionParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetRawDataResolutionParams_default_instance_);_GetResolutionParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetResolutionParams_default_instance_);_GetRawDataTypeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRawDataTypeParams_default_instance_);_GetUserIdParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetUserIdParams_default_instance_);_EnableZoomAuthRealNameMeetingUIShownParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableZoomAuthRealNameMeetingUIShownParams_default_instance_);_RetrieveParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RetrieveParams_default_instance_);_VerifyParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VerifyParams_default_instance_);_SetDefaultCellPhoneInfoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetDefaultCellPhoneInfoParams_default_instance_);_EnableAlwaysShowMeetingControlsParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAlwaysShowMeetingControlsParams_default_instance_);_SelectMicParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectMicParams_default_instance_);_SelectSpeakerParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectSpeakerParams_default_instance_);_EnableAutoJoinAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoJoinAudioParams_default_instance_);_EnableAutoAdjustMicParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoAdjustMicParams_default_instance_);_EnableStereoAudioParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableStereoAudioParams_default_instance_);_EnableMicOriginalInputParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableMicOriginalInputParams_default_instance_);_EnableHoldSpaceKeyToSpeakParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableHoldSpaceKeyToSpeakParams_default_instance_);_EnableAlwaysMuteMicWhenJoinVoipParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAlwaysMuteMicWhenJoinVoipParams_default_instance_);_EnableSuppressAudioNotifyParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableSuppressAudioNotifyParams_default_instance_);_SetEchoCancellationLevelParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetEchoCancellationLevelParams_default_instance_);_SetMicVolParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetMicVolParams_default_instance_);_SetSpeakerVolParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSpeakerVolParams_default_instance_);_EnableDualScreenModeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableDualScreenModeParams_default_instance_);_TurnOffAeroModeInSharingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TurnOffAeroModeInSharingParams_default_instance_);_EnableAutoFitToWindowWhenViewSharingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoFitToWindowWhenViewSharingParams_default_instance_);_EnableAutoFullScreenVideoWhenJoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoFullScreenVideoWhenJoinMeetingParams_default_instance_);_EnableSplitScreenModeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableSplitScreenModeParams_default_instance_);_EnableAutoFullScreenVideoWhenViewShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoFullScreenVideoWhenViewShareParams_default_instance_);_EnableDisplayReminderWindowWhenExitParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableDisplayReminderWindowWhenExitParams_default_instance_);_EnableShowMyMeetingElapseTimeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableShowMyMeetingElapseTimeParams_default_instance_);_EnableAccelerateGPUWhenShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAccelerateGPUWhenShareParams_default_instance_);_EnableRemoteControlAllApplicationsParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableRemoteControlAllApplicationsParams_default_instance_);_SetRecordingPathParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetRecordingPathParams_default_instance_);_EnableSelectRecordFileLocationAfterMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableSelectRecordFileLocationAfterMeetingParams_default_instance_);_EnableMultiAudioStreamRecordParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableMultiAudioStreamRecordParams_default_instance_);_EnableAddTimestampWatermarkParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAddTimestampWatermarkParams_default_instance_);_EnableOptimizeFor3rdPartyVideoEditorParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableOptimizeFor3rdPartyVideoEditorParams_default_instance_);_EnableShowVideoThumbnailWhenShareParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableShowVideoThumbnailWhenShareParams_default_instance_);_EnablePlaceVideoNextToShareInRecordParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnablePlaceVideoNextToShareInRecordParams_default_instance_);_DisableAdvancedFeatures4GeneralSettingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableAdvancedFeatures4GeneralSettingParams_default_instance_);_DisableAccountSettingTabPageParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DisableAccountSettingTabPageParams_default_instance_);_ConfSettingDialogShownTabPageParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfSettingDialogShownTabPageParams_default_instance_);_SelectVideoCameraParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectVideoCameraParams_default_instance_);_EnableVideoMirrorEffectParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableVideoMirrorEffectParams_default_instance_);_EnableFaceBeautyEffectParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableFaceBeautyEffectParams_default_instance_);_EnableHDVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableHDVideoParams_default_instance_);_EnableAlwaysShowNameOnVideoParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAlwaysShowNameOnVideoParams_default_instance_);_EnableVideoPreviewDialogParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableVideoPreviewDialogParams_default_instance_);_EnableAutoTurnOffVideoWhenJoinMeetingParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAutoTurnOffVideoWhenJoinMeetingParams_default_instance_);_EnableAlwaysUse16v9Params_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableAlwaysUse16v9Params_default_instance_);_EnableSpotlightSelfParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableSpotlightSelfParams_default_instance_);_EnableHardwareEncodeParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableHardwareEncodeParams_default_instance_);_IsHardwareEncodeEnabledParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IsHardwareEncodeEnabledParams_default_instance_);_Enable49VideoesInGallaryViewParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Enable49VideoesInGallaryViewParams_default_instance_);_EnableHideNoVideoUsersOnWallViewParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnableHideNoVideoUsersOnWallViewParams_default_instance_);_SetTeamIdentifierParams_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetTeamIdentifierParams_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_electron_5fsdk_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitSDKParams::kPathFieldNumber;
const int InitSDKParams::kDomainFieldNumber;
const int InitSDKParams::kCustomizedLanguageNameFieldNumber;
const int InitSDKParams::kCustomizedLanguageInfoFieldNumber;
const int InitSDKParams::kCustomizedLanguageTypeFieldNumber;
const int InitSDKParams::kStrSupportUrlFieldNumber;
const int InitSDKParams::kLangIDFieldNumber;
const int InitSDKParams::kEnableLogFieldNumber;
const int InitSDKParams::kAppLocaleFieldNumber;
const int InitSDKParams::kLogFileSizeFieldNumber;
const int InitSDKParams::kEnableGeneralDumpFieldNumber;
const int InitSDKParams::kPermonitorAwarenessModeFieldNumber;
const int InitSDKParams::kVideoRenderModeFieldNumber;
const int InitSDKParams::kVideoRawdataMemoryModeFieldNumber;
const int InitSDKParams::kShareRawdataMemoryModeFieldNumber;
const int InitSDKParams::kAudioRawdataMemoryModeFieldNumber;
const int InitSDKParams::kEnableRawdataIntermediateModeFieldNumber;
const int InitSDKParams::kRenderPostProcessingFieldNumber;
const int InitSDKParams::kVideoCaptureMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitSDKParams::InitSDKParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.InitSDKParams)
}
InitSDKParams::InitSDKParams(const InitSDKParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  customizedlanguagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_customizedlanguagename()) {
    customizedlanguagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customizedlanguagename_);
  }
  customizedlanguageinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_customizedlanguageinfo()) {
    customizedlanguageinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customizedlanguageinfo_);
  }
  strsupporturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strsupporturl()) {
    strsupporturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsupporturl_);
  }
  ::memcpy(&customizedlanguagetype_, &from.customizedlanguagetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&videocapturemethod_) -
    reinterpret_cast<char*>(&customizedlanguagetype_)) + sizeof(videocapturemethod_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.InitSDKParams)
}

void InitSDKParams::SharedCtor() {
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedlanguagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedlanguageinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsupporturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&customizedlanguagetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&videocapturemethod_) -
      reinterpret_cast<char*>(&customizedlanguagetype_)) + sizeof(videocapturemethod_));
}

InitSDKParams::~InitSDKParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.InitSDKParams)
  SharedDtor();
}

void InitSDKParams::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedlanguagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedlanguageinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strsupporturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitSDKParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InitSDKParams& InitSDKParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitSDKParams* InitSDKParams::New(::google::protobuf::Arena* arena) const {
  InitSDKParams* n = new InitSDKParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitSDKParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.InitSDKParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!domain_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*domain_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!customizedlanguagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*customizedlanguagename_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!customizedlanguageinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*customizedlanguageinfo_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!strsupporturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strsupporturl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&customizedlanguagetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&applocale_) -
        reinterpret_cast<char*>(&customizedlanguagetype_)) + sizeof(applocale_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&logfilesize_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sharerawdatamemorymode_) -
        reinterpret_cast<char*>(&logfilesize_)) + sizeof(sharerawdatamemorymode_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&audiorawdatamemorymode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&videocapturemethod_) -
        reinterpret_cast<char*>(&audiorawdatamemorymode_)) + sizeof(videocapturemethod_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InitSDKParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.InitSDKParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string customizedLanguageName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customizedlanguagename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string customizedLanguageInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customizedlanguageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 customizedLanguageType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_customizedlanguagetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &customizedlanguagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strSupportUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsupporturl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 langID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_langid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &langid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enableLog = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_enablelog();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablelog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 appLocale = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_applocale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &applocale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 logFileSize = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_logfilesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logfilesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enableGeneralDump = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_enablegeneraldump();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablegeneraldump_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool permonitorAwarenessMode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_permonitorawarenessmode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &permonitorawarenessmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 videoRenderMode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_videorendermode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &videorendermode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 videoRawdataMemoryMode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_videorawdatamemorymode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &videorawdatamemorymode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shareRawdataMemoryMode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_sharerawdatamemorymode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sharerawdatamemorymode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 audioRawdataMemoryMode = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_audiorawdatamemorymode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &audiorawdatamemorymode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enableRawdataIntermediateMode = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_enablerawdataintermediatemode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablerawdataintermediatemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 renderPostProcessing = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_renderpostprocessing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renderpostprocessing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 videoCaptureMethod = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_videocapturemethod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &videocapturemethod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.InitSDKParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.InitSDKParams)
  return false;
#undef DO_
}

void InitSDKParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.InitSDKParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional string domain = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // optional string customizedLanguageName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->customizedlanguagename(), output);
  }

  // optional string customizedLanguageInfo = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->customizedlanguageinfo(), output);
  }

  // optional int32 customizedLanguageType = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->customizedlanguagetype(), output);
  }

  // optional string strSupportUrl = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strsupporturl(), output);
  }

  // optional int32 langID = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->langid(), output);
  }

  // optional bool enableLog = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->enablelog(), output);
  }

  // optional int32 appLocale = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->applocale(), output);
  }

  // optional int32 logFileSize = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->logfilesize(), output);
  }

  // optional bool enableGeneralDump = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->enablegeneraldump(), output);
  }

  // optional bool permonitorAwarenessMode = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->permonitorawarenessmode(), output);
  }

  // optional int32 videoRenderMode = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->videorendermode(), output);
  }

  // optional int32 videoRawdataMemoryMode = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->videorawdatamemorymode(), output);
  }

  // optional int32 shareRawdataMemoryMode = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->sharerawdatamemorymode(), output);
  }

  // optional int32 audioRawdataMemoryMode = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->audiorawdatamemorymode(), output);
  }

  // optional bool enableRawdataIntermediateMode = 17;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->enablerawdataintermediatemode(), output);
  }

  // optional int32 renderPostProcessing = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->renderpostprocessing(), output);
  }

  // optional int32 videoCaptureMethod = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->videocapturemethod(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.InitSDKParams)
}

size_t InitSDKParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.InitSDKParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string domain = 2;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string customizedLanguageName = 3;
    if (has_customizedlanguagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customizedlanguagename());
    }

    // optional string customizedLanguageInfo = 4;
    if (has_customizedlanguageinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customizedlanguageinfo());
    }

    // optional string strSupportUrl = 6;
    if (has_strsupporturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsupporturl());
    }

    // optional int32 customizedLanguageType = 5;
    if (has_customizedlanguagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->customizedlanguagetype());
    }

    // optional int32 langID = 7;
    if (has_langid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->langid());
    }

    // optional int32 appLocale = 9;
    if (has_applocale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->applocale());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 logFileSize = 10;
    if (has_logfilesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->logfilesize());
    }

    // optional bool enableLog = 8;
    if (has_enablelog()) {
      total_size += 1 + 1;
    }

    // optional bool enableGeneralDump = 11;
    if (has_enablegeneraldump()) {
      total_size += 1 + 1;
    }

    // optional bool permonitorAwarenessMode = 12;
    if (has_permonitorawarenessmode()) {
      total_size += 1 + 1;
    }

    // optional bool enableRawdataIntermediateMode = 17;
    if (has_enablerawdataintermediatemode()) {
      total_size += 2 + 1;
    }

    // optional int32 videoRenderMode = 13;
    if (has_videorendermode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->videorendermode());
    }

    // optional int32 videoRawdataMemoryMode = 14;
    if (has_videorawdatamemorymode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->videorawdatamemorymode());
    }

    // optional int32 shareRawdataMemoryMode = 15;
    if (has_sharerawdatamemorymode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sharerawdatamemorymode());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int32 audioRawdataMemoryMode = 16;
    if (has_audiorawdatamemorymode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->audiorawdatamemorymode());
    }

    // optional int32 renderPostProcessing = 18;
    if (has_renderpostprocessing()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->renderpostprocessing());
    }

    // optional int32 videoCaptureMethod = 19;
    if (has_videocapturemethod()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->videocapturemethod());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitSDKParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InitSDKParams*>(&from));
}

void InitSDKParams::MergeFrom(const InitSDKParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.InitSDKParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_customizedlanguagename();
      customizedlanguagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customizedlanguagename_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_customizedlanguageinfo();
      customizedlanguageinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customizedlanguageinfo_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_strsupporturl();
      strsupporturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsupporturl_);
    }
    if (cached_has_bits & 0x00000020u) {
      customizedlanguagetype_ = from.customizedlanguagetype_;
    }
    if (cached_has_bits & 0x00000040u) {
      langid_ = from.langid_;
    }
    if (cached_has_bits & 0x00000080u) {
      applocale_ = from.applocale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      logfilesize_ = from.logfilesize_;
    }
    if (cached_has_bits & 0x00000200u) {
      enablelog_ = from.enablelog_;
    }
    if (cached_has_bits & 0x00000400u) {
      enablegeneraldump_ = from.enablegeneraldump_;
    }
    if (cached_has_bits & 0x00000800u) {
      permonitorawarenessmode_ = from.permonitorawarenessmode_;
    }
    if (cached_has_bits & 0x00001000u) {
      enablerawdataintermediatemode_ = from.enablerawdataintermediatemode_;
    }
    if (cached_has_bits & 0x00002000u) {
      videorendermode_ = from.videorendermode_;
    }
    if (cached_has_bits & 0x00004000u) {
      videorawdatamemorymode_ = from.videorawdatamemorymode_;
    }
    if (cached_has_bits & 0x00008000u) {
      sharerawdatamemorymode_ = from.sharerawdatamemorymode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      audiorawdatamemorymode_ = from.audiorawdatamemorymode_;
    }
    if (cached_has_bits & 0x00020000u) {
      renderpostprocessing_ = from.renderpostprocessing_;
    }
    if (cached_has_bits & 0x00040000u) {
      videocapturemethod_ = from.videocapturemethod_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InitSDKParams::CopyFrom(const InitSDKParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.InitSDKParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitSDKParams::IsInitialized() const {
  return true;
}

void InitSDKParams::Swap(InitSDKParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitSDKParams::InternalSwap(InitSDKParams* other) {
  using std::swap;
  path_.Swap(&other->path_);
  domain_.Swap(&other->domain_);
  customizedlanguagename_.Swap(&other->customizedlanguagename_);
  customizedlanguageinfo_.Swap(&other->customizedlanguageinfo_);
  strsupporturl_.Swap(&other->strsupporturl_);
  swap(customizedlanguagetype_, other->customizedlanguagetype_);
  swap(langid_, other->langid_);
  swap(applocale_, other->applocale_);
  swap(logfilesize_, other->logfilesize_);
  swap(enablelog_, other->enablelog_);
  swap(enablegeneraldump_, other->enablegeneraldump_);
  swap(permonitorawarenessmode_, other->permonitorawarenessmode_);
  swap(enablerawdataintermediatemode_, other->enablerawdataintermediatemode_);
  swap(videorendermode_, other->videorendermode_);
  swap(videorawdatamemorymode_, other->videorawdatamemorymode_);
  swap(sharerawdatamemorymode_, other->sharerawdatamemorymode_);
  swap(audiorawdatamemorymode_, other->audiorawdatamemorymode_);
  swap(renderpostprocessing_, other->renderpostprocessing_);
  swap(videocapturemethod_, other->videocapturemethod_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string InitSDKParams::GetTypeName() const {
  return "com.electron.sdk.proto.InitSDKParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitSDKParams

// optional string path = 1;
bool InitSDKParams::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InitSDKParams::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void InitSDKParams::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void InitSDKParams::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& InitSDKParams::path() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.path)
  return path_.GetNoArena();
}
void InitSDKParams::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.path)
}
#if LANG_CXX11
void InitSDKParams::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.path)
}
#endif
void InitSDKParams::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.path)
}
void InitSDKParams::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.path)
}
::std::string* InitSDKParams::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSDKParams::release_path() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSDKParams::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.path)
}

// optional string domain = 2;
bool InitSDKParams::has_domain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InitSDKParams::set_has_domain() {
  _has_bits_[0] |= 0x00000002u;
}
void InitSDKParams::clear_has_domain() {
  _has_bits_[0] &= ~0x00000002u;
}
void InitSDKParams::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& InitSDKParams::domain() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.domain)
  return domain_.GetNoArena();
}
void InitSDKParams::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.domain)
}
#if LANG_CXX11
void InitSDKParams::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.domain)
}
#endif
void InitSDKParams::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.domain)
}
void InitSDKParams::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.domain)
}
::std::string* InitSDKParams::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSDKParams::release_domain() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSDKParams::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.domain)
}

// optional string customizedLanguageName = 3;
bool InitSDKParams::has_customizedlanguagename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InitSDKParams::set_has_customizedlanguagename() {
  _has_bits_[0] |= 0x00000004u;
}
void InitSDKParams::clear_has_customizedlanguagename() {
  _has_bits_[0] &= ~0x00000004u;
}
void InitSDKParams::clear_customizedlanguagename() {
  customizedlanguagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_customizedlanguagename();
}
const ::std::string& InitSDKParams::customizedlanguagename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  return customizedlanguagename_.GetNoArena();
}
void InitSDKParams::set_customizedlanguagename(const ::std::string& value) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
#if LANG_CXX11
void InitSDKParams::set_customizedlanguagename(::std::string&& value) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
#endif
void InitSDKParams::set_customizedlanguagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
void InitSDKParams::set_customizedlanguagename(const char* value, size_t size) {
  set_has_customizedlanguagename();
  customizedlanguagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}
::std::string* InitSDKParams::mutable_customizedlanguagename() {
  set_has_customizedlanguagename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  return customizedlanguagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSDKParams::release_customizedlanguagename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
  clear_has_customizedlanguagename();
  return customizedlanguagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSDKParams::set_allocated_customizedlanguagename(::std::string* customizedlanguagename) {
  if (customizedlanguagename != NULL) {
    set_has_customizedlanguagename();
  } else {
    clear_has_customizedlanguagename();
  }
  customizedlanguagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customizedlanguagename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.customizedLanguageName)
}

// optional string customizedLanguageInfo = 4;
bool InitSDKParams::has_customizedlanguageinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InitSDKParams::set_has_customizedlanguageinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void InitSDKParams::clear_has_customizedlanguageinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void InitSDKParams::clear_customizedlanguageinfo() {
  customizedlanguageinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_customizedlanguageinfo();
}
const ::std::string& InitSDKParams::customizedlanguageinfo() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  return customizedlanguageinfo_.GetNoArena();
}
void InitSDKParams::set_customizedlanguageinfo(const ::std::string& value) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
#if LANG_CXX11
void InitSDKParams::set_customizedlanguageinfo(::std::string&& value) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
#endif
void InitSDKParams::set_customizedlanguageinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
void InitSDKParams::set_customizedlanguageinfo(const char* value, size_t size) {
  set_has_customizedlanguageinfo();
  customizedlanguageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}
::std::string* InitSDKParams::mutable_customizedlanguageinfo() {
  set_has_customizedlanguageinfo();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  return customizedlanguageinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSDKParams::release_customizedlanguageinfo() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
  clear_has_customizedlanguageinfo();
  return customizedlanguageinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSDKParams::set_allocated_customizedlanguageinfo(::std::string* customizedlanguageinfo) {
  if (customizedlanguageinfo != NULL) {
    set_has_customizedlanguageinfo();
  } else {
    clear_has_customizedlanguageinfo();
  }
  customizedlanguageinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customizedlanguageinfo);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.customizedLanguageInfo)
}

// optional int32 customizedLanguageType = 5;
bool InitSDKParams::has_customizedlanguagetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void InitSDKParams::set_has_customizedlanguagetype() {
  _has_bits_[0] |= 0x00000020u;
}
void InitSDKParams::clear_has_customizedlanguagetype() {
  _has_bits_[0] &= ~0x00000020u;
}
void InitSDKParams::clear_customizedlanguagetype() {
  customizedlanguagetype_ = 0;
  clear_has_customizedlanguagetype();
}
::google::protobuf::int32 InitSDKParams::customizedlanguagetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.customizedLanguageType)
  return customizedlanguagetype_;
}
void InitSDKParams::set_customizedlanguagetype(::google::protobuf::int32 value) {
  set_has_customizedlanguagetype();
  customizedlanguagetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.customizedLanguageType)
}

// optional string strSupportUrl = 6;
bool InitSDKParams::has_strsupporturl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InitSDKParams::set_has_strsupporturl() {
  _has_bits_[0] |= 0x00000010u;
}
void InitSDKParams::clear_has_strsupporturl() {
  _has_bits_[0] &= ~0x00000010u;
}
void InitSDKParams::clear_strsupporturl() {
  strsupporturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strsupporturl();
}
const ::std::string& InitSDKParams::strsupporturl() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  return strsupporturl_.GetNoArena();
}
void InitSDKParams::set_strsupporturl(const ::std::string& value) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
#if LANG_CXX11
void InitSDKParams::set_strsupporturl(::std::string&& value) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
#endif
void InitSDKParams::set_strsupporturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
void InitSDKParams::set_strsupporturl(const char* value, size_t size) {
  set_has_strsupporturl();
  strsupporturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}
::std::string* InitSDKParams::mutable_strsupporturl() {
  set_has_strsupporturl();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  return strsupporturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSDKParams::release_strsupporturl() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
  clear_has_strsupporturl();
  return strsupporturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSDKParams::set_allocated_strsupporturl(::std::string* strsupporturl) {
  if (strsupporturl != NULL) {
    set_has_strsupporturl();
  } else {
    clear_has_strsupporturl();
  }
  strsupporturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsupporturl);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InitSDKParams.strSupportUrl)
}

// optional int32 langID = 7;
bool InitSDKParams::has_langid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void InitSDKParams::set_has_langid() {
  _has_bits_[0] |= 0x00000040u;
}
void InitSDKParams::clear_has_langid() {
  _has_bits_[0] &= ~0x00000040u;
}
void InitSDKParams::clear_langid() {
  langid_ = 0;
  clear_has_langid();
}
::google::protobuf::int32 InitSDKParams::langid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.langID)
  return langid_;
}
void InitSDKParams::set_langid(::google::protobuf::int32 value) {
  set_has_langid();
  langid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.langID)
}

// optional bool enableLog = 8;
bool InitSDKParams::has_enablelog() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void InitSDKParams::set_has_enablelog() {
  _has_bits_[0] |= 0x00000200u;
}
void InitSDKParams::clear_has_enablelog() {
  _has_bits_[0] &= ~0x00000200u;
}
void InitSDKParams::clear_enablelog() {
  enablelog_ = false;
  clear_has_enablelog();
}
bool InitSDKParams::enablelog() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableLog)
  return enablelog_;
}
void InitSDKParams::set_enablelog(bool value) {
  set_has_enablelog();
  enablelog_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableLog)
}

// optional int32 appLocale = 9;
bool InitSDKParams::has_applocale() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void InitSDKParams::set_has_applocale() {
  _has_bits_[0] |= 0x00000080u;
}
void InitSDKParams::clear_has_applocale() {
  _has_bits_[0] &= ~0x00000080u;
}
void InitSDKParams::clear_applocale() {
  applocale_ = 0;
  clear_has_applocale();
}
::google::protobuf::int32 InitSDKParams::applocale() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.appLocale)
  return applocale_;
}
void InitSDKParams::set_applocale(::google::protobuf::int32 value) {
  set_has_applocale();
  applocale_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.appLocale)
}

// optional int32 logFileSize = 10;
bool InitSDKParams::has_logfilesize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void InitSDKParams::set_has_logfilesize() {
  _has_bits_[0] |= 0x00000100u;
}
void InitSDKParams::clear_has_logfilesize() {
  _has_bits_[0] &= ~0x00000100u;
}
void InitSDKParams::clear_logfilesize() {
  logfilesize_ = 0;
  clear_has_logfilesize();
}
::google::protobuf::int32 InitSDKParams::logfilesize() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.logFileSize)
  return logfilesize_;
}
void InitSDKParams::set_logfilesize(::google::protobuf::int32 value) {
  set_has_logfilesize();
  logfilesize_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.logFileSize)
}

// optional bool enableGeneralDump = 11;
bool InitSDKParams::has_enablegeneraldump() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void InitSDKParams::set_has_enablegeneraldump() {
  _has_bits_[0] |= 0x00000400u;
}
void InitSDKParams::clear_has_enablegeneraldump() {
  _has_bits_[0] &= ~0x00000400u;
}
void InitSDKParams::clear_enablegeneraldump() {
  enablegeneraldump_ = false;
  clear_has_enablegeneraldump();
}
bool InitSDKParams::enablegeneraldump() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableGeneralDump)
  return enablegeneraldump_;
}
void InitSDKParams::set_enablegeneraldump(bool value) {
  set_has_enablegeneraldump();
  enablegeneraldump_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableGeneralDump)
}

// optional bool permonitorAwarenessMode = 12;
bool InitSDKParams::has_permonitorawarenessmode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void InitSDKParams::set_has_permonitorawarenessmode() {
  _has_bits_[0] |= 0x00000800u;
}
void InitSDKParams::clear_has_permonitorawarenessmode() {
  _has_bits_[0] &= ~0x00000800u;
}
void InitSDKParams::clear_permonitorawarenessmode() {
  permonitorawarenessmode_ = false;
  clear_has_permonitorawarenessmode();
}
bool InitSDKParams::permonitorawarenessmode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.permonitorAwarenessMode)
  return permonitorawarenessmode_;
}
void InitSDKParams::set_permonitorawarenessmode(bool value) {
  set_has_permonitorawarenessmode();
  permonitorawarenessmode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.permonitorAwarenessMode)
}

// optional int32 videoRenderMode = 13;
bool InitSDKParams::has_videorendermode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void InitSDKParams::set_has_videorendermode() {
  _has_bits_[0] |= 0x00002000u;
}
void InitSDKParams::clear_has_videorendermode() {
  _has_bits_[0] &= ~0x00002000u;
}
void InitSDKParams::clear_videorendermode() {
  videorendermode_ = 0;
  clear_has_videorendermode();
}
::google::protobuf::int32 InitSDKParams::videorendermode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoRenderMode)
  return videorendermode_;
}
void InitSDKParams::set_videorendermode(::google::protobuf::int32 value) {
  set_has_videorendermode();
  videorendermode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoRenderMode)
}

// optional int32 videoRawdataMemoryMode = 14;
bool InitSDKParams::has_videorawdatamemorymode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void InitSDKParams::set_has_videorawdatamemorymode() {
  _has_bits_[0] |= 0x00004000u;
}
void InitSDKParams::clear_has_videorawdatamemorymode() {
  _has_bits_[0] &= ~0x00004000u;
}
void InitSDKParams::clear_videorawdatamemorymode() {
  videorawdatamemorymode_ = 0;
  clear_has_videorawdatamemorymode();
}
::google::protobuf::int32 InitSDKParams::videorawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoRawdataMemoryMode)
  return videorawdatamemorymode_;
}
void InitSDKParams::set_videorawdatamemorymode(::google::protobuf::int32 value) {
  set_has_videorawdatamemorymode();
  videorawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoRawdataMemoryMode)
}

// optional int32 shareRawdataMemoryMode = 15;
bool InitSDKParams::has_sharerawdatamemorymode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void InitSDKParams::set_has_sharerawdatamemorymode() {
  _has_bits_[0] |= 0x00008000u;
}
void InitSDKParams::clear_has_sharerawdatamemorymode() {
  _has_bits_[0] &= ~0x00008000u;
}
void InitSDKParams::clear_sharerawdatamemorymode() {
  sharerawdatamemorymode_ = 0;
  clear_has_sharerawdatamemorymode();
}
::google::protobuf::int32 InitSDKParams::sharerawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.shareRawdataMemoryMode)
  return sharerawdatamemorymode_;
}
void InitSDKParams::set_sharerawdatamemorymode(::google::protobuf::int32 value) {
  set_has_sharerawdatamemorymode();
  sharerawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.shareRawdataMemoryMode)
}

// optional int32 audioRawdataMemoryMode = 16;
bool InitSDKParams::has_audiorawdatamemorymode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void InitSDKParams::set_has_audiorawdatamemorymode() {
  _has_bits_[0] |= 0x00010000u;
}
void InitSDKParams::clear_has_audiorawdatamemorymode() {
  _has_bits_[0] &= ~0x00010000u;
}
void InitSDKParams::clear_audiorawdatamemorymode() {
  audiorawdatamemorymode_ = 0;
  clear_has_audiorawdatamemorymode();
}
::google::protobuf::int32 InitSDKParams::audiorawdatamemorymode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.audioRawdataMemoryMode)
  return audiorawdatamemorymode_;
}
void InitSDKParams::set_audiorawdatamemorymode(::google::protobuf::int32 value) {
  set_has_audiorawdatamemorymode();
  audiorawdatamemorymode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.audioRawdataMemoryMode)
}

// optional bool enableRawdataIntermediateMode = 17;
bool InitSDKParams::has_enablerawdataintermediatemode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void InitSDKParams::set_has_enablerawdataintermediatemode() {
  _has_bits_[0] |= 0x00001000u;
}
void InitSDKParams::clear_has_enablerawdataintermediatemode() {
  _has_bits_[0] &= ~0x00001000u;
}
void InitSDKParams::clear_enablerawdataintermediatemode() {
  enablerawdataintermediatemode_ = false;
  clear_has_enablerawdataintermediatemode();
}
bool InitSDKParams::enablerawdataintermediatemode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.enableRawdataIntermediateMode)
  return enablerawdataintermediatemode_;
}
void InitSDKParams::set_enablerawdataintermediatemode(bool value) {
  set_has_enablerawdataintermediatemode();
  enablerawdataintermediatemode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.enableRawdataIntermediateMode)
}

// optional int32 renderPostProcessing = 18;
bool InitSDKParams::has_renderpostprocessing() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void InitSDKParams::set_has_renderpostprocessing() {
  _has_bits_[0] |= 0x00020000u;
}
void InitSDKParams::clear_has_renderpostprocessing() {
  _has_bits_[0] &= ~0x00020000u;
}
void InitSDKParams::clear_renderpostprocessing() {
  renderpostprocessing_ = 0;
  clear_has_renderpostprocessing();
}
::google::protobuf::int32 InitSDKParams::renderpostprocessing() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.renderPostProcessing)
  return renderpostprocessing_;
}
void InitSDKParams::set_renderpostprocessing(::google::protobuf::int32 value) {
  set_has_renderpostprocessing();
  renderpostprocessing_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.renderPostProcessing)
}

// optional int32 videoCaptureMethod = 19;
bool InitSDKParams::has_videocapturemethod() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void InitSDKParams::set_has_videocapturemethod() {
  _has_bits_[0] |= 0x00040000u;
}
void InitSDKParams::clear_has_videocapturemethod() {
  _has_bits_[0] &= ~0x00040000u;
}
void InitSDKParams::clear_videocapturemethod() {
  videocapturemethod_ = 0;
  clear_has_videocapturemethod();
}
::google::protobuf::int32 InitSDKParams::videocapturemethod() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InitSDKParams.videoCaptureMethod)
  return videocapturemethod_;
}
void InitSDKParams::set_videocapturemethod(::google::protobuf::int32 value) {
  set_has_videocapturemethod();
  videocapturemethod_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InitSDKParams.videoCaptureMethod)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthParams::kKeyFieldNumber;
const int AuthParams::kSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthParams::AuthParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AuthParams)
}
AuthParams::AuthParams(const AuthParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_secret()) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AuthParams)
}

void AuthParams::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthParams::~AuthParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AuthParams)
  SharedDtor();
}

void AuthParams::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AuthParams& AuthParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthParams* AuthParams::New(::google::protobuf::Arena* arena) const {
  AuthParams* n = new AuthParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AuthParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!secret_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*secret_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AuthParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AuthParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AuthParams)
  return false;
#undef DO_
}

void AuthParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AuthParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string secret = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AuthParams)
}

size_t AuthParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AuthParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string secret = 2;
    if (has_secret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secret());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthParams*>(&from));
}

void AuthParams::MergeFrom(const AuthParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AuthParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_secret();
      secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
    }
  }
}

void AuthParams::CopyFrom(const AuthParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AuthParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthParams::IsInitialized() const {
  return true;
}

void AuthParams::Swap(AuthParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthParams::InternalSwap(AuthParams* other) {
  using std::swap;
  key_.Swap(&other->key_);
  secret_.Swap(&other->secret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AuthParams::GetTypeName() const {
  return "com.electron.sdk.proto.AuthParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthParams

// optional string key = 1;
bool AuthParams::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthParams::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthParams::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthParams::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& AuthParams::key() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthParams.key)
  return key_.GetNoArena();
}
void AuthParams::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthParams.key)
}
#if LANG_CXX11
void AuthParams::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthParams.key)
}
#endif
void AuthParams::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthParams.key)
}
void AuthParams::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthParams.key)
}
::std::string* AuthParams::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthParams.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthParams::release_key() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthParams.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthParams::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthParams.key)
}

// optional string secret = 2;
bool AuthParams::has_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthParams::set_has_secret() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthParams::clear_has_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthParams::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secret();
}
const ::std::string& AuthParams::secret() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthParams.secret)
  return secret_.GetNoArena();
}
void AuthParams::set_secret(const ::std::string& value) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthParams.secret)
}
#if LANG_CXX11
void AuthParams::set_secret(::std::string&& value) {
  set_has_secret();
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthParams.secret)
}
#endif
void AuthParams::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthParams.secret)
}
void AuthParams::set_secret(const char* value, size_t size) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthParams.secret)
}
::std::string* AuthParams::mutable_secret() {
  set_has_secret();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthParams.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthParams::release_secret() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthParams.secret)
  clear_has_secret();
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthParams::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    set_has_secret();
  } else {
    clear_has_secret();
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthParams.secret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthWithJwtTokenParams::kSdkJwtTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthWithJwtTokenParams::AuthWithJwtTokenParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AuthWithJwtTokenParams)
}
AuthWithJwtTokenParams::AuthWithJwtTokenParams(const AuthWithJwtTokenParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sdkjwttoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdkjwttoken()) {
    sdkjwttoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkjwttoken_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AuthWithJwtTokenParams)
}

void AuthWithJwtTokenParams::SharedCtor() {
  _cached_size_ = 0;
  sdkjwttoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthWithJwtTokenParams::~AuthWithJwtTokenParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AuthWithJwtTokenParams)
  SharedDtor();
}

void AuthWithJwtTokenParams::SharedDtor() {
  sdkjwttoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthWithJwtTokenParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AuthWithJwtTokenParams& AuthWithJwtTokenParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthWithJwtTokenParams* AuthWithJwtTokenParams::New(::google::protobuf::Arena* arena) const {
  AuthWithJwtTokenParams* n = new AuthWithJwtTokenParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthWithJwtTokenParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_sdkjwttoken()) {
    GOOGLE_DCHECK(!sdkjwttoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sdkjwttoken_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthWithJwtTokenParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sdkJwtToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkjwttoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AuthWithJwtTokenParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AuthWithJwtTokenParams)
  return false;
#undef DO_
}

void AuthWithJwtTokenParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sdkJwtToken = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sdkjwttoken(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AuthWithJwtTokenParams)
}

size_t AuthWithJwtTokenParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string sdkJwtToken = 1;
  if (has_sdkjwttoken()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdkjwttoken());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthWithJwtTokenParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthWithJwtTokenParams*>(&from));
}

void AuthWithJwtTokenParams::MergeFrom(const AuthWithJwtTokenParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sdkjwttoken()) {
    set_has_sdkjwttoken();
    sdkjwttoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkjwttoken_);
  }
}

void AuthWithJwtTokenParams::CopyFrom(const AuthWithJwtTokenParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AuthWithJwtTokenParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthWithJwtTokenParams::IsInitialized() const {
  return true;
}

void AuthWithJwtTokenParams::Swap(AuthWithJwtTokenParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthWithJwtTokenParams::InternalSwap(AuthWithJwtTokenParams* other) {
  using std::swap;
  sdkjwttoken_.Swap(&other->sdkjwttoken_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AuthWithJwtTokenParams::GetTypeName() const {
  return "com.electron.sdk.proto.AuthWithJwtTokenParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthWithJwtTokenParams

// optional string sdkJwtToken = 1;
bool AuthWithJwtTokenParams::has_sdkjwttoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthWithJwtTokenParams::set_has_sdkjwttoken() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthWithJwtTokenParams::clear_has_sdkjwttoken() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthWithJwtTokenParams::clear_sdkjwttoken() {
  sdkjwttoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdkjwttoken();
}
const ::std::string& AuthWithJwtTokenParams::sdkjwttoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  return sdkjwttoken_.GetNoArena();
}
void AuthWithJwtTokenParams::set_sdkjwttoken(const ::std::string& value) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
#if LANG_CXX11
void AuthWithJwtTokenParams::set_sdkjwttoken(::std::string&& value) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
#endif
void AuthWithJwtTokenParams::set_sdkjwttoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
void AuthWithJwtTokenParams::set_sdkjwttoken(const char* value, size_t size) {
  set_has_sdkjwttoken();
  sdkjwttoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}
::std::string* AuthWithJwtTokenParams::mutable_sdkjwttoken() {
  set_has_sdkjwttoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  return sdkjwttoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthWithJwtTokenParams::release_sdkjwttoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
  clear_has_sdkjwttoken();
  return sdkjwttoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthWithJwtTokenParams::set_allocated_sdkjwttoken(::std::string* sdkjwttoken) {
  if (sdkjwttoken != NULL) {
    set_has_sdkjwttoken();
  } else {
    clear_has_sdkjwttoken();
  }
  sdkjwttoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkjwttoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AuthWithJwtTokenParams.sdkJwtToken)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginParams::kUserNameFieldNumber;
const int LoginParams::kPswFieldNumber;
const int LoginParams::kRememberMeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginParams::LoginParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.LoginParams)
}
LoginParams::LoginParams(const LoginParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psw()) {
    psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
  }
  rememberme_ = from.rememberme_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.LoginParams)
}

void LoginParams::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rememberme_ = false;
}

LoginParams::~LoginParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.LoginParams)
  SharedDtor();
}

void LoginParams::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LoginParams& LoginParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginParams* LoginParams::New(::google::protobuf::Arena* arena) const {
  LoginParams* n = new LoginParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.LoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!psw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*psw_.UnsafeRawStringPointer())->clear();
    }
  }
  rememberme_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.LoginParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string psw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rememberMe = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_rememberme();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rememberme_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.LoginParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.LoginParams)
  return false;
#undef DO_
}

void LoginParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.LoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string psw = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->psw(), output);
  }

  // optional bool rememberMe = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rememberme(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.LoginParams)
}

size_t LoginParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.LoginParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string userName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string psw = 2;
    if (has_psw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psw());
    }

    // optional bool rememberMe = 3;
    if (has_rememberme()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginParams*>(&from));
}

void LoginParams::MergeFrom(const LoginParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.LoginParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_psw();
      psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
    }
    if (cached_has_bits & 0x00000004u) {
      rememberme_ = from.rememberme_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginParams::CopyFrom(const LoginParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.LoginParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginParams::IsInitialized() const {
  return true;
}

void LoginParams::Swap(LoginParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginParams::InternalSwap(LoginParams* other) {
  using std::swap;
  username_.Swap(&other->username_);
  psw_.Swap(&other->psw_);
  swap(rememberme_, other->rememberme_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string LoginParams::GetTypeName() const {
  return "com.electron.sdk.proto.LoginParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginParams

// optional string userName = 1;
bool LoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.userName)
  return username_.GetNoArena();
}
void LoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.userName)
}
#if LANG_CXX11
void LoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginParams.userName)
}
#endif
void LoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginParams.userName)
}
void LoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginParams.userName)
}
::std::string* LoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginParams.userName)
}

// optional string psw = 2;
bool LoginParams::has_psw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginParams::set_has_psw() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
const ::std::string& LoginParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.psw)
  return psw_.GetNoArena();
}
void LoginParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.psw)
}
#if LANG_CXX11
void LoginParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginParams.psw)
}
#endif
void LoginParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginParams.psw)
}
void LoginParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginParams.psw)
}
::std::string* LoginParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginParams.psw)
}

// optional bool rememberMe = 3;
bool LoginParams::has_rememberme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginParams::set_has_rememberme() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginParams::clear_has_rememberme() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginParams::clear_rememberme() {
  rememberme_ = false;
  clear_has_rememberme();
}
bool LoginParams::rememberme() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginParams.rememberMe)
  return rememberme_;
}
void LoginParams::set_rememberme(bool value) {
  set_has_rememberme();
  rememberme_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginParams.rememberMe)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginWithSSOTokenParams::kSsoTokenFieldNumber;
const int LoginWithSSOTokenParams::kRememberMeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginWithSSOTokenParams::LoginWithSSOTokenParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.LoginWithSSOTokenParams)
}
LoginWithSSOTokenParams::LoginWithSSOTokenParams(const LoginWithSSOTokenParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ssotoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ssotoken()) {
    ssotoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssotoken_);
  }
  rememberme_ = from.rememberme_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.LoginWithSSOTokenParams)
}

void LoginWithSSOTokenParams::SharedCtor() {
  _cached_size_ = 0;
  ssotoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rememberme_ = false;
}

LoginWithSSOTokenParams::~LoginWithSSOTokenParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.LoginWithSSOTokenParams)
  SharedDtor();
}

void LoginWithSSOTokenParams::SharedDtor() {
  ssotoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginWithSSOTokenParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LoginWithSSOTokenParams& LoginWithSSOTokenParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginWithSSOTokenParams* LoginWithSSOTokenParams::New(::google::protobuf::Arena* arena) const {
  LoginWithSSOTokenParams* n = new LoginWithSSOTokenParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginWithSSOTokenParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_ssotoken()) {
    GOOGLE_DCHECK(!ssotoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ssotoken_.UnsafeRawStringPointer())->clear();
  }
  rememberme_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginWithSSOTokenParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ssoToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssotoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rememberMe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rememberme();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rememberme_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.LoginWithSSOTokenParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.LoginWithSSOTokenParams)
  return false;
#undef DO_
}

void LoginWithSSOTokenParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ssoToken = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ssotoken(), output);
  }

  // optional bool rememberMe = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->rememberme(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.LoginWithSSOTokenParams)
}

size_t LoginWithSSOTokenParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string ssoToken = 1;
    if (has_ssotoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssotoken());
    }

    // optional bool rememberMe = 2;
    if (has_rememberme()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginWithSSOTokenParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginWithSSOTokenParams*>(&from));
}

void LoginWithSSOTokenParams::MergeFrom(const LoginWithSSOTokenParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ssotoken();
      ssotoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssotoken_);
    }
    if (cached_has_bits & 0x00000002u) {
      rememberme_ = from.rememberme_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginWithSSOTokenParams::CopyFrom(const LoginWithSSOTokenParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.LoginWithSSOTokenParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginWithSSOTokenParams::IsInitialized() const {
  return true;
}

void LoginWithSSOTokenParams::Swap(LoginWithSSOTokenParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginWithSSOTokenParams::InternalSwap(LoginWithSSOTokenParams* other) {
  using std::swap;
  ssotoken_.Swap(&other->ssotoken_);
  swap(rememberme_, other->rememberme_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string LoginWithSSOTokenParams::GetTypeName() const {
  return "com.electron.sdk.proto.LoginWithSSOTokenParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginWithSSOTokenParams

// optional string ssoToken = 1;
bool LoginWithSSOTokenParams::has_ssotoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginWithSSOTokenParams::set_has_ssotoken() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginWithSSOTokenParams::clear_has_ssotoken() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginWithSSOTokenParams::clear_ssotoken() {
  ssotoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssotoken();
}
const ::std::string& LoginWithSSOTokenParams::ssotoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  return ssotoken_.GetNoArena();
}
void LoginWithSSOTokenParams::set_ssotoken(const ::std::string& value) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
#if LANG_CXX11
void LoginWithSSOTokenParams::set_ssotoken(::std::string&& value) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
#endif
void LoginWithSSOTokenParams::set_ssotoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
void LoginWithSSOTokenParams::set_ssotoken(const char* value, size_t size) {
  set_has_ssotoken();
  ssotoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}
::std::string* LoginWithSSOTokenParams::mutable_ssotoken() {
  set_has_ssotoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  return ssotoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginWithSSOTokenParams::release_ssotoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
  clear_has_ssotoken();
  return ssotoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginWithSSOTokenParams::set_allocated_ssotoken(::std::string* ssotoken) {
  if (ssotoken != NULL) {
    set_has_ssotoken();
  } else {
    clear_has_ssotoken();
  }
  ssotoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssotoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.LoginWithSSOTokenParams.ssoToken)
}

// optional bool rememberMe = 2;
bool LoginWithSSOTokenParams::has_rememberme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginWithSSOTokenParams::set_has_rememberme() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginWithSSOTokenParams::clear_has_rememberme() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginWithSSOTokenParams::clear_rememberme() {
  rememberme_ = false;
  clear_has_rememberme();
}
bool LoginWithSSOTokenParams::rememberme() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LoginWithSSOTokenParams.rememberMe)
  return rememberme_;
}
void LoginWithSSOTokenParams::set_rememberme(bool value) {
  set_has_rememberme();
  rememberme_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LoginWithSSOTokenParams.rememberMe)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartMeetingParams::kMeetingNumberFieldNumber;
const int StartMeetingParams::kHDirectShareAppWndFieldNumber;
const int StartMeetingParams::kParticipantIDFieldNumber;
const int StartMeetingParams::kIsVideoOffFieldNumber;
const int StartMeetingParams::kIsAudioOffFieldNumber;
const int StartMeetingParams::kIsDirectShareDesktopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartMeetingParams::StartMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartMeetingParams)
}
StartMeetingParams::StartMeetingParams(const StartMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hdirectshareappwnd()) {
    hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
  }
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_participantid()) {
    participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
  }
  ::memcpy(&meetingnumber_, &from.meetingnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&isdirectsharedesktop_) -
    reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isdirectsharedesktop_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartMeetingParams)
}

void StartMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meetingnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isdirectsharedesktop_) -
      reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isdirectsharedesktop_));
}

StartMeetingParams::~StartMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartMeetingParams)
  SharedDtor();
}

void StartMeetingParams::SharedDtor() {
  hdirectshareappwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartMeetingParams& StartMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartMeetingParams* StartMeetingParams::New(::google::protobuf::Arena* arena) const {
  StartMeetingParams* n = new StartMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hdirectshareappwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hdirectshareappwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!participantid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*participantid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&meetingnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isdirectsharedesktop_) -
        reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isdirectsharedesktop_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hDirectShareAppWnd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdirectshareappwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string participantID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_participantid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isVideoOff = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_isvideooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvideooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAudioOff = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_isaudiooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isaudiooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isDirectShareDesktop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isdirectsharedesktop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdirectsharedesktop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartMeetingParams)
  return false;
#undef DO_
}

void StartMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  // optional string hDirectShareAppWnd = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hdirectshareappwnd(), output);
  }

  // optional string participantID = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->participantid(), output);
  }

  // optional bool isVideoOff = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isvideooff(), output);
  }

  // optional bool isAudioOff = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isaudiooff(), output);
  }

  // optional bool isDirectShareDesktop = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isdirectsharedesktop(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartMeetingParams)
}

size_t StartMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional string hDirectShareAppWnd = 2;
    if (has_hdirectshareappwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hdirectshareappwnd());
    }

    // optional string participantID = 3;
    if (has_participantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->participantid());
    }

    // optional uint64 meetingNumber = 1;
    if (has_meetingnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->meetingnumber());
    }

    // optional bool isVideoOff = 4;
    if (has_isvideooff()) {
      total_size += 1 + 1;
    }

    // optional bool isAudioOff = 5;
    if (has_isaudiooff()) {
      total_size += 1 + 1;
    }

    // optional bool isDirectShareDesktop = 6;
    if (has_isdirectsharedesktop()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartMeetingParams*>(&from));
}

void StartMeetingParams::MergeFrom(const StartMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hdirectshareappwnd();
      hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_participantid();
      participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
    }
    if (cached_has_bits & 0x00000004u) {
      meetingnumber_ = from.meetingnumber_;
    }
    if (cached_has_bits & 0x00000008u) {
      isvideooff_ = from.isvideooff_;
    }
    if (cached_has_bits & 0x00000010u) {
      isaudiooff_ = from.isaudiooff_;
    }
    if (cached_has_bits & 0x00000020u) {
      isdirectsharedesktop_ = from.isdirectsharedesktop_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartMeetingParams::CopyFrom(const StartMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMeetingParams::IsInitialized() const {
  return true;
}

void StartMeetingParams::Swap(StartMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartMeetingParams::InternalSwap(StartMeetingParams* other) {
  using std::swap;
  hdirectshareappwnd_.Swap(&other->hdirectshareappwnd_);
  participantid_.Swap(&other->participantid_);
  swap(meetingnumber_, other->meetingnumber_);
  swap(isvideooff_, other->isvideooff_);
  swap(isaudiooff_, other->isaudiooff_);
  swap(isdirectsharedesktop_, other->isdirectsharedesktop_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartMeetingParams

// optional uint64 meetingNumber = 1;
bool StartMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StartMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000004u;
}
void StartMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000004u;
}
void StartMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 StartMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.meetingNumber)
  return meetingnumber_;
}
void StartMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.meetingNumber)
}

// optional string hDirectShareAppWnd = 2;
bool StartMeetingParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartMeetingParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000001u;
}
void StartMeetingParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartMeetingParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
const ::std::string& StartMeetingParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
void StartMeetingParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
#if LANG_CXX11
void StartMeetingParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
#endif
void StartMeetingParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
void StartMeetingParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}
::std::string* StartMeetingParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartMeetingParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartMeetingParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMeetingParams.hDirectShareAppWnd)
}

// optional string participantID = 3;
bool StartMeetingParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StartMeetingParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000002u;
}
void StartMeetingParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000002u;
}
void StartMeetingParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
const ::std::string& StartMeetingParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.participantID)
  return participantid_.GetNoArena();
}
void StartMeetingParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.participantID)
}
#if LANG_CXX11
void StartMeetingParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMeetingParams.participantID)
}
#endif
void StartMeetingParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMeetingParams.participantID)
}
void StartMeetingParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMeetingParams.participantID)
}
::std::string* StartMeetingParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMeetingParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartMeetingParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMeetingParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartMeetingParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMeetingParams.participantID)
}

// optional bool isVideoOff = 4;
bool StartMeetingParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StartMeetingParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000008u;
}
void StartMeetingParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000008u;
}
void StartMeetingParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
bool StartMeetingParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isVideoOff)
  return isvideooff_;
}
void StartMeetingParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isVideoOff)
}

// optional bool isAudioOff = 5;
bool StartMeetingParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StartMeetingParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000010u;
}
void StartMeetingParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000010u;
}
void StartMeetingParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
bool StartMeetingParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isAudioOff)
  return isaudiooff_;
}
void StartMeetingParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isAudioOff)
}

// optional bool isDirectShareDesktop = 6;
bool StartMeetingParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void StartMeetingParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000020u;
}
void StartMeetingParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000020u;
}
void StartMeetingParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
bool StartMeetingParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMeetingParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
void StartMeetingParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMeetingParams.isDirectShareDesktop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartWithoutLoginParams::kUserIDFieldNumber;
const int StartWithoutLoginParams::kUserZAKFieldNumber;
const int StartWithoutLoginParams::kUserNameFieldNumber;
const int StartWithoutLoginParams::kNodeUserTypeFieldNumber;
const int StartWithoutLoginParams::kMeetingNumberFieldNumber;
const int StartWithoutLoginParams::kSdkVanityIDFieldNumber;
const int StartWithoutLoginParams::kHDirectShareAppWndFieldNumber;
const int StartWithoutLoginParams::kParticipantIDFieldNumber;
const int StartWithoutLoginParams::kIsDirectShareDesktopFieldNumber;
const int StartWithoutLoginParams::kIsVideoOffFieldNumber;
const int StartWithoutLoginParams::kIsAudioOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartWithoutLoginParams::StartWithoutLoginParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartWithoutLoginParams)
}
StartWithoutLoginParams::StartWithoutLoginParams(const StartWithoutLoginParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  userzak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userzak()) {
    userzak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userzak_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  sdkvanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdkvanityid()) {
    sdkvanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkvanityid_);
  }
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hdirectshareappwnd()) {
    hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
  }
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_participantid()) {
    participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
  }
  ::memcpy(&meetingnumber_, &from.meetingnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&isaudiooff_) -
    reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isaudiooff_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartWithoutLoginParams)
}

void StartWithoutLoginParams::SharedCtor() {
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userzak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkvanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meetingnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isaudiooff_) -
      reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isaudiooff_));
}

StartWithoutLoginParams::~StartWithoutLoginParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartWithoutLoginParams)
  SharedDtor();
}

void StartWithoutLoginParams::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userzak_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkvanityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartWithoutLoginParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartWithoutLoginParams& StartWithoutLoginParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartWithoutLoginParams* StartWithoutLoginParams::New(::google::protobuf::Arena* arena) const {
  StartWithoutLoginParams* n = new StartWithoutLoginParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartWithoutLoginParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartWithoutLoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!userid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*userid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!userzak_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*userzak_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!sdkvanityid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sdkvanityid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!hdirectshareappwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hdirectshareappwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!participantid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*participantid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&meetingnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nodeusertype_) -
        reinterpret_cast<char*>(&meetingnumber_)) + sizeof(nodeusertype_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&isdirectsharedesktop_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isaudiooff_) -
        reinterpret_cast<char*>(&isdirectsharedesktop_)) + sizeof(isaudiooff_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartWithoutLoginParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartWithoutLoginParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userZAK = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userzak()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nodeUserType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_nodeusertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeusertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 meetingNumber = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sdkVanityID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkvanityid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hDirectShareAppWnd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdirectshareappwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string participantID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_participantid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isDirectShareDesktop = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_isdirectsharedesktop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdirectsharedesktop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isVideoOff = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isvideooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvideooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAudioOff = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_isaudiooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isaudiooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartWithoutLoginParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartWithoutLoginParams)
  return false;
#undef DO_
}

void StartWithoutLoginParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartWithoutLoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // optional string userZAK = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userzak(), output);
  }

  // optional string userName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional int32 nodeUserType = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nodeusertype(), output);
  }

  // optional uint64 meetingNumber = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->meetingnumber(), output);
  }

  // optional string sdkVanityID = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sdkvanityid(), output);
  }

  // optional string hDirectShareAppWnd = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->hdirectshareappwnd(), output);
  }

  // optional string participantID = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->participantid(), output);
  }

  // optional bool isDirectShareDesktop = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isdirectsharedesktop(), output);
  }

  // optional bool isVideoOff = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isvideooff(), output);
  }

  // optional bool isAudioOff = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->isaudiooff(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartWithoutLoginParams)
}

size_t StartWithoutLoginParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartWithoutLoginParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string userID = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

    // optional string userZAK = 2;
    if (has_userzak()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userzak());
    }

    // optional string userName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string sdkVanityID = 6;
    if (has_sdkvanityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdkvanityid());
    }

    // optional string hDirectShareAppWnd = 7;
    if (has_hdirectshareappwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hdirectshareappwnd());
    }

    // optional string participantID = 8;
    if (has_participantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->participantid());
    }

    // optional uint64 meetingNumber = 5;
    if (has_meetingnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->meetingnumber());
    }

    // optional int32 nodeUserType = 4;
    if (has_nodeusertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeusertype());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool isDirectShareDesktop = 9;
    if (has_isdirectsharedesktop()) {
      total_size += 1 + 1;
    }

    // optional bool isVideoOff = 10;
    if (has_isvideooff()) {
      total_size += 1 + 1;
    }

    // optional bool isAudioOff = 11;
    if (has_isaudiooff()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartWithoutLoginParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartWithoutLoginParams*>(&from));
}

void StartWithoutLoginParams::MergeFrom(const StartWithoutLoginParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartWithoutLoginParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_userzak();
      userzak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userzak_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sdkvanityid();
      sdkvanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkvanityid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_hdirectshareappwnd();
      hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_participantid();
      participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
    }
    if (cached_has_bits & 0x00000040u) {
      meetingnumber_ = from.meetingnumber_;
    }
    if (cached_has_bits & 0x00000080u) {
      nodeusertype_ = from.nodeusertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      isdirectsharedesktop_ = from.isdirectsharedesktop_;
    }
    if (cached_has_bits & 0x00000200u) {
      isvideooff_ = from.isvideooff_;
    }
    if (cached_has_bits & 0x00000400u) {
      isaudiooff_ = from.isaudiooff_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartWithoutLoginParams::CopyFrom(const StartWithoutLoginParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartWithoutLoginParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartWithoutLoginParams::IsInitialized() const {
  return true;
}

void StartWithoutLoginParams::Swap(StartWithoutLoginParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartWithoutLoginParams::InternalSwap(StartWithoutLoginParams* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  userzak_.Swap(&other->userzak_);
  username_.Swap(&other->username_);
  sdkvanityid_.Swap(&other->sdkvanityid_);
  hdirectshareappwnd_.Swap(&other->hdirectshareappwnd_);
  participantid_.Swap(&other->participantid_);
  swap(meetingnumber_, other->meetingnumber_);
  swap(nodeusertype_, other->nodeusertype_);
  swap(isdirectsharedesktop_, other->isdirectsharedesktop_);
  swap(isvideooff_, other->isvideooff_);
  swap(isaudiooff_, other->isaudiooff_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartWithoutLoginParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartWithoutLoginParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartWithoutLoginParams

// optional string userID = 1;
bool StartWithoutLoginParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartWithoutLoginParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void StartWithoutLoginParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartWithoutLoginParams::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
const ::std::string& StartWithoutLoginParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  return userid_.GetNoArena();
}
void StartWithoutLoginParams::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
#endif
void StartWithoutLoginParams::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
void StartWithoutLoginParams::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}
::std::string* StartWithoutLoginParams::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_userid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userID)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userID)
}

// optional string userZAK = 2;
bool StartWithoutLoginParams::has_userzak() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StartWithoutLoginParams::set_has_userzak() {
  _has_bits_[0] |= 0x00000002u;
}
void StartWithoutLoginParams::clear_has_userzak() {
  _has_bits_[0] &= ~0x00000002u;
}
void StartWithoutLoginParams::clear_userzak() {
  userzak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userzak();
}
const ::std::string& StartWithoutLoginParams::userzak() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  return userzak_.GetNoArena();
}
void StartWithoutLoginParams::set_userzak(const ::std::string& value) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_userzak(::std::string&& value) {
  set_has_userzak();
  userzak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
#endif
void StartWithoutLoginParams::set_userzak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
void StartWithoutLoginParams::set_userzak(const char* value, size_t size) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}
::std::string* StartWithoutLoginParams::mutable_userzak() {
  set_has_userzak();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  return userzak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_userzak() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
  clear_has_userzak();
  return userzak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_userzak(::std::string* userzak) {
  if (userzak != NULL) {
    set_has_userzak();
  } else {
    clear_has_userzak();
  }
  userzak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userzak);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userZAK)
}

// optional string userName = 3;
bool StartWithoutLoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StartWithoutLoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
void StartWithoutLoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
void StartWithoutLoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& StartWithoutLoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  return username_.GetNoArena();
}
void StartWithoutLoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
#endif
void StartWithoutLoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
void StartWithoutLoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}
::std::string* StartWithoutLoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.userName)
}

// optional int32 nodeUserType = 4;
bool StartWithoutLoginParams::has_nodeusertype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void StartWithoutLoginParams::set_has_nodeusertype() {
  _has_bits_[0] |= 0x00000080u;
}
void StartWithoutLoginParams::clear_has_nodeusertype() {
  _has_bits_[0] &= ~0x00000080u;
}
void StartWithoutLoginParams::clear_nodeusertype() {
  nodeusertype_ = 0;
  clear_has_nodeusertype();
}
::google::protobuf::int32 StartWithoutLoginParams::nodeusertype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.nodeUserType)
  return nodeusertype_;
}
void StartWithoutLoginParams::set_nodeusertype(::google::protobuf::int32 value) {
  set_has_nodeusertype();
  nodeusertype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.nodeUserType)
}

// optional uint64 meetingNumber = 5;
bool StartWithoutLoginParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void StartWithoutLoginParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000040u;
}
void StartWithoutLoginParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
void StartWithoutLoginParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 StartWithoutLoginParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.meetingNumber)
  return meetingnumber_;
}
void StartWithoutLoginParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.meetingNumber)
}

// optional string sdkVanityID = 6;
bool StartWithoutLoginParams::has_sdkvanityid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StartWithoutLoginParams::set_has_sdkvanityid() {
  _has_bits_[0] |= 0x00000008u;
}
void StartWithoutLoginParams::clear_has_sdkvanityid() {
  _has_bits_[0] &= ~0x00000008u;
}
void StartWithoutLoginParams::clear_sdkvanityid() {
  sdkvanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdkvanityid();
}
const ::std::string& StartWithoutLoginParams::sdkvanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  return sdkvanityid_.GetNoArena();
}
void StartWithoutLoginParams::set_sdkvanityid(const ::std::string& value) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_sdkvanityid(::std::string&& value) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
#endif
void StartWithoutLoginParams::set_sdkvanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
void StartWithoutLoginParams::set_sdkvanityid(const char* value, size_t size) {
  set_has_sdkvanityid();
  sdkvanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}
::std::string* StartWithoutLoginParams::mutable_sdkvanityid() {
  set_has_sdkvanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  return sdkvanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_sdkvanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
  clear_has_sdkvanityid();
  return sdkvanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_sdkvanityid(::std::string* sdkvanityid) {
  if (sdkvanityid != NULL) {
    set_has_sdkvanityid();
  } else {
    clear_has_sdkvanityid();
  }
  sdkvanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkvanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.sdkVanityID)
}

// optional string hDirectShareAppWnd = 7;
bool StartWithoutLoginParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StartWithoutLoginParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000010u;
}
void StartWithoutLoginParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000010u;
}
void StartWithoutLoginParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
const ::std::string& StartWithoutLoginParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
void StartWithoutLoginParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
#endif
void StartWithoutLoginParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
void StartWithoutLoginParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}
::std::string* StartWithoutLoginParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.hDirectShareAppWnd)
}

// optional string participantID = 8;
bool StartWithoutLoginParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void StartWithoutLoginParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000020u;
}
void StartWithoutLoginParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000020u;
}
void StartWithoutLoginParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
const ::std::string& StartWithoutLoginParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  return participantid_.GetNoArena();
}
void StartWithoutLoginParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
#if LANG_CXX11
void StartWithoutLoginParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
#endif
void StartWithoutLoginParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
void StartWithoutLoginParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}
::std::string* StartWithoutLoginParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartWithoutLoginParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartWithoutLoginParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartWithoutLoginParams.participantID)
}

// optional bool isDirectShareDesktop = 9;
bool StartWithoutLoginParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void StartWithoutLoginParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000100u;
}
void StartWithoutLoginParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000100u;
}
void StartWithoutLoginParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
bool StartWithoutLoginParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
void StartWithoutLoginParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isDirectShareDesktop)
}

// optional bool isVideoOff = 10;
bool StartWithoutLoginParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void StartWithoutLoginParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000200u;
}
void StartWithoutLoginParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000200u;
}
void StartWithoutLoginParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
bool StartWithoutLoginParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isVideoOff)
  return isvideooff_;
}
void StartWithoutLoginParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isVideoOff)
}

// optional bool isAudioOff = 11;
bool StartWithoutLoginParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void StartWithoutLoginParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000400u;
}
void StartWithoutLoginParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000400u;
}
void StartWithoutLoginParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
bool StartWithoutLoginParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartWithoutLoginParams.isAudioOff)
  return isaudiooff_;
}
void StartWithoutLoginParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartWithoutLoginParams.isAudioOff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinMeetingParams::kMeetingNumberFieldNumber;
const int JoinMeetingParams::kVanityIDFieldNumber;
const int JoinMeetingParams::kUserNameFieldNumber;
const int JoinMeetingParams::kPswFieldNumber;
const int JoinMeetingParams::kHDirectShareAppWndFieldNumber;
const int JoinMeetingParams::kParticipantIDFieldNumber;
const int JoinMeetingParams::kWebinarTokenFieldNumber;
const int JoinMeetingParams::kIsVideoOffFieldNumber;
const int JoinMeetingParams::kIsAudioOffFieldNumber;
const int JoinMeetingParams::kIsDirectShareDesktopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinMeetingParams::JoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.JoinMeetingParams)
}
JoinMeetingParams::JoinMeetingParams(const JoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vanityid()) {
    vanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanityid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psw()) {
    psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
  }
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hdirectshareappwnd()) {
    hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
  }
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_participantid()) {
    participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
  }
  webinartoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_webinartoken()) {
    webinartoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webinartoken_);
  }
  ::memcpy(&meetingnumber_, &from.meetingnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&isdirectsharedesktop_) -
    reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isdirectsharedesktop_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.JoinMeetingParams)
}

void JoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  vanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webinartoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meetingnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isdirectsharedesktop_) -
      reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isdirectsharedesktop_));
}

JoinMeetingParams::~JoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.JoinMeetingParams)
  SharedDtor();
}

void JoinMeetingParams::SharedDtor() {
  vanityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webinartoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const JoinMeetingParams& JoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinMeetingParams* JoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  JoinMeetingParams* n = new JoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.JoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!vanityid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vanityid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!psw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*psw_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!hdirectshareappwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hdirectshareappwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!participantid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*participantid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!webinartoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*webinartoken_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&meetingnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isvideooff_) -
        reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isvideooff_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&isaudiooff_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isdirectsharedesktop_) -
        reinterpret_cast<char*>(&isaudiooff_)) + sizeof(isdirectsharedesktop_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.JoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vanityID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vanityid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string psw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hDirectShareAppWnd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdirectshareappwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string participantID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_participantid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string webinarToken = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webinartoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isVideoOff = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_isvideooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvideooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAudioOff = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_isaudiooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isaudiooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isDirectShareDesktop = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isdirectsharedesktop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdirectsharedesktop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.JoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.JoinMeetingParams)
  return false;
#undef DO_
}

void JoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.JoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  // optional string vanityID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vanityid(), output);
  }

  // optional string userName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional string psw = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->psw(), output);
  }

  // optional string hDirectShareAppWnd = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hdirectshareappwnd(), output);
  }

  // optional string participantID = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->participantid(), output);
  }

  // optional string webinarToken = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->webinartoken(), output);
  }

  // optional bool isVideoOff = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isvideooff(), output);
  }

  // optional bool isAudioOff = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isaudiooff(), output);
  }

  // optional bool isDirectShareDesktop = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isdirectsharedesktop(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.JoinMeetingParams)
}

size_t JoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.JoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string vanityID = 2;
    if (has_vanityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vanityid());
    }

    // optional string userName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string psw = 4;
    if (has_psw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psw());
    }

    // optional string hDirectShareAppWnd = 5;
    if (has_hdirectshareappwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hdirectshareappwnd());
    }

    // optional string participantID = 6;
    if (has_participantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->participantid());
    }

    // optional string webinarToken = 7;
    if (has_webinartoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webinartoken());
    }

    // optional uint64 meetingNumber = 1;
    if (has_meetingnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->meetingnumber());
    }

    // optional bool isVideoOff = 8;
    if (has_isvideooff()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool isAudioOff = 9;
    if (has_isaudiooff()) {
      total_size += 1 + 1;
    }

    // optional bool isDirectShareDesktop = 10;
    if (has_isdirectsharedesktop()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const JoinMeetingParams*>(&from));
}

void JoinMeetingParams::MergeFrom(const JoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.JoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vanityid();
      vanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanityid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_psw();
      psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hdirectshareappwnd();
      hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_participantid();
      participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_webinartoken();
      webinartoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webinartoken_);
    }
    if (cached_has_bits & 0x00000040u) {
      meetingnumber_ = from.meetingnumber_;
    }
    if (cached_has_bits & 0x00000080u) {
      isvideooff_ = from.isvideooff_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      isaudiooff_ = from.isaudiooff_;
    }
    if (cached_has_bits & 0x00000200u) {
      isdirectsharedesktop_ = from.isdirectsharedesktop_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JoinMeetingParams::CopyFrom(const JoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.JoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinMeetingParams::IsInitialized() const {
  return true;
}

void JoinMeetingParams::Swap(JoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinMeetingParams::InternalSwap(JoinMeetingParams* other) {
  using std::swap;
  vanityid_.Swap(&other->vanityid_);
  username_.Swap(&other->username_);
  psw_.Swap(&other->psw_);
  hdirectshareappwnd_.Swap(&other->hdirectshareappwnd_);
  participantid_.Swap(&other->participantid_);
  webinartoken_.Swap(&other->webinartoken_);
  swap(meetingnumber_, other->meetingnumber_);
  swap(isvideooff_, other->isvideooff_);
  swap(isaudiooff_, other->isaudiooff_);
  swap(isdirectsharedesktop_, other->isdirectsharedesktop_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string JoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.JoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinMeetingParams

// optional uint64 meetingNumber = 1;
bool JoinMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void JoinMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000040u;
}
void JoinMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
void JoinMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 JoinMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.meetingNumber)
  return meetingnumber_;
}
void JoinMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.meetingNumber)
}

// optional string vanityID = 2;
bool JoinMeetingParams::has_vanityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinMeetingParams::set_has_vanityid() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinMeetingParams::clear_has_vanityid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinMeetingParams::clear_vanityid() {
  vanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vanityid();
}
const ::std::string& JoinMeetingParams::vanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  return vanityid_.GetNoArena();
}
void JoinMeetingParams::set_vanityid(const ::std::string& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
#if LANG_CXX11
void JoinMeetingParams::set_vanityid(::std::string&& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
#endif
void JoinMeetingParams::set_vanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
void JoinMeetingParams::set_vanityid(const char* value, size_t size) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}
::std::string* JoinMeetingParams::mutable_vanityid() {
  set_has_vanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  return vanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_vanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.vanityID)
  clear_has_vanityid();
  return vanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_vanityid(::std::string* vanityid) {
  if (vanityid != NULL) {
    set_has_vanityid();
  } else {
    clear_has_vanityid();
  }
  vanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.vanityID)
}

// optional string userName = 3;
bool JoinMeetingParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JoinMeetingParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void JoinMeetingParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void JoinMeetingParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& JoinMeetingParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.userName)
  return username_.GetNoArena();
}
void JoinMeetingParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.userName)
}
#if LANG_CXX11
void JoinMeetingParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.userName)
}
#endif
void JoinMeetingParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.userName)
}
void JoinMeetingParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.userName)
}
::std::string* JoinMeetingParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.userName)
}

// optional string psw = 4;
bool JoinMeetingParams::has_psw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JoinMeetingParams::set_has_psw() {
  _has_bits_[0] |= 0x00000004u;
}
void JoinMeetingParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000004u;
}
void JoinMeetingParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
const ::std::string& JoinMeetingParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.psw)
  return psw_.GetNoArena();
}
void JoinMeetingParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.psw)
}
#if LANG_CXX11
void JoinMeetingParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.psw)
}
#endif
void JoinMeetingParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.psw)
}
void JoinMeetingParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.psw)
}
::std::string* JoinMeetingParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.psw)
}

// optional string hDirectShareAppWnd = 5;
bool JoinMeetingParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JoinMeetingParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000008u;
}
void JoinMeetingParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
void JoinMeetingParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
const ::std::string& JoinMeetingParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
void JoinMeetingParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
#if LANG_CXX11
void JoinMeetingParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
#endif
void JoinMeetingParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
void JoinMeetingParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}
::std::string* JoinMeetingParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.hDirectShareAppWnd)
}

// optional string participantID = 6;
bool JoinMeetingParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void JoinMeetingParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000010u;
}
void JoinMeetingParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000010u;
}
void JoinMeetingParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
const ::std::string& JoinMeetingParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.participantID)
  return participantid_.GetNoArena();
}
void JoinMeetingParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
#if LANG_CXX11
void JoinMeetingParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
#endif
void JoinMeetingParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
void JoinMeetingParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.participantID)
}
::std::string* JoinMeetingParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.participantID)
}

// optional string webinarToken = 7;
bool JoinMeetingParams::has_webinartoken() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void JoinMeetingParams::set_has_webinartoken() {
  _has_bits_[0] |= 0x00000020u;
}
void JoinMeetingParams::clear_has_webinartoken() {
  _has_bits_[0] &= ~0x00000020u;
}
void JoinMeetingParams::clear_webinartoken() {
  webinartoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webinartoken();
}
const ::std::string& JoinMeetingParams::webinartoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  return webinartoken_.GetNoArena();
}
void JoinMeetingParams::set_webinartoken(const ::std::string& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
#if LANG_CXX11
void JoinMeetingParams::set_webinartoken(::std::string&& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
#endif
void JoinMeetingParams::set_webinartoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
void JoinMeetingParams::set_webinartoken(const char* value, size_t size) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}
::std::string* JoinMeetingParams::mutable_webinartoken() {
  set_has_webinartoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  return webinartoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinMeetingParams::release_webinartoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
  clear_has_webinartoken();
  return webinartoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinMeetingParams::set_allocated_webinartoken(::std::string* webinartoken) {
  if (webinartoken != NULL) {
    set_has_webinartoken();
  } else {
    clear_has_webinartoken();
  }
  webinartoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webinartoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinMeetingParams.webinarToken)
}

// optional bool isVideoOff = 8;
bool JoinMeetingParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void JoinMeetingParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000080u;
}
void JoinMeetingParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000080u;
}
void JoinMeetingParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
bool JoinMeetingParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isVideoOff)
  return isvideooff_;
}
void JoinMeetingParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isVideoOff)
}

// optional bool isAudioOff = 9;
bool JoinMeetingParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void JoinMeetingParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000100u;
}
void JoinMeetingParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000100u;
}
void JoinMeetingParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
bool JoinMeetingParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isAudioOff)
  return isaudiooff_;
}
void JoinMeetingParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isAudioOff)
}

// optional bool isDirectShareDesktop = 10;
bool JoinMeetingParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void JoinMeetingParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000200u;
}
void JoinMeetingParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000200u;
}
void JoinMeetingParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
bool JoinMeetingParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinMeetingParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
void JoinMeetingParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinMeetingParams.isDirectShareDesktop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinWithoutLoginParams::kMeetingNumberFieldNumber;
const int JoinWithoutLoginParams::kVanityIDFieldNumber;
const int JoinWithoutLoginParams::kUserNameFieldNumber;
const int JoinWithoutLoginParams::kPswFieldNumber;
const int JoinWithoutLoginParams::kHDirectShareAppWndFieldNumber;
const int JoinWithoutLoginParams::kUserZAKFieldNumber;
const int JoinWithoutLoginParams::kParticipantIDFieldNumber;
const int JoinWithoutLoginParams::kWebinarTokenFieldNumber;
const int JoinWithoutLoginParams::kIsDirectShareDesktopFieldNumber;
const int JoinWithoutLoginParams::kIsVideoOffFieldNumber;
const int JoinWithoutLoginParams::kIsAudioOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinWithoutLoginParams::JoinWithoutLoginParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.JoinWithoutLoginParams)
}
JoinWithoutLoginParams::JoinWithoutLoginParams(const JoinWithoutLoginParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vanityid()) {
    vanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanityid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psw()) {
    psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
  }
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hdirectshareappwnd()) {
    hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
  }
  userzak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userzak()) {
    userzak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userzak_);
  }
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_participantid()) {
    participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
  }
  webinartoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_webinartoken()) {
    webinartoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webinartoken_);
  }
  ::memcpy(&meetingnumber_, &from.meetingnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&isaudiooff_) -
    reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isaudiooff_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.JoinWithoutLoginParams)
}

void JoinWithoutLoginParams::SharedCtor() {
  _cached_size_ = 0;
  vanityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userzak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webinartoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meetingnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isaudiooff_) -
      reinterpret_cast<char*>(&meetingnumber_)) + sizeof(isaudiooff_));
}

JoinWithoutLoginParams::~JoinWithoutLoginParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.JoinWithoutLoginParams)
  SharedDtor();
}

void JoinWithoutLoginParams::SharedDtor() {
  vanityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdirectshareappwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userzak_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  participantid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webinartoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinWithoutLoginParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const JoinWithoutLoginParams& JoinWithoutLoginParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinWithoutLoginParams* JoinWithoutLoginParams::New(::google::protobuf::Arena* arena) const {
  JoinWithoutLoginParams* n = new JoinWithoutLoginParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinWithoutLoginParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!vanityid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vanityid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!psw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*psw_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!hdirectshareappwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hdirectshareappwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!userzak_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*userzak_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!participantid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*participantid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!webinartoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*webinartoken_.UnsafeRawStringPointer())->clear();
    }
  }
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  if (cached_has_bits & 1792u) {
    ::memset(&isdirectsharedesktop_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isaudiooff_) -
        reinterpret_cast<char*>(&isdirectsharedesktop_)) + sizeof(isaudiooff_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinWithoutLoginParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vanityID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vanityid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string psw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hDirectShareAppWnd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdirectshareappwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userZAK = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userzak()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string participantID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_participantid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string webinarToken = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webinartoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isDirectShareDesktop = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_isdirectsharedesktop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdirectsharedesktop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isVideoOff = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isvideooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvideooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAudioOff = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_isaudiooff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isaudiooff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.JoinWithoutLoginParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.JoinWithoutLoginParams)
  return false;
#undef DO_
}

void JoinWithoutLoginParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  // optional string vanityID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vanityid(), output);
  }

  // optional string userName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional string psw = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->psw(), output);
  }

  // optional string hDirectShareAppWnd = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hdirectshareappwnd(), output);
  }

  // optional string userZAK = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->userzak(), output);
  }

  // optional string participantID = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->participantid(), output);
  }

  // optional string webinarToken = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->webinartoken(), output);
  }

  // optional bool isDirectShareDesktop = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isdirectsharedesktop(), output);
  }

  // optional bool isVideoOff = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isvideooff(), output);
  }

  // optional bool isAudioOff = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->isaudiooff(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.JoinWithoutLoginParams)
}

size_t JoinWithoutLoginParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string vanityID = 2;
    if (has_vanityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vanityid());
    }

    // optional string userName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string psw = 4;
    if (has_psw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psw());
    }

    // optional string hDirectShareAppWnd = 5;
    if (has_hdirectshareappwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hdirectshareappwnd());
    }

    // optional string userZAK = 6;
    if (has_userzak()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userzak());
    }

    // optional string participantID = 7;
    if (has_participantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->participantid());
    }

    // optional string webinarToken = 8;
    if (has_webinartoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webinartoken());
    }

    // optional uint64 meetingNumber = 1;
    if (has_meetingnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->meetingnumber());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool isDirectShareDesktop = 9;
    if (has_isdirectsharedesktop()) {
      total_size += 1 + 1;
    }

    // optional bool isVideoOff = 10;
    if (has_isvideooff()) {
      total_size += 1 + 1;
    }

    // optional bool isAudioOff = 11;
    if (has_isaudiooff()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinWithoutLoginParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const JoinWithoutLoginParams*>(&from));
}

void JoinWithoutLoginParams::MergeFrom(const JoinWithoutLoginParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vanityid();
      vanityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanityid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_psw();
      psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hdirectshareappwnd();
      hdirectshareappwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdirectshareappwnd_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_userzak();
      userzak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userzak_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_participantid();
      participantid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.participantid_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_webinartoken();
      webinartoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webinartoken_);
    }
    if (cached_has_bits & 0x00000080u) {
      meetingnumber_ = from.meetingnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      isdirectsharedesktop_ = from.isdirectsharedesktop_;
    }
    if (cached_has_bits & 0x00000200u) {
      isvideooff_ = from.isvideooff_;
    }
    if (cached_has_bits & 0x00000400u) {
      isaudiooff_ = from.isaudiooff_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JoinWithoutLoginParams::CopyFrom(const JoinWithoutLoginParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.JoinWithoutLoginParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinWithoutLoginParams::IsInitialized() const {
  return true;
}

void JoinWithoutLoginParams::Swap(JoinWithoutLoginParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinWithoutLoginParams::InternalSwap(JoinWithoutLoginParams* other) {
  using std::swap;
  vanityid_.Swap(&other->vanityid_);
  username_.Swap(&other->username_);
  psw_.Swap(&other->psw_);
  hdirectshareappwnd_.Swap(&other->hdirectshareappwnd_);
  userzak_.Swap(&other->userzak_);
  participantid_.Swap(&other->participantid_);
  webinartoken_.Swap(&other->webinartoken_);
  swap(meetingnumber_, other->meetingnumber_);
  swap(isdirectsharedesktop_, other->isdirectsharedesktop_);
  swap(isvideooff_, other->isvideooff_);
  swap(isaudiooff_, other->isaudiooff_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string JoinWithoutLoginParams::GetTypeName() const {
  return "com.electron.sdk.proto.JoinWithoutLoginParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinWithoutLoginParams

// optional uint64 meetingNumber = 1;
bool JoinWithoutLoginParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void JoinWithoutLoginParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000080u;
}
void JoinWithoutLoginParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000080u;
}
void JoinWithoutLoginParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 JoinWithoutLoginParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.meetingNumber)
  return meetingnumber_;
}
void JoinWithoutLoginParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.meetingNumber)
}

// optional string vanityID = 2;
bool JoinWithoutLoginParams::has_vanityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinWithoutLoginParams::set_has_vanityid() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinWithoutLoginParams::clear_has_vanityid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinWithoutLoginParams::clear_vanityid() {
  vanityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vanityid();
}
const ::std::string& JoinWithoutLoginParams::vanityid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  return vanityid_.GetNoArena();
}
void JoinWithoutLoginParams::set_vanityid(const ::std::string& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_vanityid(::std::string&& value) {
  set_has_vanityid();
  vanityid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
#endif
void JoinWithoutLoginParams::set_vanityid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
void JoinWithoutLoginParams::set_vanityid(const char* value, size_t size) {
  set_has_vanityid();
  vanityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}
::std::string* JoinWithoutLoginParams::mutable_vanityid() {
  set_has_vanityid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  return vanityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_vanityid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
  clear_has_vanityid();
  return vanityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_vanityid(::std::string* vanityid) {
  if (vanityid != NULL) {
    set_has_vanityid();
  } else {
    clear_has_vanityid();
  }
  vanityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vanityid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.vanityID)
}

// optional string userName = 3;
bool JoinWithoutLoginParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JoinWithoutLoginParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void JoinWithoutLoginParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void JoinWithoutLoginParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& JoinWithoutLoginParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  return username_.GetNoArena();
}
void JoinWithoutLoginParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
#endif
void JoinWithoutLoginParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
void JoinWithoutLoginParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}
::std::string* JoinWithoutLoginParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.userName)
}

// optional string psw = 4;
bool JoinWithoutLoginParams::has_psw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JoinWithoutLoginParams::set_has_psw() {
  _has_bits_[0] |= 0x00000004u;
}
void JoinWithoutLoginParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000004u;
}
void JoinWithoutLoginParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
const ::std::string& JoinWithoutLoginParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  return psw_.GetNoArena();
}
void JoinWithoutLoginParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
#endif
void JoinWithoutLoginParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
void JoinWithoutLoginParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}
::std::string* JoinWithoutLoginParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.psw)
}

// optional string hDirectShareAppWnd = 5;
bool JoinWithoutLoginParams::has_hdirectshareappwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JoinWithoutLoginParams::set_has_hdirectshareappwnd() {
  _has_bits_[0] |= 0x00000008u;
}
void JoinWithoutLoginParams::clear_has_hdirectshareappwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
void JoinWithoutLoginParams::clear_hdirectshareappwnd() {
  hdirectshareappwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hdirectshareappwnd();
}
const ::std::string& JoinWithoutLoginParams::hdirectshareappwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.GetNoArena();
}
void JoinWithoutLoginParams::set_hdirectshareappwnd(const ::std::string& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_hdirectshareappwnd(::std::string&& value) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
#endif
void JoinWithoutLoginParams::set_hdirectshareappwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
void JoinWithoutLoginParams::set_hdirectshareappwnd(const char* value, size_t size) {
  set_has_hdirectshareappwnd();
  hdirectshareappwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}
::std::string* JoinWithoutLoginParams::mutable_hdirectshareappwnd() {
  set_has_hdirectshareappwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  return hdirectshareappwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_hdirectshareappwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
  clear_has_hdirectshareappwnd();
  return hdirectshareappwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_hdirectshareappwnd(::std::string* hdirectshareappwnd) {
  if (hdirectshareappwnd != NULL) {
    set_has_hdirectshareappwnd();
  } else {
    clear_has_hdirectshareappwnd();
  }
  hdirectshareappwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hdirectshareappwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.hDirectShareAppWnd)
}

// optional string userZAK = 6;
bool JoinWithoutLoginParams::has_userzak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void JoinWithoutLoginParams::set_has_userzak() {
  _has_bits_[0] |= 0x00000010u;
}
void JoinWithoutLoginParams::clear_has_userzak() {
  _has_bits_[0] &= ~0x00000010u;
}
void JoinWithoutLoginParams::clear_userzak() {
  userzak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userzak();
}
const ::std::string& JoinWithoutLoginParams::userzak() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  return userzak_.GetNoArena();
}
void JoinWithoutLoginParams::set_userzak(const ::std::string& value) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_userzak(::std::string&& value) {
  set_has_userzak();
  userzak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
#endif
void JoinWithoutLoginParams::set_userzak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
void JoinWithoutLoginParams::set_userzak(const char* value, size_t size) {
  set_has_userzak();
  userzak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}
::std::string* JoinWithoutLoginParams::mutable_userzak() {
  set_has_userzak();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  return userzak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_userzak() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
  clear_has_userzak();
  return userzak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_userzak(::std::string* userzak) {
  if (userzak != NULL) {
    set_has_userzak();
  } else {
    clear_has_userzak();
  }
  userzak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userzak);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.userZAK)
}

// optional string participantID = 7;
bool JoinWithoutLoginParams::has_participantid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void JoinWithoutLoginParams::set_has_participantid() {
  _has_bits_[0] |= 0x00000020u;
}
void JoinWithoutLoginParams::clear_has_participantid() {
  _has_bits_[0] &= ~0x00000020u;
}
void JoinWithoutLoginParams::clear_participantid() {
  participantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_participantid();
}
const ::std::string& JoinWithoutLoginParams::participantid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  return participantid_.GetNoArena();
}
void JoinWithoutLoginParams::set_participantid(const ::std::string& value) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_participantid(::std::string&& value) {
  set_has_participantid();
  participantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
#endif
void JoinWithoutLoginParams::set_participantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
void JoinWithoutLoginParams::set_participantid(const char* value, size_t size) {
  set_has_participantid();
  participantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}
::std::string* JoinWithoutLoginParams::mutable_participantid() {
  set_has_participantid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  return participantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_participantid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
  clear_has_participantid();
  return participantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_participantid(::std::string* participantid) {
  if (participantid != NULL) {
    set_has_participantid();
  } else {
    clear_has_participantid();
  }
  participantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), participantid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.participantID)
}

// optional string webinarToken = 8;
bool JoinWithoutLoginParams::has_webinartoken() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void JoinWithoutLoginParams::set_has_webinartoken() {
  _has_bits_[0] |= 0x00000040u;
}
void JoinWithoutLoginParams::clear_has_webinartoken() {
  _has_bits_[0] &= ~0x00000040u;
}
void JoinWithoutLoginParams::clear_webinartoken() {
  webinartoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webinartoken();
}
const ::std::string& JoinWithoutLoginParams::webinartoken() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  return webinartoken_.GetNoArena();
}
void JoinWithoutLoginParams::set_webinartoken(const ::std::string& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
#if LANG_CXX11
void JoinWithoutLoginParams::set_webinartoken(::std::string&& value) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
#endif
void JoinWithoutLoginParams::set_webinartoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
void JoinWithoutLoginParams::set_webinartoken(const char* value, size_t size) {
  set_has_webinartoken();
  webinartoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}
::std::string* JoinWithoutLoginParams::mutable_webinartoken() {
  set_has_webinartoken();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  return webinartoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinWithoutLoginParams::release_webinartoken() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
  clear_has_webinartoken();
  return webinartoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinWithoutLoginParams::set_allocated_webinartoken(::std::string* webinartoken) {
  if (webinartoken != NULL) {
    set_has_webinartoken();
  } else {
    clear_has_webinartoken();
  }
  webinartoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webinartoken);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.JoinWithoutLoginParams.webinarToken)
}

// optional bool isDirectShareDesktop = 9;
bool JoinWithoutLoginParams::has_isdirectsharedesktop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void JoinWithoutLoginParams::set_has_isdirectsharedesktop() {
  _has_bits_[0] |= 0x00000100u;
}
void JoinWithoutLoginParams::clear_has_isdirectsharedesktop() {
  _has_bits_[0] &= ~0x00000100u;
}
void JoinWithoutLoginParams::clear_isdirectsharedesktop() {
  isdirectsharedesktop_ = false;
  clear_has_isdirectsharedesktop();
}
bool JoinWithoutLoginParams::isdirectsharedesktop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isDirectShareDesktop)
  return isdirectsharedesktop_;
}
void JoinWithoutLoginParams::set_isdirectsharedesktop(bool value) {
  set_has_isdirectsharedesktop();
  isdirectsharedesktop_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isDirectShareDesktop)
}

// optional bool isVideoOff = 10;
bool JoinWithoutLoginParams::has_isvideooff() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void JoinWithoutLoginParams::set_has_isvideooff() {
  _has_bits_[0] |= 0x00000200u;
}
void JoinWithoutLoginParams::clear_has_isvideooff() {
  _has_bits_[0] &= ~0x00000200u;
}
void JoinWithoutLoginParams::clear_isvideooff() {
  isvideooff_ = false;
  clear_has_isvideooff();
}
bool JoinWithoutLoginParams::isvideooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isVideoOff)
  return isvideooff_;
}
void JoinWithoutLoginParams::set_isvideooff(bool value) {
  set_has_isvideooff();
  isvideooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isVideoOff)
}

// optional bool isAudioOff = 11;
bool JoinWithoutLoginParams::has_isaudiooff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void JoinWithoutLoginParams::set_has_isaudiooff() {
  _has_bits_[0] |= 0x00000400u;
}
void JoinWithoutLoginParams::clear_has_isaudiooff() {
  _has_bits_[0] &= ~0x00000400u;
}
void JoinWithoutLoginParams::clear_isaudiooff() {
  isaudiooff_ = false;
  clear_has_isaudiooff();
}
bool JoinWithoutLoginParams::isaudiooff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.JoinWithoutLoginParams.isAudioOff)
  return isaudiooff_;
}
void JoinWithoutLoginParams::set_isaudiooff(bool value) {
  set_has_isaudiooff();
  isaudiooff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.JoinWithoutLoginParams.isAudioOff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveMeetingParams::kBEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveMeetingParams::LeaveMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.LeaveMeetingParams)
}
LeaveMeetingParams::LeaveMeetingParams(const LeaveMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bend_ = from.bend_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.LeaveMeetingParams)
}

void LeaveMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  bend_ = false;
}

LeaveMeetingParams::~LeaveMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.LeaveMeetingParams)
  SharedDtor();
}

void LeaveMeetingParams::SharedDtor() {
}

void LeaveMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LeaveMeetingParams& LeaveMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveMeetingParams* LeaveMeetingParams::New(::google::protobuf::Arena* arena) const {
  LeaveMeetingParams* n = new LeaveMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.LeaveMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bend_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaveMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.LeaveMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.LeaveMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.LeaveMeetingParams)
  return false;
#undef DO_
}

void LeaveMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.LeaveMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bend(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.LeaveMeetingParams)
}

size_t LeaveMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.LeaveMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnd = 1;
  if (has_bend()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LeaveMeetingParams*>(&from));
}

void LeaveMeetingParams::MergeFrom(const LeaveMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.LeaveMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bend()) {
    set_bend(from.bend());
  }
}

void LeaveMeetingParams::CopyFrom(const LeaveMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.LeaveMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMeetingParams::IsInitialized() const {
  return true;
}

void LeaveMeetingParams::Swap(LeaveMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveMeetingParams::InternalSwap(LeaveMeetingParams* other) {
  using std::swap;
  swap(bend_, other->bend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string LeaveMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.LeaveMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveMeetingParams

// optional bool bEnd = 1;
bool LeaveMeetingParams::has_bend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveMeetingParams::set_has_bend() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveMeetingParams::clear_has_bend() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveMeetingParams::clear_bend() {
  bend_ = false;
  clear_has_bend();
}
bool LeaveMeetingParams::bend() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.LeaveMeetingParams.bEnd)
  return bend_;
}
void LeaveMeetingParams::set_bend(bool value) {
  set_has_bend();
  bend_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.LeaveMeetingParams.bEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandleZoomWebUriProtocolActionParams::kProtocolActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandleZoomWebUriProtocolActionParams::HandleZoomWebUriProtocolActionParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
}
HandleZoomWebUriProtocolActionParams::HandleZoomWebUriProtocolActionParams(const HandleZoomWebUriProtocolActionParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocolaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_protocolaction()) {
    protocolaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolaction_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
}

void HandleZoomWebUriProtocolActionParams::SharedCtor() {
  _cached_size_ = 0;
  protocolaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HandleZoomWebUriProtocolActionParams::~HandleZoomWebUriProtocolActionParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  SharedDtor();
}

void HandleZoomWebUriProtocolActionParams::SharedDtor() {
  protocolaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandleZoomWebUriProtocolActionParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HandleZoomWebUriProtocolActionParams& HandleZoomWebUriProtocolActionParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HandleZoomWebUriProtocolActionParams* HandleZoomWebUriProtocolActionParams::New(::google::protobuf::Arena* arena) const {
  HandleZoomWebUriProtocolActionParams* n = new HandleZoomWebUriProtocolActionParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandleZoomWebUriProtocolActionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_protocolaction()) {
    GOOGLE_DCHECK(!protocolaction_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*protocolaction_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HandleZoomWebUriProtocolActionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string protocolAction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocolaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  return false;
#undef DO_
}

void HandleZoomWebUriProtocolActionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string protocolAction = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocolaction(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
}

size_t HandleZoomWebUriProtocolActionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string protocolAction = 1;
  if (has_protocolaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandleZoomWebUriProtocolActionParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HandleZoomWebUriProtocolActionParams*>(&from));
}

void HandleZoomWebUriProtocolActionParams::MergeFrom(const HandleZoomWebUriProtocolActionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_protocolaction()) {
    set_has_protocolaction();
    protocolaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolaction_);
  }
}

void HandleZoomWebUriProtocolActionParams::CopyFrom(const HandleZoomWebUriProtocolActionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleZoomWebUriProtocolActionParams::IsInitialized() const {
  return true;
}

void HandleZoomWebUriProtocolActionParams::Swap(HandleZoomWebUriProtocolActionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandleZoomWebUriProtocolActionParams::InternalSwap(HandleZoomWebUriProtocolActionParams* other) {
  using std::swap;
  protocolaction_.Swap(&other->protocolaction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HandleZoomWebUriProtocolActionParams::GetTypeName() const {
  return "com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HandleZoomWebUriProtocolActionParams

// optional string protocolAction = 1;
bool HandleZoomWebUriProtocolActionParams::has_protocolaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HandleZoomWebUriProtocolActionParams::set_has_protocolaction() {
  _has_bits_[0] |= 0x00000001u;
}
void HandleZoomWebUriProtocolActionParams::clear_has_protocolaction() {
  _has_bits_[0] &= ~0x00000001u;
}
void HandleZoomWebUriProtocolActionParams::clear_protocolaction() {
  protocolaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocolaction();
}
const ::std::string& HandleZoomWebUriProtocolActionParams::protocolaction() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  return protocolaction_.GetNoArena();
}
void HandleZoomWebUriProtocolActionParams::set_protocolaction(const ::std::string& value) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
#if LANG_CXX11
void HandleZoomWebUriProtocolActionParams::set_protocolaction(::std::string&& value) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
#endif
void HandleZoomWebUriProtocolActionParams::set_protocolaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
void HandleZoomWebUriProtocolActionParams::set_protocolaction(const char* value, size_t size) {
  set_has_protocolaction();
  protocolaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}
::std::string* HandleZoomWebUriProtocolActionParams::mutable_protocolaction() {
  set_has_protocolaction();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  return protocolaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HandleZoomWebUriProtocolActionParams::release_protocolaction() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
  clear_has_protocolaction();
  return protocolaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HandleZoomWebUriProtocolActionParams::set_allocated_protocolaction(::std::string* protocolaction) {
  if (protocolaction != NULL) {
    set_has_protocolaction();
  } else {
    clear_has_protocolaction();
  }
  protocolaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolaction);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.HandleZoomWebUriProtocolActionParams.protocolAction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowChatDlgParams::kHParentFieldNumber;
const int ShowChatDlgParams::kRectLeftFieldNumber;
const int ShowChatDlgParams::kRectTopFieldNumber;
const int ShowChatDlgParams::kRectRightFieldNumber;
const int ShowChatDlgParams::kRectBottomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowChatDlgParams::ShowChatDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowChatDlgParams)
}
ShowChatDlgParams::ShowChatDlgParams(const ShowChatDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  rectleft_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rectleft()) {
    rectleft_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectleft_);
  }
  recttop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recttop()) {
    recttop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recttop_);
  }
  rectright_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rectright()) {
    rectright_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectright_);
  }
  rectbottom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rectbottom()) {
    rectbottom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectbottom_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowChatDlgParams)
}

void ShowChatDlgParams::SharedCtor() {
  _cached_size_ = 0;
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectleft_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recttop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectright_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectbottom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShowChatDlgParams::~ShowChatDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowChatDlgParams)
  SharedDtor();
}

void ShowChatDlgParams::SharedDtor() {
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectleft_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recttop_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectright_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rectbottom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowChatDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowChatDlgParams& ShowChatDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowChatDlgParams* ShowChatDlgParams::New(::google::protobuf::Arena* arena) const {
  ShowChatDlgParams* n = new ShowChatDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowChatDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowChatDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!rectleft_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rectleft_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!recttop_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*recttop_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!rectright_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rectright_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!rectbottom_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rectbottom_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowChatDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowChatDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hParent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rectLeft = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rectleft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rectTop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recttop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rectRight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rectright()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rectBottom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rectbottom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowChatDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowChatDlgParams)
  return false;
#undef DO_
}

void ShowChatDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowChatDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string hParent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hparent(), output);
  }

  // optional string rectLeft = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rectleft(), output);
  }

  // optional string rectTop = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recttop(), output);
  }

  // optional string rectRight = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rectright(), output);
  }

  // optional string rectBottom = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->rectbottom(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowChatDlgParams)
}

size_t ShowChatDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowChatDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string hParent = 1;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

    // optional string rectLeft = 2;
    if (has_rectleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rectleft());
    }

    // optional string rectTop = 3;
    if (has_recttop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recttop());
    }

    // optional string rectRight = 4;
    if (has_rectright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rectright());
    }

    // optional string rectBottom = 5;
    if (has_rectbottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rectbottom());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowChatDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowChatDlgParams*>(&from));
}

void ShowChatDlgParams::MergeFrom(const ShowChatDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowChatDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rectleft();
      rectleft_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectleft_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_recttop();
      recttop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recttop_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_rectright();
      rectright_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectright_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_rectbottom();
      rectbottom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rectbottom_);
    }
  }
}

void ShowChatDlgParams::CopyFrom(const ShowChatDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowChatDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowChatDlgParams::IsInitialized() const {
  return true;
}

void ShowChatDlgParams::Swap(ShowChatDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowChatDlgParams::InternalSwap(ShowChatDlgParams* other) {
  using std::swap;
  hparent_.Swap(&other->hparent_);
  rectleft_.Swap(&other->rectleft_);
  recttop_.Swap(&other->recttop_);
  rectright_.Swap(&other->rectright_);
  rectbottom_.Swap(&other->rectbottom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowChatDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowChatDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowChatDlgParams

// optional string hParent = 1;
bool ShowChatDlgParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowChatDlgParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowChatDlgParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowChatDlgParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& ShowChatDlgParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  return hparent_.GetNoArena();
}
void ShowChatDlgParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
#if LANG_CXX11
void ShowChatDlgParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
#endif
void ShowChatDlgParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
void ShowChatDlgParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}
::std::string* ShowChatDlgParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowChatDlgParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowChatDlgParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.hParent)
}

// optional string rectLeft = 2;
bool ShowChatDlgParams::has_rectleft() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShowChatDlgParams::set_has_rectleft() {
  _has_bits_[0] |= 0x00000002u;
}
void ShowChatDlgParams::clear_has_rectleft() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShowChatDlgParams::clear_rectleft() {
  rectleft_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectleft();
}
const ::std::string& ShowChatDlgParams::rectleft() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  return rectleft_.GetNoArena();
}
void ShowChatDlgParams::set_rectleft(const ::std::string& value) {
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
#if LANG_CXX11
void ShowChatDlgParams::set_rectleft(::std::string&& value) {
  set_has_rectleft();
  rectleft_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
#endif
void ShowChatDlgParams::set_rectleft(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
void ShowChatDlgParams::set_rectleft(const char* value, size_t size) {
  set_has_rectleft();
  rectleft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}
::std::string* ShowChatDlgParams::mutable_rectleft() {
  set_has_rectleft();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  return rectleft_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowChatDlgParams::release_rectleft() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
  clear_has_rectleft();
  return rectleft_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowChatDlgParams::set_allocated_rectleft(::std::string* rectleft) {
  if (rectleft != NULL) {
    set_has_rectleft();
  } else {
    clear_has_rectleft();
  }
  rectleft_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectleft);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectLeft)
}

// optional string rectTop = 3;
bool ShowChatDlgParams::has_recttop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShowChatDlgParams::set_has_recttop() {
  _has_bits_[0] |= 0x00000004u;
}
void ShowChatDlgParams::clear_has_recttop() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShowChatDlgParams::clear_recttop() {
  recttop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recttop();
}
const ::std::string& ShowChatDlgParams::recttop() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  return recttop_.GetNoArena();
}
void ShowChatDlgParams::set_recttop(const ::std::string& value) {
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
#if LANG_CXX11
void ShowChatDlgParams::set_recttop(::std::string&& value) {
  set_has_recttop();
  recttop_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
#endif
void ShowChatDlgParams::set_recttop(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
void ShowChatDlgParams::set_recttop(const char* value, size_t size) {
  set_has_recttop();
  recttop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}
::std::string* ShowChatDlgParams::mutable_recttop() {
  set_has_recttop();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  return recttop_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowChatDlgParams::release_recttop() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
  clear_has_recttop();
  return recttop_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowChatDlgParams::set_allocated_recttop(::std::string* recttop) {
  if (recttop != NULL) {
    set_has_recttop();
  } else {
    clear_has_recttop();
  }
  recttop_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recttop);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectTop)
}

// optional string rectRight = 4;
bool ShowChatDlgParams::has_rectright() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShowChatDlgParams::set_has_rectright() {
  _has_bits_[0] |= 0x00000008u;
}
void ShowChatDlgParams::clear_has_rectright() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShowChatDlgParams::clear_rectright() {
  rectright_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectright();
}
const ::std::string& ShowChatDlgParams::rectright() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  return rectright_.GetNoArena();
}
void ShowChatDlgParams::set_rectright(const ::std::string& value) {
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
#if LANG_CXX11
void ShowChatDlgParams::set_rectright(::std::string&& value) {
  set_has_rectright();
  rectright_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
#endif
void ShowChatDlgParams::set_rectright(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
void ShowChatDlgParams::set_rectright(const char* value, size_t size) {
  set_has_rectright();
  rectright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}
::std::string* ShowChatDlgParams::mutable_rectright() {
  set_has_rectright();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  return rectright_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowChatDlgParams::release_rectright() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
  clear_has_rectright();
  return rectright_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowChatDlgParams::set_allocated_rectright(::std::string* rectright) {
  if (rectright != NULL) {
    set_has_rectright();
  } else {
    clear_has_rectright();
  }
  rectright_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectright);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectRight)
}

// optional string rectBottom = 5;
bool ShowChatDlgParams::has_rectbottom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShowChatDlgParams::set_has_rectbottom() {
  _has_bits_[0] |= 0x00000010u;
}
void ShowChatDlgParams::clear_has_rectbottom() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShowChatDlgParams::clear_rectbottom() {
  rectbottom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rectbottom();
}
const ::std::string& ShowChatDlgParams::rectbottom() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  return rectbottom_.GetNoArena();
}
void ShowChatDlgParams::set_rectbottom(const ::std::string& value) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
#if LANG_CXX11
void ShowChatDlgParams::set_rectbottom(::std::string&& value) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
#endif
void ShowChatDlgParams::set_rectbottom(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
void ShowChatDlgParams::set_rectbottom(const char* value, size_t size) {
  set_has_rectbottom();
  rectbottom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}
::std::string* ShowChatDlgParams::mutable_rectbottom() {
  set_has_rectbottom();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  return rectbottom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowChatDlgParams::release_rectbottom() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
  clear_has_rectbottom();
  return rectbottom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowChatDlgParams::set_allocated_rectbottom(::std::string* rectbottom) {
  if (rectbottom != NULL) {
    set_has_rectbottom();
  } else {
    clear_has_rectbottom();
  }
  rectbottom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rectbottom);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowChatDlgParams.rectBottom)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterFullScreenParams::kBFirstViewFieldNumber;
const int EnterFullScreenParams::kBSecViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterFullScreenParams::EnterFullScreenParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnterFullScreenParams)
}
EnterFullScreenParams::EnterFullScreenParams(const EnterFullScreenParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bfirstview_, &from.bfirstview_,
    static_cast<size_t>(reinterpret_cast<char*>(&bsecview_) -
    reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnterFullScreenParams)
}

void EnterFullScreenParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bfirstview_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bsecview_) -
      reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
}

EnterFullScreenParams::~EnterFullScreenParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnterFullScreenParams)
  SharedDtor();
}

void EnterFullScreenParams::SharedDtor() {
}

void EnterFullScreenParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnterFullScreenParams& EnterFullScreenParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterFullScreenParams* EnterFullScreenParams::New(::google::protobuf::Arena* arena) const {
  EnterFullScreenParams* n = new EnterFullScreenParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterFullScreenParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnterFullScreenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bfirstview_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bsecview_) -
        reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterFullScreenParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnterFullScreenParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bFirstView = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bfirstview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bfirstview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bSecView = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bsecview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bsecview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnterFullScreenParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnterFullScreenParams)
  return false;
#undef DO_
}

void EnterFullScreenParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnterFullScreenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bFirstView = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bfirstview(), output);
  }

  // optional bool bSecView = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bsecview(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnterFullScreenParams)
}

size_t EnterFullScreenParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnterFullScreenParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bFirstView = 1;
    if (has_bfirstview()) {
      total_size += 1 + 1;
    }

    // optional bool bSecView = 2;
    if (has_bsecview()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterFullScreenParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnterFullScreenParams*>(&from));
}

void EnterFullScreenParams::MergeFrom(const EnterFullScreenParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnterFullScreenParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bfirstview_ = from.bfirstview_;
    }
    if (cached_has_bits & 0x00000002u) {
      bsecview_ = from.bsecview_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterFullScreenParams::CopyFrom(const EnterFullScreenParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnterFullScreenParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterFullScreenParams::IsInitialized() const {
  return true;
}

void EnterFullScreenParams::Swap(EnterFullScreenParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterFullScreenParams::InternalSwap(EnterFullScreenParams* other) {
  using std::swap;
  swap(bfirstview_, other->bfirstview_);
  swap(bsecview_, other->bsecview_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnterFullScreenParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnterFullScreenParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterFullScreenParams

// optional bool bFirstView = 1;
bool EnterFullScreenParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterFullScreenParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterFullScreenParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterFullScreenParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
bool EnterFullScreenParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnterFullScreenParams.bFirstView)
  return bfirstview_;
}
void EnterFullScreenParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnterFullScreenParams.bFirstView)
}

// optional bool bSecView = 2;
bool EnterFullScreenParams::has_bsecview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterFullScreenParams::set_has_bsecview() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterFullScreenParams::clear_has_bsecview() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterFullScreenParams::clear_bsecview() {
  bsecview_ = false;
  clear_has_bsecview();
}
bool EnterFullScreenParams::bsecview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnterFullScreenParams.bSecView)
  return bsecview_;
}
void EnterFullScreenParams::set_bsecview(bool value) {
  set_has_bsecview();
  bsecview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnterFullScreenParams.bSecView)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitFullScreenParams::kBFirstViewFieldNumber;
const int ExitFullScreenParams::kBSecViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitFullScreenParams::ExitFullScreenParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ExitFullScreenParams)
}
ExitFullScreenParams::ExitFullScreenParams(const ExitFullScreenParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bfirstview_, &from.bfirstview_,
    static_cast<size_t>(reinterpret_cast<char*>(&bsecview_) -
    reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ExitFullScreenParams)
}

void ExitFullScreenParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bfirstview_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bsecview_) -
      reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
}

ExitFullScreenParams::~ExitFullScreenParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ExitFullScreenParams)
  SharedDtor();
}

void ExitFullScreenParams::SharedDtor() {
}

void ExitFullScreenParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ExitFullScreenParams& ExitFullScreenParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitFullScreenParams* ExitFullScreenParams::New(::google::protobuf::Arena* arena) const {
  ExitFullScreenParams* n = new ExitFullScreenParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitFullScreenParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ExitFullScreenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bfirstview_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bsecview_) -
        reinterpret_cast<char*>(&bfirstview_)) + sizeof(bsecview_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitFullScreenParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ExitFullScreenParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bFirstView = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bfirstview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bfirstview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bSecView = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bsecview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bsecview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ExitFullScreenParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ExitFullScreenParams)
  return false;
#undef DO_
}

void ExitFullScreenParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ExitFullScreenParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bFirstView = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bfirstview(), output);
  }

  // optional bool bSecView = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bsecview(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ExitFullScreenParams)
}

size_t ExitFullScreenParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ExitFullScreenParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bFirstView = 1;
    if (has_bfirstview()) {
      total_size += 1 + 1;
    }

    // optional bool bSecView = 2;
    if (has_bsecview()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitFullScreenParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ExitFullScreenParams*>(&from));
}

void ExitFullScreenParams::MergeFrom(const ExitFullScreenParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ExitFullScreenParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bfirstview_ = from.bfirstview_;
    }
    if (cached_has_bits & 0x00000002u) {
      bsecview_ = from.bsecview_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExitFullScreenParams::CopyFrom(const ExitFullScreenParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ExitFullScreenParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitFullScreenParams::IsInitialized() const {
  return true;
}

void ExitFullScreenParams::Swap(ExitFullScreenParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitFullScreenParams::InternalSwap(ExitFullScreenParams* other) {
  using std::swap;
  swap(bfirstview_, other->bfirstview_);
  swap(bsecview_, other->bsecview_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ExitFullScreenParams::GetTypeName() const {
  return "com.electron.sdk.proto.ExitFullScreenParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitFullScreenParams

// optional bool bFirstView = 1;
bool ExitFullScreenParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExitFullScreenParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000001u;
}
void ExitFullScreenParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExitFullScreenParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
bool ExitFullScreenParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ExitFullScreenParams.bFirstView)
  return bfirstview_;
}
void ExitFullScreenParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ExitFullScreenParams.bFirstView)
}

// optional bool bSecView = 2;
bool ExitFullScreenParams::has_bsecview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExitFullScreenParams::set_has_bsecview() {
  _has_bits_[0] |= 0x00000002u;
}
void ExitFullScreenParams::clear_has_bsecview() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExitFullScreenParams::clear_bsecview() {
  bsecview_ = false;
  clear_has_bsecview();
}
bool ExitFullScreenParams::bsecview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ExitFullScreenParams.bSecView)
  return bsecview_;
}
void ExitFullScreenParams::set_bsecview(bool value) {
  set_has_bsecview();
  bsecview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ExitFullScreenParams.bSecView)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveFloatVideoWndParams::kLeftFieldNumber;
const int MoveFloatVideoWndParams::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveFloatVideoWndParams::MoveFloatVideoWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.MoveFloatVideoWndParams)
}
MoveFloatVideoWndParams::MoveFloatVideoWndParams(const MoveFloatVideoWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.MoveFloatVideoWndParams)
}

void MoveFloatVideoWndParams::SharedCtor() {
  _cached_size_ = 0;
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoveFloatVideoWndParams::~MoveFloatVideoWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.MoveFloatVideoWndParams)
  SharedDtor();
}

void MoveFloatVideoWndParams::SharedDtor() {
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoveFloatVideoWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MoveFloatVideoWndParams& MoveFloatVideoWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

MoveFloatVideoWndParams* MoveFloatVideoWndParams::New(::google::protobuf::Arena* arena) const {
  MoveFloatVideoWndParams* n = new MoveFloatVideoWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MoveFloatVideoWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MoveFloatVideoWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.MoveFloatVideoWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.MoveFloatVideoWndParams)
  return false;
#undef DO_
}

void MoveFloatVideoWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->left(), output);
  }

  // optional string top = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->top(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.MoveFloatVideoWndParams)
}

size_t MoveFloatVideoWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveFloatVideoWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MoveFloatVideoWndParams*>(&from));
}

void MoveFloatVideoWndParams::MergeFrom(const MoveFloatVideoWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
  }
}

void MoveFloatVideoWndParams::CopyFrom(const MoveFloatVideoWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.MoveFloatVideoWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveFloatVideoWndParams::IsInitialized() const {
  return true;
}

void MoveFloatVideoWndParams::Swap(MoveFloatVideoWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveFloatVideoWndParams::InternalSwap(MoveFloatVideoWndParams* other) {
  using std::swap;
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string MoveFloatVideoWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.MoveFloatVideoWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveFloatVideoWndParams

// optional string left = 1;
bool MoveFloatVideoWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MoveFloatVideoWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void MoveFloatVideoWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void MoveFloatVideoWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& MoveFloatVideoWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  return left_.GetNoArena();
}
void MoveFloatVideoWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
#if LANG_CXX11
void MoveFloatVideoWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
#endif
void MoveFloatVideoWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
void MoveFloatVideoWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}
::std::string* MoveFloatVideoWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MoveFloatVideoWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MoveFloatVideoWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.MoveFloatVideoWndParams.left)
}

// optional string top = 2;
bool MoveFloatVideoWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MoveFloatVideoWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
void MoveFloatVideoWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
void MoveFloatVideoWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& MoveFloatVideoWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  return top_.GetNoArena();
}
void MoveFloatVideoWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
#if LANG_CXX11
void MoveFloatVideoWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
#endif
void MoveFloatVideoWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
void MoveFloatVideoWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}
::std::string* MoveFloatVideoWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MoveFloatVideoWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MoveFloatVideoWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.MoveFloatVideoWndParams.top)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowSharingToolbarParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowSharingToolbarParams::ShowSharingToolbarParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowSharingToolbarParams)
}
ShowSharingToolbarParams::ShowSharingToolbarParams(const ShowSharingToolbarParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowSharingToolbarParams)
}

void ShowSharingToolbarParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

ShowSharingToolbarParams::~ShowSharingToolbarParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowSharingToolbarParams)
  SharedDtor();
}

void ShowSharingToolbarParams::SharedDtor() {
}

void ShowSharingToolbarParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowSharingToolbarParams& ShowSharingToolbarParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowSharingToolbarParams* ShowSharingToolbarParams::New(::google::protobuf::Arena* arena) const {
  ShowSharingToolbarParams* n = new ShowSharingToolbarParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowSharingToolbarParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowSharingToolbarParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowSharingToolbarParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowSharingToolbarParams)
  return false;
#undef DO_
}

void ShowSharingToolbarParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowSharingToolbarParams)
}

size_t ShowSharingToolbarParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowSharingToolbarParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowSharingToolbarParams*>(&from));
}

void ShowSharingToolbarParams::MergeFrom(const ShowSharingToolbarParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void ShowSharingToolbarParams::CopyFrom(const ShowSharingToolbarParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowSharingToolbarParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSharingToolbarParams::IsInitialized() const {
  return true;
}

void ShowSharingToolbarParams::Swap(ShowSharingToolbarParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowSharingToolbarParams::InternalSwap(ShowSharingToolbarParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowSharingToolbarParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowSharingToolbarParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowSharingToolbarParams

// optional bool bShow = 1;
bool ShowSharingToolbarParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowSharingToolbarParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowSharingToolbarParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowSharingToolbarParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool ShowSharingToolbarParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSharingToolbarParams.bShow)
  return bshow_;
}
void ShowSharingToolbarParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSharingToolbarParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeFloatoActiveSpkVideoSizeParams::kFloatVideoTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeFloatoActiveSpkVideoSizeParams::ChangeFloatoActiveSpkVideoSizeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
}
ChangeFloatoActiveSpkVideoSizeParams::ChangeFloatoActiveSpkVideoSizeParams(const ChangeFloatoActiveSpkVideoSizeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  floatvideotype_ = from.floatvideotype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
}

void ChangeFloatoActiveSpkVideoSizeParams::SharedCtor() {
  _cached_size_ = 0;
  floatvideotype_ = 0;
}

ChangeFloatoActiveSpkVideoSizeParams::~ChangeFloatoActiveSpkVideoSizeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  SharedDtor();
}

void ChangeFloatoActiveSpkVideoSizeParams::SharedDtor() {
}

void ChangeFloatoActiveSpkVideoSizeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ChangeFloatoActiveSpkVideoSizeParams& ChangeFloatoActiveSpkVideoSizeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeFloatoActiveSpkVideoSizeParams* ChangeFloatoActiveSpkVideoSizeParams::New(::google::protobuf::Arena* arena) const {
  ChangeFloatoActiveSpkVideoSizeParams* n = new ChangeFloatoActiveSpkVideoSizeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeFloatoActiveSpkVideoSizeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  floatvideotype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeFloatoActiveSpkVideoSizeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 floatVideoType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_floatvideotype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floatvideotype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  return false;
#undef DO_
}

void ChangeFloatoActiveSpkVideoSizeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 floatVideoType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->floatvideotype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
}

size_t ChangeFloatoActiveSpkVideoSizeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 floatVideoType = 1;
  if (has_floatvideotype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->floatvideotype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeFloatoActiveSpkVideoSizeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ChangeFloatoActiveSpkVideoSizeParams*>(&from));
}

void ChangeFloatoActiveSpkVideoSizeParams::MergeFrom(const ChangeFloatoActiveSpkVideoSizeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_floatvideotype()) {
    set_floatvideotype(from.floatvideotype());
  }
}

void ChangeFloatoActiveSpkVideoSizeParams::CopyFrom(const ChangeFloatoActiveSpkVideoSizeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeFloatoActiveSpkVideoSizeParams::IsInitialized() const {
  return true;
}

void ChangeFloatoActiveSpkVideoSizeParams::Swap(ChangeFloatoActiveSpkVideoSizeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeFloatoActiveSpkVideoSizeParams::InternalSwap(ChangeFloatoActiveSpkVideoSizeParams* other) {
  using std::swap;
  swap(floatvideotype_, other->floatvideotype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ChangeFloatoActiveSpkVideoSizeParams::GetTypeName() const {
  return "com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeFloatoActiveSpkVideoSizeParams

// optional int32 floatVideoType = 1;
bool ChangeFloatoActiveSpkVideoSizeParams::has_floatvideotype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChangeFloatoActiveSpkVideoSizeParams::set_has_floatvideotype() {
  _has_bits_[0] |= 0x00000001u;
}
void ChangeFloatoActiveSpkVideoSizeParams::clear_has_floatvideotype() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChangeFloatoActiveSpkVideoSizeParams::clear_floatvideotype() {
  floatvideotype_ = 0;
  clear_has_floatvideotype();
}
::google::protobuf::int32 ChangeFloatoActiveSpkVideoSizeParams::floatvideotype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams.floatVideoType)
  return floatvideotype_;
}
void ChangeFloatoActiveSpkVideoSizeParams::set_floatvideotype(::google::protobuf::int32 value) {
  set_has_floatvideotype();
  floatvideotype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ChangeFloatoActiveSpkVideoSizeParams.floatVideoType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowParticipantsListWndParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowParticipantsListWndParams::ShowParticipantsListWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowParticipantsListWndParams)
}
ShowParticipantsListWndParams::ShowParticipantsListWndParams(const ShowParticipantsListWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowParticipantsListWndParams)
}

void ShowParticipantsListWndParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

ShowParticipantsListWndParams::~ShowParticipantsListWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowParticipantsListWndParams)
  SharedDtor();
}

void ShowParticipantsListWndParams::SharedDtor() {
}

void ShowParticipantsListWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowParticipantsListWndParams& ShowParticipantsListWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowParticipantsListWndParams* ShowParticipantsListWndParams::New(::google::protobuf::Arena* arena) const {
  ShowParticipantsListWndParams* n = new ShowParticipantsListWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowParticipantsListWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowParticipantsListWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowParticipantsListWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowParticipantsListWndParams)
  return false;
#undef DO_
}

void ShowParticipantsListWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowParticipantsListWndParams)
}

size_t ShowParticipantsListWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowParticipantsListWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowParticipantsListWndParams*>(&from));
}

void ShowParticipantsListWndParams::MergeFrom(const ShowParticipantsListWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void ShowParticipantsListWndParams::CopyFrom(const ShowParticipantsListWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowParticipantsListWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowParticipantsListWndParams::IsInitialized() const {
  return true;
}

void ShowParticipantsListWndParams::Swap(ShowParticipantsListWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowParticipantsListWndParams::InternalSwap(ShowParticipantsListWndParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowParticipantsListWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowParticipantsListWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowParticipantsListWndParams

// optional bool bShow = 1;
bool ShowParticipantsListWndParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowParticipantsListWndParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowParticipantsListWndParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowParticipantsListWndParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool ShowParticipantsListWndParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowParticipantsListWndParams.bShow)
  return bshow_;
}
void ShowParticipantsListWndParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowParticipantsListWndParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowBottomFloatToolbarWndParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowBottomFloatToolbarWndParams::ShowBottomFloatToolbarWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
}
ShowBottomFloatToolbarWndParams::ShowBottomFloatToolbarWndParams(const ShowBottomFloatToolbarWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
}

void ShowBottomFloatToolbarWndParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

ShowBottomFloatToolbarWndParams::~ShowBottomFloatToolbarWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  SharedDtor();
}

void ShowBottomFloatToolbarWndParams::SharedDtor() {
}

void ShowBottomFloatToolbarWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowBottomFloatToolbarWndParams& ShowBottomFloatToolbarWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowBottomFloatToolbarWndParams* ShowBottomFloatToolbarWndParams::New(::google::protobuf::Arena* arena) const {
  ShowBottomFloatToolbarWndParams* n = new ShowBottomFloatToolbarWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowBottomFloatToolbarWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowBottomFloatToolbarWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  return false;
#undef DO_
}

void ShowBottomFloatToolbarWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
}

size_t ShowBottomFloatToolbarWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowBottomFloatToolbarWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowBottomFloatToolbarWndParams*>(&from));
}

void ShowBottomFloatToolbarWndParams::MergeFrom(const ShowBottomFloatToolbarWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void ShowBottomFloatToolbarWndParams::CopyFrom(const ShowBottomFloatToolbarWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowBottomFloatToolbarWndParams::IsInitialized() const {
  return true;
}

void ShowBottomFloatToolbarWndParams::Swap(ShowBottomFloatToolbarWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowBottomFloatToolbarWndParams::InternalSwap(ShowBottomFloatToolbarWndParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowBottomFloatToolbarWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowBottomFloatToolbarWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowBottomFloatToolbarWndParams

// optional bool bShow = 1;
bool ShowBottomFloatToolbarWndParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowBottomFloatToolbarWndParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowBottomFloatToolbarWndParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowBottomFloatToolbarWndParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool ShowBottomFloatToolbarWndParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams.bShow)
  return bshow_;
}
void ShowBottomFloatToolbarWndParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowBottomFloatToolbarWndParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowPreOrNextPageVideoParams::kBPageUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowPreOrNextPageVideoParams::ShowPreOrNextPageVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
}
ShowPreOrNextPageVideoParams::ShowPreOrNextPageVideoParams(const ShowPreOrNextPageVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bpageup_ = from.bpageup_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
}

void ShowPreOrNextPageVideoParams::SharedCtor() {
  _cached_size_ = 0;
  bpageup_ = false;
}

ShowPreOrNextPageVideoParams::~ShowPreOrNextPageVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  SharedDtor();
}

void ShowPreOrNextPageVideoParams::SharedDtor() {
}

void ShowPreOrNextPageVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowPreOrNextPageVideoParams& ShowPreOrNextPageVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowPreOrNextPageVideoParams* ShowPreOrNextPageVideoParams::New(::google::protobuf::Arena* arena) const {
  ShowPreOrNextPageVideoParams* n = new ShowPreOrNextPageVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowPreOrNextPageVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bpageup_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowPreOrNextPageVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bPageUp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bpageup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bpageup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  return false;
#undef DO_
}

void ShowPreOrNextPageVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bPageUp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bpageup(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
}

size_t ShowPreOrNextPageVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bPageUp = 1;
  if (has_bpageup()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowPreOrNextPageVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowPreOrNextPageVideoParams*>(&from));
}

void ShowPreOrNextPageVideoParams::MergeFrom(const ShowPreOrNextPageVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpageup()) {
    set_bpageup(from.bpageup());
  }
}

void ShowPreOrNextPageVideoParams::CopyFrom(const ShowPreOrNextPageVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowPreOrNextPageVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowPreOrNextPageVideoParams::IsInitialized() const {
  return true;
}

void ShowPreOrNextPageVideoParams::Swap(ShowPreOrNextPageVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowPreOrNextPageVideoParams::InternalSwap(ShowPreOrNextPageVideoParams* other) {
  using std::swap;
  swap(bpageup_, other->bpageup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowPreOrNextPageVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowPreOrNextPageVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowPreOrNextPageVideoParams

// optional bool bPageUp = 1;
bool ShowPreOrNextPageVideoParams::has_bpageup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowPreOrNextPageVideoParams::set_has_bpageup() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowPreOrNextPageVideoParams::clear_has_bpageup() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowPreOrNextPageVideoParams::clear_bpageup() {
  bpageup_ = false;
  clear_has_bpageup();
}
bool ShowPreOrNextPageVideoParams::bpageup() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowPreOrNextPageVideoParams.bPageUp)
  return bpageup_;
}
void ShowPreOrNextPageVideoParams::set_bpageup(bool value) {
  set_has_bpageup();
  bpageup_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowPreOrNextPageVideoParams.bPageUp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowSharingFrameWindowsParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowSharingFrameWindowsParams::ShowSharingFrameWindowsParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
}
ShowSharingFrameWindowsParams::ShowSharingFrameWindowsParams(const ShowSharingFrameWindowsParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
}

void ShowSharingFrameWindowsParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

ShowSharingFrameWindowsParams::~ShowSharingFrameWindowsParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  SharedDtor();
}

void ShowSharingFrameWindowsParams::SharedDtor() {
}

void ShowSharingFrameWindowsParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowSharingFrameWindowsParams& ShowSharingFrameWindowsParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowSharingFrameWindowsParams* ShowSharingFrameWindowsParams::New(::google::protobuf::Arena* arena) const {
  ShowSharingFrameWindowsParams* n = new ShowSharingFrameWindowsParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowSharingFrameWindowsParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowSharingFrameWindowsParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  return false;
#undef DO_
}

void ShowSharingFrameWindowsParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
}

size_t ShowSharingFrameWindowsParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowSharingFrameWindowsParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowSharingFrameWindowsParams*>(&from));
}

void ShowSharingFrameWindowsParams::MergeFrom(const ShowSharingFrameWindowsParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void ShowSharingFrameWindowsParams::CopyFrom(const ShowSharingFrameWindowsParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowSharingFrameWindowsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSharingFrameWindowsParams::IsInitialized() const {
  return true;
}

void ShowSharingFrameWindowsParams::Swap(ShowSharingFrameWindowsParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowSharingFrameWindowsParams::InternalSwap(ShowSharingFrameWindowsParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowSharingFrameWindowsParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowSharingFrameWindowsParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowSharingFrameWindowsParams

// optional bool bShow = 1;
bool ShowSharingFrameWindowsParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowSharingFrameWindowsParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowSharingFrameWindowsParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowSharingFrameWindowsParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool ShowSharingFrameWindowsParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSharingFrameWindowsParams.bShow)
  return bshow_;
}
void ShowSharingFrameWindowsParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSharingFrameWindowsParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchSplitScreenModeParams::kBSplitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchSplitScreenModeParams::SwitchSplitScreenModeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SwitchSplitScreenModeParams)
}
SwitchSplitScreenModeParams::SwitchSplitScreenModeParams(const SwitchSplitScreenModeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bsplit_ = from.bsplit_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SwitchSplitScreenModeParams)
}

void SwitchSplitScreenModeParams::SharedCtor() {
  _cached_size_ = 0;
  bsplit_ = false;
}

SwitchSplitScreenModeParams::~SwitchSplitScreenModeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  SharedDtor();
}

void SwitchSplitScreenModeParams::SharedDtor() {
}

void SwitchSplitScreenModeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SwitchSplitScreenModeParams& SwitchSplitScreenModeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchSplitScreenModeParams* SwitchSplitScreenModeParams::New(::google::protobuf::Arena* arena) const {
  SwitchSplitScreenModeParams* n = new SwitchSplitScreenModeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchSplitScreenModeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bsplit_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwitchSplitScreenModeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bSplit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bsplit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bsplit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  return false;
#undef DO_
}

void SwitchSplitScreenModeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bSplit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bsplit(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SwitchSplitScreenModeParams)
}

size_t SwitchSplitScreenModeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bSplit = 1;
  if (has_bsplit()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchSplitScreenModeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SwitchSplitScreenModeParams*>(&from));
}

void SwitchSplitScreenModeParams::MergeFrom(const SwitchSplitScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bsplit()) {
    set_bsplit(from.bsplit());
  }
}

void SwitchSplitScreenModeParams::CopyFrom(const SwitchSplitScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SwitchSplitScreenModeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchSplitScreenModeParams::IsInitialized() const {
  return true;
}

void SwitchSplitScreenModeParams::Swap(SwitchSplitScreenModeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchSplitScreenModeParams::InternalSwap(SwitchSplitScreenModeParams* other) {
  using std::swap;
  swap(bsplit_, other->bsplit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SwitchSplitScreenModeParams::GetTypeName() const {
  return "com.electron.sdk.proto.SwitchSplitScreenModeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchSplitScreenModeParams

// optional bool bSplit = 1;
bool SwitchSplitScreenModeParams::has_bsplit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SwitchSplitScreenModeParams::set_has_bsplit() {
  _has_bits_[0] |= 0x00000001u;
}
void SwitchSplitScreenModeParams::clear_has_bsplit() {
  _has_bits_[0] &= ~0x00000001u;
}
void SwitchSplitScreenModeParams::clear_bsplit() {
  bsplit_ = false;
  clear_has_bsplit();
}
bool SwitchSplitScreenModeParams::bsplit() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwitchSplitScreenModeParams.bSplit)
  return bsplit_;
}
void SwitchSplitScreenModeParams::set_bsplit(bool value) {
  set_has_bsplit();
  bsplit_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwitchSplitScreenModeParams.bSplit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::kMinimizeUIMOdeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
}
SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  minimizeuimode_ = from.minimizeuimode_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SharedCtor() {
  _cached_size_ = 0;
  minimizeuimode_ = 0;
}

SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::~SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  SharedDtor();
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SharedDtor() {
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::New(::google::protobuf::Arena* arena) const {
  SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* n = new SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minimizeuimode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 minimizeUIMOde = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_minimizeuimode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minimizeuimode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  return false;
#undef DO_
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 minimizeUIMOde = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->minimizeuimode(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
}

size_t SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 minimizeUIMOde = 1;
  if (has_minimizeuimode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minimizeuimode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams*>(&from));
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::MergeFrom(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_minimizeuimode()) {
    set_minimizeuimode(from.minimizeuimode());
  }
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::CopyFrom(const SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::IsInitialized() const {
  return true;
}

void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::Swap(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::InternalSwap(SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams* other) {
  using std::swap;
  swap(minimizeuimode_, other->minimizeuimode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams

// optional int32 minimizeUIMOde = 1;
bool SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::has_minimizeuimode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::set_has_minimizeuimode() {
  _has_bits_[0] |= 0x00000001u;
}
void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::clear_has_minimizeuimode() {
  _has_bits_[0] &= ~0x00000001u;
}
void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::clear_minimizeuimode() {
  minimizeuimode_ = 0;
  clear_has_minimizeuimode();
}
::google::protobuf::int32 SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::minimizeuimode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams.minimizeUIMOde)
  return minimizeuimode_;
}
void SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams::set_minimizeuimode(::google::protobuf::int32 value) {
  set_has_minimizeuimode();
  minimizeuimode_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwitchMinimizeUIMode4FirstScreenMeetingUIWndParams.minimizeUIMOde)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwapToShowShareViewOrVideoParams::kBToDisplayShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwapToShowShareViewOrVideoParams::SwapToShowShareViewOrVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
}
SwapToShowShareViewOrVideoParams::SwapToShowShareViewOrVideoParams(const SwapToShowShareViewOrVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btodisplayshare_ = from.btodisplayshare_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
}

void SwapToShowShareViewOrVideoParams::SharedCtor() {
  _cached_size_ = 0;
  btodisplayshare_ = false;
}

SwapToShowShareViewOrVideoParams::~SwapToShowShareViewOrVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  SharedDtor();
}

void SwapToShowShareViewOrVideoParams::SharedDtor() {
}

void SwapToShowShareViewOrVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SwapToShowShareViewOrVideoParams& SwapToShowShareViewOrVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwapToShowShareViewOrVideoParams* SwapToShowShareViewOrVideoParams::New(::google::protobuf::Arena* arena) const {
  SwapToShowShareViewOrVideoParams* n = new SwapToShowShareViewOrVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwapToShowShareViewOrVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  btodisplayshare_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwapToShowShareViewOrVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bToDisplayShare = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_btodisplayshare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &btodisplayshare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  return false;
#undef DO_
}

void SwapToShowShareViewOrVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bToDisplayShare = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->btodisplayshare(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
}

size_t SwapToShowShareViewOrVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bToDisplayShare = 1;
  if (has_btodisplayshare()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwapToShowShareViewOrVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SwapToShowShareViewOrVideoParams*>(&from));
}

void SwapToShowShareViewOrVideoParams::MergeFrom(const SwapToShowShareViewOrVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_btodisplayshare()) {
    set_btodisplayshare(from.btodisplayshare());
  }
}

void SwapToShowShareViewOrVideoParams::CopyFrom(const SwapToShowShareViewOrVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapToShowShareViewOrVideoParams::IsInitialized() const {
  return true;
}

void SwapToShowShareViewOrVideoParams::Swap(SwapToShowShareViewOrVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwapToShowShareViewOrVideoParams::InternalSwap(SwapToShowShareViewOrVideoParams* other) {
  using std::swap;
  swap(btodisplayshare_, other->btodisplayshare_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SwapToShowShareViewOrVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.SwapToShowShareViewOrVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwapToShowShareViewOrVideoParams

// optional bool bToDisplayShare = 1;
bool SwapToShowShareViewOrVideoParams::has_btodisplayshare() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SwapToShowShareViewOrVideoParams::set_has_btodisplayshare() {
  _has_bits_[0] |= 0x00000001u;
}
void SwapToShowShareViewOrVideoParams::clear_has_btodisplayshare() {
  _has_bits_[0] &= ~0x00000001u;
}
void SwapToShowShareViewOrVideoParams::clear_btodisplayshare() {
  btodisplayshare_ = false;
  clear_has_btodisplayshare();
}
bool SwapToShowShareViewOrVideoParams::btodisplayshare() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams.bToDisplayShare)
  return btodisplayshare_;
}
void SwapToShowShareViewOrVideoParams::set_btodisplayshare(bool value) {
  set_has_btodisplayshare();
  btodisplayshare_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SwapToShowShareViewOrVideoParams.bToDisplayShare)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowSettingDlgParams::kHParentFieldNumber;
const int ShowSettingDlgParams::kLeftFieldNumber;
const int ShowSettingDlgParams::kTopFieldNumber;
const int ShowSettingDlgParams::kHSettingWndFieldNumber;
const int ShowSettingDlgParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowSettingDlgParams::ShowSettingDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ShowSettingDlgParams)
}
ShowSettingDlgParams::ShowSettingDlgParams(const ShowSettingDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  hsettingwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hsettingwnd()) {
    hsettingwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hsettingwnd_);
  }
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ShowSettingDlgParams)
}

void ShowSettingDlgParams::SharedCtor() {
  _cached_size_ = 0;
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hsettingwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bshow_ = false;
}

ShowSettingDlgParams::~ShowSettingDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ShowSettingDlgParams)
  SharedDtor();
}

void ShowSettingDlgParams::SharedDtor() {
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hsettingwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShowSettingDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ShowSettingDlgParams& ShowSettingDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowSettingDlgParams* ShowSettingDlgParams::New(::google::protobuf::Arena* arena) const {
  ShowSettingDlgParams* n = new ShowSettingDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowSettingDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ShowSettingDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!hsettingwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hsettingwnd_.UnsafeRawStringPointer())->clear();
    }
  }
  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShowSettingDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ShowSettingDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hParent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hSettingWnd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hsettingwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bShow = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ShowSettingDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ShowSettingDlgParams)
  return false;
#undef DO_
}

void ShowSettingDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ShowSettingDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string hParent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hparent(), output);
  }

  // optional string left = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->left(), output);
  }

  // optional string top = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->top(), output);
  }

  // optional string hSettingWnd = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hsettingwnd(), output);
  }

  // optional bool bShow = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ShowSettingDlgParams)
}

size_t ShowSettingDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ShowSettingDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string hParent = 1;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

    // optional string left = 2;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 3;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

    // optional string hSettingWnd = 4;
    if (has_hsettingwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hsettingwnd());
    }

    // optional bool bShow = 5;
    if (has_bshow()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowSettingDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ShowSettingDlgParams*>(&from));
}

void ShowSettingDlgParams::MergeFrom(const ShowSettingDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ShowSettingDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hsettingwnd();
      hsettingwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hsettingwnd_);
    }
    if (cached_has_bits & 0x00000010u) {
      bshow_ = from.bshow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShowSettingDlgParams::CopyFrom(const ShowSettingDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ShowSettingDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSettingDlgParams::IsInitialized() const {
  return true;
}

void ShowSettingDlgParams::Swap(ShowSettingDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowSettingDlgParams::InternalSwap(ShowSettingDlgParams* other) {
  using std::swap;
  hparent_.Swap(&other->hparent_);
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  hsettingwnd_.Swap(&other->hsettingwnd_);
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ShowSettingDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.ShowSettingDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowSettingDlgParams

// optional string hParent = 1;
bool ShowSettingDlgParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShowSettingDlgParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000001u;
}
void ShowSettingDlgParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShowSettingDlgParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& ShowSettingDlgParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  return hparent_.GetNoArena();
}
void ShowSettingDlgParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
#if LANG_CXX11
void ShowSettingDlgParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
#endif
void ShowSettingDlgParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
void ShowSettingDlgParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}
::std::string* ShowSettingDlgParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowSettingDlgParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowSettingDlgParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.hParent)
}

// optional string left = 2;
bool ShowSettingDlgParams::has_left() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShowSettingDlgParams::set_has_left() {
  _has_bits_[0] |= 0x00000002u;
}
void ShowSettingDlgParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShowSettingDlgParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& ShowSettingDlgParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.left)
  return left_.GetNoArena();
}
void ShowSettingDlgParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
#if LANG_CXX11
void ShowSettingDlgParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
#endif
void ShowSettingDlgParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
void ShowSettingDlgParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.left)
}
::std::string* ShowSettingDlgParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowSettingDlgParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowSettingDlgParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.left)
}

// optional string top = 3;
bool ShowSettingDlgParams::has_top() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShowSettingDlgParams::set_has_top() {
  _has_bits_[0] |= 0x00000004u;
}
void ShowSettingDlgParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShowSettingDlgParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& ShowSettingDlgParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.top)
  return top_.GetNoArena();
}
void ShowSettingDlgParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
#if LANG_CXX11
void ShowSettingDlgParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
#endif
void ShowSettingDlgParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
void ShowSettingDlgParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.top)
}
::std::string* ShowSettingDlgParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowSettingDlgParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowSettingDlgParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.top)
}

// optional string hSettingWnd = 4;
bool ShowSettingDlgParams::has_hsettingwnd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShowSettingDlgParams::set_has_hsettingwnd() {
  _has_bits_[0] |= 0x00000008u;
}
void ShowSettingDlgParams::clear_has_hsettingwnd() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShowSettingDlgParams::clear_hsettingwnd() {
  hsettingwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hsettingwnd();
}
const ::std::string& ShowSettingDlgParams::hsettingwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  return hsettingwnd_.GetNoArena();
}
void ShowSettingDlgParams::set_hsettingwnd(const ::std::string& value) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
#if LANG_CXX11
void ShowSettingDlgParams::set_hsettingwnd(::std::string&& value) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
#endif
void ShowSettingDlgParams::set_hsettingwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
void ShowSettingDlgParams::set_hsettingwnd(const char* value, size_t size) {
  set_has_hsettingwnd();
  hsettingwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}
::std::string* ShowSettingDlgParams::mutable_hsettingwnd() {
  set_has_hsettingwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  return hsettingwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShowSettingDlgParams::release_hsettingwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
  clear_has_hsettingwnd();
  return hsettingwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShowSettingDlgParams::set_allocated_hsettingwnd(::std::string* hsettingwnd) {
  if (hsettingwnd != NULL) {
    set_has_hsettingwnd();
  } else {
    clear_has_hsettingwnd();
  }
  hsettingwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hsettingwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ShowSettingDlgParams.hSettingWnd)
}

// optional bool bShow = 5;
bool ShowSettingDlgParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShowSettingDlgParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000010u;
}
void ShowSettingDlgParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShowSettingDlgParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool ShowSettingDlgParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ShowSettingDlgParams.bShow)
  return bshow_;
}
void ShowSettingDlgParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ShowSettingDlgParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleMeetingWithWndParams::kHSelfWndFieldNumber;
const int ScheduleMeetingWithWndParams::kHParentFieldNumber;
const int ScheduleMeetingWithWndParams::kLeftFieldNumber;
const int ScheduleMeetingWithWndParams::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleMeetingWithWndParams::ScheduleMeetingWithWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
}
ScheduleMeetingWithWndParams::ScheduleMeetingWithWndParams(const ScheduleMeetingWithWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hselfwnd()) {
    hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
  }
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
}

void ScheduleMeetingWithWndParams::SharedCtor() {
  _cached_size_ = 0;
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ScheduleMeetingWithWndParams::~ScheduleMeetingWithWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  SharedDtor();
}

void ScheduleMeetingWithWndParams::SharedDtor() {
  hselfwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScheduleMeetingWithWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ScheduleMeetingWithWndParams& ScheduleMeetingWithWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScheduleMeetingWithWndParams* ScheduleMeetingWithWndParams::New(::google::protobuf::Arena* arena) const {
  ScheduleMeetingWithWndParams* n = new ScheduleMeetingWithWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleMeetingWithWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hselfwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hselfwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScheduleMeetingWithWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hSelfWnd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hselfwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hParent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string left = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  return false;
#undef DO_
}

void ScheduleMeetingWithWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string hSelfWnd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hselfwnd(), output);
  }

  // optional string hParent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hparent(), output);
  }

  // optional string left = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->left(), output);
  }

  // optional string top = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->top(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
}

size_t ScheduleMeetingWithWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string hSelfWnd = 1;
    if (has_hselfwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hselfwnd());
    }

    // optional string hParent = 2;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

    // optional string left = 3;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 4;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleMeetingWithWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ScheduleMeetingWithWndParams*>(&from));
}

void ScheduleMeetingWithWndParams::MergeFrom(const ScheduleMeetingWithWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hselfwnd();
      hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
  }
}

void ScheduleMeetingWithWndParams::CopyFrom(const ScheduleMeetingWithWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ScheduleMeetingWithWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleMeetingWithWndParams::IsInitialized() const {
  return true;
}

void ScheduleMeetingWithWndParams::Swap(ScheduleMeetingWithWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleMeetingWithWndParams::InternalSwap(ScheduleMeetingWithWndParams* other) {
  using std::swap;
  hselfwnd_.Swap(&other->hselfwnd_);
  hparent_.Swap(&other->hparent_);
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ScheduleMeetingWithWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.ScheduleMeetingWithWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleMeetingWithWndParams

// optional string hSelfWnd = 1;
bool ScheduleMeetingWithWndParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScheduleMeetingWithWndParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000001u;
}
void ScheduleMeetingWithWndParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScheduleMeetingWithWndParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
const ::std::string& ScheduleMeetingWithWndParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
void ScheduleMeetingWithWndParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
#if LANG_CXX11
void ScheduleMeetingWithWndParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
#endif
void ScheduleMeetingWithWndParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
void ScheduleMeetingWithWndParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}
::std::string* ScheduleMeetingWithWndParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScheduleMeetingWithWndParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScheduleMeetingWithWndParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hSelfWnd)
}

// optional string hParent = 2;
bool ScheduleMeetingWithWndParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScheduleMeetingWithWndParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000002u;
}
void ScheduleMeetingWithWndParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScheduleMeetingWithWndParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& ScheduleMeetingWithWndParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  return hparent_.GetNoArena();
}
void ScheduleMeetingWithWndParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
#if LANG_CXX11
void ScheduleMeetingWithWndParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
#endif
void ScheduleMeetingWithWndParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
void ScheduleMeetingWithWndParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}
::std::string* ScheduleMeetingWithWndParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScheduleMeetingWithWndParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScheduleMeetingWithWndParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.hParent)
}

// optional string left = 3;
bool ScheduleMeetingWithWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScheduleMeetingWithWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000004u;
}
void ScheduleMeetingWithWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScheduleMeetingWithWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& ScheduleMeetingWithWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  return left_.GetNoArena();
}
void ScheduleMeetingWithWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
#if LANG_CXX11
void ScheduleMeetingWithWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
#endif
void ScheduleMeetingWithWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
void ScheduleMeetingWithWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}
::std::string* ScheduleMeetingWithWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScheduleMeetingWithWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScheduleMeetingWithWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.left)
}

// optional string top = 4;
bool ScheduleMeetingWithWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ScheduleMeetingWithWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000008u;
}
void ScheduleMeetingWithWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000008u;
}
void ScheduleMeetingWithWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& ScheduleMeetingWithWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  return top_.GetNoArena();
}
void ScheduleMeetingWithWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
#if LANG_CXX11
void ScheduleMeetingWithWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
#endif
void ScheduleMeetingWithWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
void ScheduleMeetingWithWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}
::std::string* ScheduleMeetingWithWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScheduleMeetingWithWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScheduleMeetingWithWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.ScheduleMeetingWithWndParams.top)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditMeetingParams::kMeetingNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditMeetingParams::EditMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EditMeetingParams)
}
EditMeetingParams::EditMeetingParams(const EditMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meetingnumber_ = from.meetingnumber_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EditMeetingParams)
}

void EditMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  meetingnumber_ = GOOGLE_ULONGLONG(0);
}

EditMeetingParams::~EditMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EditMeetingParams)
  SharedDtor();
}

void EditMeetingParams::SharedDtor() {
}

void EditMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EditMeetingParams& EditMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EditMeetingParams* EditMeetingParams::New(::google::protobuf::Arena* arena) const {
  EditMeetingParams* n = new EditMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EditMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meetingnumber_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EditMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EditMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EditMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EditMeetingParams)
  return false;
#undef DO_
}

void EditMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EditMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EditMeetingParams)
}

size_t EditMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EditMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 meetingNumber = 1;
  if (has_meetingnumber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->meetingnumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EditMeetingParams*>(&from));
}

void EditMeetingParams::MergeFrom(const EditMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EditMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meetingnumber()) {
    set_meetingnumber(from.meetingnumber());
  }
}

void EditMeetingParams::CopyFrom(const EditMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EditMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditMeetingParams::IsInitialized() const {
  return true;
}

void EditMeetingParams::Swap(EditMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditMeetingParams::InternalSwap(EditMeetingParams* other) {
  using std::swap;
  swap(meetingnumber_, other->meetingnumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EditMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EditMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditMeetingParams

// optional uint64 meetingNumber = 1;
bool EditMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EditMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
void EditMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
void EditMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 EditMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingParams.meetingNumber)
  return meetingnumber_;
}
void EditMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingParams.meetingNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditMeetingWithWndParams::kHSelfWndFieldNumber;
const int EditMeetingWithWndParams::kHParentFieldNumber;
const int EditMeetingWithWndParams::kLeftFieldNumber;
const int EditMeetingWithWndParams::kTopFieldNumber;
const int EditMeetingWithWndParams::kMeetingNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditMeetingWithWndParams::EditMeetingWithWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EditMeetingWithWndParams)
}
EditMeetingWithWndParams::EditMeetingWithWndParams(const EditMeetingWithWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hselfwnd()) {
    hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
  }
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  meetingnumber_ = from.meetingnumber_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EditMeetingWithWndParams)
}

void EditMeetingWithWndParams::SharedCtor() {
  _cached_size_ = 0;
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meetingnumber_ = GOOGLE_ULONGLONG(0);
}

EditMeetingWithWndParams::~EditMeetingWithWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EditMeetingWithWndParams)
  SharedDtor();
}

void EditMeetingWithWndParams::SharedDtor() {
  hselfwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EditMeetingWithWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EditMeetingWithWndParams& EditMeetingWithWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EditMeetingWithWndParams* EditMeetingWithWndParams::New(::google::protobuf::Arena* arena) const {
  EditMeetingWithWndParams* n = new EditMeetingWithWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditMeetingWithWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hselfwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hselfwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
  }
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EditMeetingWithWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hSelfWnd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hselfwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hParent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string left = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 meetingNumber = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EditMeetingWithWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EditMeetingWithWndParams)
  return false;
#undef DO_
}

void EditMeetingWithWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string hSelfWnd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hselfwnd(), output);
  }

  // optional string hParent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hparent(), output);
  }

  // optional string left = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->left(), output);
  }

  // optional string top = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->top(), output);
  }

  // optional uint64 meetingNumber = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->meetingnumber(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EditMeetingWithWndParams)
}

size_t EditMeetingWithWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional string hSelfWnd = 1;
    if (has_hselfwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hselfwnd());
    }

    // optional string hParent = 2;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

    // optional string left = 3;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 4;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

    // optional uint64 meetingNumber = 5;
    if (has_meetingnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->meetingnumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditMeetingWithWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EditMeetingWithWndParams*>(&from));
}

void EditMeetingWithWndParams::MergeFrom(const EditMeetingWithWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hselfwnd();
      hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
    if (cached_has_bits & 0x00000010u) {
      meetingnumber_ = from.meetingnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EditMeetingWithWndParams::CopyFrom(const EditMeetingWithWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EditMeetingWithWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditMeetingWithWndParams::IsInitialized() const {
  return true;
}

void EditMeetingWithWndParams::Swap(EditMeetingWithWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditMeetingWithWndParams::InternalSwap(EditMeetingWithWndParams* other) {
  using std::swap;
  hselfwnd_.Swap(&other->hselfwnd_);
  hparent_.Swap(&other->hparent_);
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  swap(meetingnumber_, other->meetingnumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EditMeetingWithWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.EditMeetingWithWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditMeetingWithWndParams

// optional string hSelfWnd = 1;
bool EditMeetingWithWndParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EditMeetingWithWndParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000001u;
}
void EditMeetingWithWndParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000001u;
}
void EditMeetingWithWndParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
const ::std::string& EditMeetingWithWndParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
void EditMeetingWithWndParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
#if LANG_CXX11
void EditMeetingWithWndParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
#endif
void EditMeetingWithWndParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
void EditMeetingWithWndParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}
::std::string* EditMeetingWithWndParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditMeetingWithWndParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditMeetingWithWndParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.hSelfWnd)
}

// optional string hParent = 2;
bool EditMeetingWithWndParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EditMeetingWithWndParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000002u;
}
void EditMeetingWithWndParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000002u;
}
void EditMeetingWithWndParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& EditMeetingWithWndParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  return hparent_.GetNoArena();
}
void EditMeetingWithWndParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
#if LANG_CXX11
void EditMeetingWithWndParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
#endif
void EditMeetingWithWndParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
void EditMeetingWithWndParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}
::std::string* EditMeetingWithWndParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditMeetingWithWndParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditMeetingWithWndParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.hParent)
}

// optional string left = 3;
bool EditMeetingWithWndParams::has_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EditMeetingWithWndParams::set_has_left() {
  _has_bits_[0] |= 0x00000004u;
}
void EditMeetingWithWndParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000004u;
}
void EditMeetingWithWndParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& EditMeetingWithWndParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  return left_.GetNoArena();
}
void EditMeetingWithWndParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
#if LANG_CXX11
void EditMeetingWithWndParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
#endif
void EditMeetingWithWndParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
void EditMeetingWithWndParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}
::std::string* EditMeetingWithWndParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditMeetingWithWndParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditMeetingWithWndParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.left)
}

// optional string top = 4;
bool EditMeetingWithWndParams::has_top() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EditMeetingWithWndParams::set_has_top() {
  _has_bits_[0] |= 0x00000008u;
}
void EditMeetingWithWndParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000008u;
}
void EditMeetingWithWndParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& EditMeetingWithWndParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  return top_.GetNoArena();
}
void EditMeetingWithWndParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
#if LANG_CXX11
void EditMeetingWithWndParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
#endif
void EditMeetingWithWndParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
void EditMeetingWithWndParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}
::std::string* EditMeetingWithWndParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditMeetingWithWndParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.EditMeetingWithWndParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditMeetingWithWndParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.EditMeetingWithWndParams.top)
}

// optional uint64 meetingNumber = 5;
bool EditMeetingWithWndParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EditMeetingWithWndParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000010u;
}
void EditMeetingWithWndParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000010u;
}
void EditMeetingWithWndParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 EditMeetingWithWndParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EditMeetingWithWndParams.meetingNumber)
  return meetingnumber_;
}
void EditMeetingWithWndParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EditMeetingWithWndParams.meetingNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMeetingParams::kMeetingNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMeetingParams::DeleteMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DeleteMeetingParams)
}
DeleteMeetingParams::DeleteMeetingParams(const DeleteMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meetingnumber_ = from.meetingnumber_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DeleteMeetingParams)
}

void DeleteMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  meetingnumber_ = GOOGLE_ULONGLONG(0);
}

DeleteMeetingParams::~DeleteMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DeleteMeetingParams)
  SharedDtor();
}

void DeleteMeetingParams::SharedDtor() {
}

void DeleteMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DeleteMeetingParams& DeleteMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteMeetingParams* DeleteMeetingParams::New(::google::protobuf::Arena* arena) const {
  DeleteMeetingParams* n = new DeleteMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DeleteMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meetingnumber_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DeleteMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DeleteMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DeleteMeetingParams)
  return false;
#undef DO_
}

void DeleteMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DeleteMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DeleteMeetingParams)
}

size_t DeleteMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DeleteMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 meetingNumber = 1;
  if (has_meetingnumber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->meetingnumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeleteMeetingParams*>(&from));
}

void DeleteMeetingParams::MergeFrom(const DeleteMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DeleteMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meetingnumber()) {
    set_meetingnumber(from.meetingnumber());
  }
}

void DeleteMeetingParams::CopyFrom(const DeleteMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DeleteMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMeetingParams::IsInitialized() const {
  return true;
}

void DeleteMeetingParams::Swap(DeleteMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMeetingParams::InternalSwap(DeleteMeetingParams* other) {
  using std::swap;
  swap(meetingnumber_, other->meetingnumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DeleteMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.DeleteMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteMeetingParams

// optional uint64 meetingNumber = 1;
bool DeleteMeetingParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeleteMeetingParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
void DeleteMeetingParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeleteMeetingParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 DeleteMeetingParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DeleteMeetingParams.meetingNumber)
  return meetingnumber_;
}
void DeleteMeetingParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DeleteMeetingParams.meetingNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddCustomizedPictureResourceParams::kStrPNGIDFieldNumber;
const int AddCustomizedPictureResourceParams::kStrPNGPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddCustomizedPictureResourceParams::AddCustomizedPictureResourceParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
}
AddCustomizedPictureResourceParams::AddCustomizedPictureResourceParams(const AddCustomizedPictureResourceParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strpngid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strpngid()) {
    strpngid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpngid_);
  }
  strpngpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strpngpath()) {
    strpngpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpngpath_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
}

void AddCustomizedPictureResourceParams::SharedCtor() {
  _cached_size_ = 0;
  strpngid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpngpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddCustomizedPictureResourceParams::~AddCustomizedPictureResourceParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  SharedDtor();
}

void AddCustomizedPictureResourceParams::SharedDtor() {
  strpngid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpngpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddCustomizedPictureResourceParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddCustomizedPictureResourceParams& AddCustomizedPictureResourceParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddCustomizedPictureResourceParams* AddCustomizedPictureResourceParams::New(::google::protobuf::Arena* arena) const {
  AddCustomizedPictureResourceParams* n = new AddCustomizedPictureResourceParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddCustomizedPictureResourceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!strpngid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strpngid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!strpngpath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strpngpath_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddCustomizedPictureResourceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strPNGID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpngid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strPNGPath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpngpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  return false;
#undef DO_
}

void AddCustomizedPictureResourceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string strPNGID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strpngid(), output);
  }

  // optional string strPNGPath = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strpngpath(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
}

size_t AddCustomizedPictureResourceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string strPNGID = 1;
    if (has_strpngid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpngid());
    }

    // optional string strPNGPath = 2;
    if (has_strpngpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpngpath());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddCustomizedPictureResourceParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddCustomizedPictureResourceParams*>(&from));
}

void AddCustomizedPictureResourceParams::MergeFrom(const AddCustomizedPictureResourceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strpngid();
      strpngid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpngid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_strpngpath();
      strpngpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpngpath_);
    }
  }
}

void AddCustomizedPictureResourceParams::CopyFrom(const AddCustomizedPictureResourceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AddCustomizedPictureResourceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddCustomizedPictureResourceParams::IsInitialized() const {
  return true;
}

void AddCustomizedPictureResourceParams::Swap(AddCustomizedPictureResourceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddCustomizedPictureResourceParams::InternalSwap(AddCustomizedPictureResourceParams* other) {
  using std::swap;
  strpngid_.Swap(&other->strpngid_);
  strpngpath_.Swap(&other->strpngpath_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AddCustomizedPictureResourceParams::GetTypeName() const {
  return "com.electron.sdk.proto.AddCustomizedPictureResourceParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddCustomizedPictureResourceParams

// optional string strPNGID = 1;
bool AddCustomizedPictureResourceParams::has_strpngid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddCustomizedPictureResourceParams::set_has_strpngid() {
  _has_bits_[0] |= 0x00000001u;
}
void AddCustomizedPictureResourceParams::clear_has_strpngid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddCustomizedPictureResourceParams::clear_strpngid() {
  strpngid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strpngid();
}
const ::std::string& AddCustomizedPictureResourceParams::strpngid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  return strpngid_.GetNoArena();
}
void AddCustomizedPictureResourceParams::set_strpngid(const ::std::string& value) {
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
#if LANG_CXX11
void AddCustomizedPictureResourceParams::set_strpngid(::std::string&& value) {
  set_has_strpngid();
  strpngid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
#endif
void AddCustomizedPictureResourceParams::set_strpngid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
void AddCustomizedPictureResourceParams::set_strpngid(const char* value, size_t size) {
  set_has_strpngid();
  strpngid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}
::std::string* AddCustomizedPictureResourceParams::mutable_strpngid() {
  set_has_strpngid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  return strpngid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddCustomizedPictureResourceParams::release_strpngid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
  clear_has_strpngid();
  return strpngid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddCustomizedPictureResourceParams::set_allocated_strpngid(::std::string* strpngid) {
  if (strpngid != NULL) {
    set_has_strpngid();
  } else {
    clear_has_strpngid();
  }
  strpngid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpngid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGID)
}

// optional string strPNGPath = 2;
bool AddCustomizedPictureResourceParams::has_strpngpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddCustomizedPictureResourceParams::set_has_strpngpath() {
  _has_bits_[0] |= 0x00000002u;
}
void AddCustomizedPictureResourceParams::clear_has_strpngpath() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddCustomizedPictureResourceParams::clear_strpngpath() {
  strpngpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strpngpath();
}
const ::std::string& AddCustomizedPictureResourceParams::strpngpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  return strpngpath_.GetNoArena();
}
void AddCustomizedPictureResourceParams::set_strpngpath(const ::std::string& value) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
#if LANG_CXX11
void AddCustomizedPictureResourceParams::set_strpngpath(::std::string&& value) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
#endif
void AddCustomizedPictureResourceParams::set_strpngpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
void AddCustomizedPictureResourceParams::set_strpngpath(const char* value, size_t size) {
  set_has_strpngpath();
  strpngpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}
::std::string* AddCustomizedPictureResourceParams::mutable_strpngpath() {
  set_has_strpngpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  return strpngpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddCustomizedPictureResourceParams::release_strpngpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
  clear_has_strpngpath();
  return strpngpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddCustomizedPictureResourceParams::set_allocated_strpngpath(::std::string* strpngpath) {
  if (strpngpath != NULL) {
    set_has_strpngpath();
  } else {
    clear_has_strpngpath();
  }
  strpngpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpngpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedPictureResourceParams.strPNGPath)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddCustomizedStringResourceParams::kCustomizedStringTypeFieldNumber;
const int AddCustomizedStringResourceParams::kStrCustomizedStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddCustomizedStringResourceParams::AddCustomizedStringResourceParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AddCustomizedStringResourceParams)
}
AddCustomizedStringResourceParams::AddCustomizedStringResourceParams(const AddCustomizedStringResourceParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcustomizedstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strcustomizedstring()) {
    strcustomizedstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcustomizedstring_);
  }
  customizedstringtype_ = from.customizedstringtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AddCustomizedStringResourceParams)
}

void AddCustomizedStringResourceParams::SharedCtor() {
  _cached_size_ = 0;
  strcustomizedstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedstringtype_ = 0;
}

AddCustomizedStringResourceParams::~AddCustomizedStringResourceParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  SharedDtor();
}

void AddCustomizedStringResourceParams::SharedDtor() {
  strcustomizedstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddCustomizedStringResourceParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddCustomizedStringResourceParams& AddCustomizedStringResourceParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddCustomizedStringResourceParams* AddCustomizedStringResourceParams::New(::google::protobuf::Arena* arena) const {
  AddCustomizedStringResourceParams* n = new AddCustomizedStringResourceParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddCustomizedStringResourceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_strcustomizedstring()) {
    GOOGLE_DCHECK(!strcustomizedstring_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*strcustomizedstring_.UnsafeRawStringPointer())->clear();
  }
  customizedstringtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddCustomizedStringResourceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 customizedStringType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_customizedstringtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &customizedstringtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strCustomizedString = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcustomizedstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  return false;
#undef DO_
}

void AddCustomizedStringResourceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 customizedStringType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->customizedstringtype(), output);
  }

  // optional string strCustomizedString = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcustomizedstring(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AddCustomizedStringResourceParams)
}

size_t AddCustomizedStringResourceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string strCustomizedString = 2;
    if (has_strcustomizedstring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcustomizedstring());
    }

    // optional int32 customizedStringType = 1;
    if (has_customizedstringtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->customizedstringtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddCustomizedStringResourceParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddCustomizedStringResourceParams*>(&from));
}

void AddCustomizedStringResourceParams::MergeFrom(const AddCustomizedStringResourceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strcustomizedstring();
      strcustomizedstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcustomizedstring_);
    }
    if (cached_has_bits & 0x00000002u) {
      customizedstringtype_ = from.customizedstringtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddCustomizedStringResourceParams::CopyFrom(const AddCustomizedStringResourceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AddCustomizedStringResourceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddCustomizedStringResourceParams::IsInitialized() const {
  return true;
}

void AddCustomizedStringResourceParams::Swap(AddCustomizedStringResourceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddCustomizedStringResourceParams::InternalSwap(AddCustomizedStringResourceParams* other) {
  using std::swap;
  strcustomizedstring_.Swap(&other->strcustomizedstring_);
  swap(customizedstringtype_, other->customizedstringtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AddCustomizedStringResourceParams::GetTypeName() const {
  return "com.electron.sdk.proto.AddCustomizedStringResourceParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddCustomizedStringResourceParams

// optional int32 customizedStringType = 1;
bool AddCustomizedStringResourceParams::has_customizedstringtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddCustomizedStringResourceParams::set_has_customizedstringtype() {
  _has_bits_[0] |= 0x00000002u;
}
void AddCustomizedStringResourceParams::clear_has_customizedstringtype() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddCustomizedStringResourceParams::clear_customizedstringtype() {
  customizedstringtype_ = 0;
  clear_has_customizedstringtype();
}
::google::protobuf::int32 AddCustomizedStringResourceParams::customizedstringtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedStringResourceParams.customizedStringType)
  return customizedstringtype_;
}
void AddCustomizedStringResourceParams::set_customizedstringtype(::google::protobuf::int32 value) {
  set_has_customizedstringtype();
  customizedstringtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedStringResourceParams.customizedStringType)
}

// optional string strCustomizedString = 2;
bool AddCustomizedStringResourceParams::has_strcustomizedstring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddCustomizedStringResourceParams::set_has_strcustomizedstring() {
  _has_bits_[0] |= 0x00000001u;
}
void AddCustomizedStringResourceParams::clear_has_strcustomizedstring() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddCustomizedStringResourceParams::clear_strcustomizedstring() {
  strcustomizedstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strcustomizedstring();
}
const ::std::string& AddCustomizedStringResourceParams::strcustomizedstring() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  return strcustomizedstring_.GetNoArena();
}
void AddCustomizedStringResourceParams::set_strcustomizedstring(const ::std::string& value) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
#if LANG_CXX11
void AddCustomizedStringResourceParams::set_strcustomizedstring(::std::string&& value) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
#endif
void AddCustomizedStringResourceParams::set_strcustomizedstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
void AddCustomizedStringResourceParams::set_strcustomizedstring(const char* value, size_t size) {
  set_has_strcustomizedstring();
  strcustomizedstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}
::std::string* AddCustomizedStringResourceParams::mutable_strcustomizedstring() {
  set_has_strcustomizedstring();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  return strcustomizedstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddCustomizedStringResourceParams::release_strcustomizedstring() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
  clear_has_strcustomizedstring();
  return strcustomizedstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddCustomizedStringResourceParams::set_allocated_strcustomizedstring(::std::string* strcustomizedstring) {
  if (strcustomizedstring != NULL) {
    set_has_strcustomizedstring();
  } else {
    clear_has_strcustomizedstring();
  }
  strcustomizedstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcustomizedstring);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedStringResourceParams.strCustomizedString)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddCustomizedURLResourceParams::kCustomizedURLTypeFieldNumber;
const int AddCustomizedURLResourceParams::kStrCustomizedURLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddCustomizedURLResourceParams::AddCustomizedURLResourceParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AddCustomizedURLResourceParams)
}
AddCustomizedURLResourceParams::AddCustomizedURLResourceParams(const AddCustomizedURLResourceParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcustomizedurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strcustomizedurl()) {
    strcustomizedurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcustomizedurl_);
  }
  customizedurltype_ = from.customizedurltype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AddCustomizedURLResourceParams)
}

void AddCustomizedURLResourceParams::SharedCtor() {
  _cached_size_ = 0;
  strcustomizedurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customizedurltype_ = 0;
}

AddCustomizedURLResourceParams::~AddCustomizedURLResourceParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  SharedDtor();
}

void AddCustomizedURLResourceParams::SharedDtor() {
  strcustomizedurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddCustomizedURLResourceParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddCustomizedURLResourceParams& AddCustomizedURLResourceParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddCustomizedURLResourceParams* AddCustomizedURLResourceParams::New(::google::protobuf::Arena* arena) const {
  AddCustomizedURLResourceParams* n = new AddCustomizedURLResourceParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddCustomizedURLResourceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_strcustomizedurl()) {
    GOOGLE_DCHECK(!strcustomizedurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*strcustomizedurl_.UnsafeRawStringPointer())->clear();
  }
  customizedurltype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddCustomizedURLResourceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 customizedURLType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_customizedurltype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &customizedurltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strCustomizedURL = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcustomizedurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  return false;
#undef DO_
}

void AddCustomizedURLResourceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 customizedURLType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->customizedurltype(), output);
  }

  // optional string strCustomizedURL = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcustomizedurl(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AddCustomizedURLResourceParams)
}

size_t AddCustomizedURLResourceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string strCustomizedURL = 2;
    if (has_strcustomizedurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcustomizedurl());
    }

    // optional int32 customizedURLType = 1;
    if (has_customizedurltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->customizedurltype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddCustomizedURLResourceParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddCustomizedURLResourceParams*>(&from));
}

void AddCustomizedURLResourceParams::MergeFrom(const AddCustomizedURLResourceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strcustomizedurl();
      strcustomizedurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcustomizedurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      customizedurltype_ = from.customizedurltype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddCustomizedURLResourceParams::CopyFrom(const AddCustomizedURLResourceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AddCustomizedURLResourceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddCustomizedURLResourceParams::IsInitialized() const {
  return true;
}

void AddCustomizedURLResourceParams::Swap(AddCustomizedURLResourceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddCustomizedURLResourceParams::InternalSwap(AddCustomizedURLResourceParams* other) {
  using std::swap;
  strcustomizedurl_.Swap(&other->strcustomizedurl_);
  swap(customizedurltype_, other->customizedurltype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AddCustomizedURLResourceParams::GetTypeName() const {
  return "com.electron.sdk.proto.AddCustomizedURLResourceParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddCustomizedURLResourceParams

// optional int32 customizedURLType = 1;
bool AddCustomizedURLResourceParams::has_customizedurltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddCustomizedURLResourceParams::set_has_customizedurltype() {
  _has_bits_[0] |= 0x00000002u;
}
void AddCustomizedURLResourceParams::clear_has_customizedurltype() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddCustomizedURLResourceParams::clear_customizedurltype() {
  customizedurltype_ = 0;
  clear_has_customizedurltype();
}
::google::protobuf::int32 AddCustomizedURLResourceParams::customizedurltype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedURLResourceParams.customizedURLType)
  return customizedurltype_;
}
void AddCustomizedURLResourceParams::set_customizedurltype(::google::protobuf::int32 value) {
  set_has_customizedurltype();
  customizedurltype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedURLResourceParams.customizedURLType)
}

// optional string strCustomizedURL = 2;
bool AddCustomizedURLResourceParams::has_strcustomizedurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddCustomizedURLResourceParams::set_has_strcustomizedurl() {
  _has_bits_[0] |= 0x00000001u;
}
void AddCustomizedURLResourceParams::clear_has_strcustomizedurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddCustomizedURLResourceParams::clear_strcustomizedurl() {
  strcustomizedurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strcustomizedurl();
}
const ::std::string& AddCustomizedURLResourceParams::strcustomizedurl() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  return strcustomizedurl_.GetNoArena();
}
void AddCustomizedURLResourceParams::set_strcustomizedurl(const ::std::string& value) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
#if LANG_CXX11
void AddCustomizedURLResourceParams::set_strcustomizedurl(::std::string&& value) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
#endif
void AddCustomizedURLResourceParams::set_strcustomizedurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
void AddCustomizedURLResourceParams::set_strcustomizedurl(const char* value, size_t size) {
  set_has_strcustomizedurl();
  strcustomizedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}
::std::string* AddCustomizedURLResourceParams::mutable_strcustomizedurl() {
  set_has_strcustomizedurl();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  return strcustomizedurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddCustomizedURLResourceParams::release_strcustomizedurl() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
  clear_has_strcustomizedurl();
  return strcustomizedurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddCustomizedURLResourceParams::set_allocated_strcustomizedurl(::std::string* strcustomizedurl) {
  if (strcustomizedurl != NULL) {
    set_has_strcustomizedurl();
  } else {
    clear_has_strcustomizedurl();
  }
  strcustomizedurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcustomizedurl);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.AddCustomizedURLResourceParams.strCustomizedURL)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TryWithMeetingNumberParams::kMeetingNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TryWithMeetingNumberParams::TryWithMeetingNumberParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.TryWithMeetingNumberParams)
}
TryWithMeetingNumberParams::TryWithMeetingNumberParams(const TryWithMeetingNumberParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meetingnumber_ = from.meetingnumber_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.TryWithMeetingNumberParams)
}

void TryWithMeetingNumberParams::SharedCtor() {
  _cached_size_ = 0;
  meetingnumber_ = GOOGLE_ULONGLONG(0);
}

TryWithMeetingNumberParams::~TryWithMeetingNumberParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.TryWithMeetingNumberParams)
  SharedDtor();
}

void TryWithMeetingNumberParams::SharedDtor() {
}

void TryWithMeetingNumberParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TryWithMeetingNumberParams& TryWithMeetingNumberParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

TryWithMeetingNumberParams* TryWithMeetingNumberParams::New(::google::protobuf::Arena* arena) const {
  TryWithMeetingNumberParams* n = new TryWithMeetingNumberParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TryWithMeetingNumberParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meetingnumber_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TryWithMeetingNumberParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 meetingNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_meetingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &meetingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.TryWithMeetingNumberParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.TryWithMeetingNumberParams)
  return false;
#undef DO_
}

void TryWithMeetingNumberParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 meetingNumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->meetingnumber(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.TryWithMeetingNumberParams)
}

size_t TryWithMeetingNumberParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 meetingNumber = 1;
  if (has_meetingnumber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->meetingnumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TryWithMeetingNumberParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TryWithMeetingNumberParams*>(&from));
}

void TryWithMeetingNumberParams::MergeFrom(const TryWithMeetingNumberParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meetingnumber()) {
    set_meetingnumber(from.meetingnumber());
  }
}

void TryWithMeetingNumberParams::CopyFrom(const TryWithMeetingNumberParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.TryWithMeetingNumberParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryWithMeetingNumberParams::IsInitialized() const {
  return true;
}

void TryWithMeetingNumberParams::Swap(TryWithMeetingNumberParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TryWithMeetingNumberParams::InternalSwap(TryWithMeetingNumberParams* other) {
  using std::swap;
  swap(meetingnumber_, other->meetingnumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TryWithMeetingNumberParams::GetTypeName() const {
  return "com.electron.sdk.proto.TryWithMeetingNumberParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TryWithMeetingNumberParams

// optional uint64 meetingNumber = 1;
bool TryWithMeetingNumberParams::has_meetingnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TryWithMeetingNumberParams::set_has_meetingnumber() {
  _has_bits_[0] |= 0x00000001u;
}
void TryWithMeetingNumberParams::clear_has_meetingnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
void TryWithMeetingNumberParams::clear_meetingnumber() {
  meetingnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_meetingnumber();
}
::google::protobuf::uint64 TryWithMeetingNumberParams::meetingnumber() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TryWithMeetingNumberParams.meetingNumber)
  return meetingnumber_;
}
void TryWithMeetingNumberParams::set_meetingnumber(::google::protobuf::uint64 value) {
  set_has_meetingnumber();
  meetingnumber_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TryWithMeetingNumberParams.meetingNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TryWithPairingCodeParams::kParingCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TryWithPairingCodeParams::TryWithPairingCodeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.TryWithPairingCodeParams)
}
TryWithPairingCodeParams::TryWithPairingCodeParams(const TryWithPairingCodeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paringcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_paringcode()) {
    paringcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paringcode_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.TryWithPairingCodeParams)
}

void TryWithPairingCodeParams::SharedCtor() {
  _cached_size_ = 0;
  paringcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TryWithPairingCodeParams::~TryWithPairingCodeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.TryWithPairingCodeParams)
  SharedDtor();
}

void TryWithPairingCodeParams::SharedDtor() {
  paringcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TryWithPairingCodeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TryWithPairingCodeParams& TryWithPairingCodeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

TryWithPairingCodeParams* TryWithPairingCodeParams::New(::google::protobuf::Arena* arena) const {
  TryWithPairingCodeParams* n = new TryWithPairingCodeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TryWithPairingCodeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_paringcode()) {
    GOOGLE_DCHECK(!paringcode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*paringcode_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TryWithPairingCodeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string paringCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paringcode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.TryWithPairingCodeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.TryWithPairingCodeParams)
  return false;
#undef DO_
}

void TryWithPairingCodeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string paringCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->paringcode(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.TryWithPairingCodeParams)
}

size_t TryWithPairingCodeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string paringCode = 1;
  if (has_paringcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paringcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TryWithPairingCodeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TryWithPairingCodeParams*>(&from));
}

void TryWithPairingCodeParams::MergeFrom(const TryWithPairingCodeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_paringcode()) {
    set_has_paringcode();
    paringcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paringcode_);
  }
}

void TryWithPairingCodeParams::CopyFrom(const TryWithPairingCodeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.TryWithPairingCodeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryWithPairingCodeParams::IsInitialized() const {
  return true;
}

void TryWithPairingCodeParams::Swap(TryWithPairingCodeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TryWithPairingCodeParams::InternalSwap(TryWithPairingCodeParams* other) {
  using std::swap;
  paringcode_.Swap(&other->paringcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TryWithPairingCodeParams::GetTypeName() const {
  return "com.electron.sdk.proto.TryWithPairingCodeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TryWithPairingCodeParams

// optional string paringCode = 1;
bool TryWithPairingCodeParams::has_paringcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TryWithPairingCodeParams::set_has_paringcode() {
  _has_bits_[0] |= 0x00000001u;
}
void TryWithPairingCodeParams::clear_has_paringcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void TryWithPairingCodeParams::clear_paringcode() {
  paringcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paringcode();
}
const ::std::string& TryWithPairingCodeParams::paringcode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  return paringcode_.GetNoArena();
}
void TryWithPairingCodeParams::set_paringcode(const ::std::string& value) {
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
#if LANG_CXX11
void TryWithPairingCodeParams::set_paringcode(::std::string&& value) {
  set_has_paringcode();
  paringcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
#endif
void TryWithPairingCodeParams::set_paringcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
void TryWithPairingCodeParams::set_paringcode(const char* value, size_t size) {
  set_has_paringcode();
  paringcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}
::std::string* TryWithPairingCodeParams::mutable_paringcode() {
  set_has_paringcode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  return paringcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TryWithPairingCodeParams::release_paringcode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
  clear_has_paringcode();
  return paringcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TryWithPairingCodeParams::set_allocated_paringcode(::std::string* paringcode) {
  if (paringcode != NULL) {
    set_has_paringcode();
  } else {
    clear_has_paringcode();
  }
  paringcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paringcode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.TryWithPairingCodeParams.paringCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartAnnotationParams::kViewTypeFieldNumber;
const int StartAnnotationParams::kLeftFieldNumber;
const int StartAnnotationParams::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartAnnotationParams::StartAnnotationParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartAnnotationParams)
}
StartAnnotationParams::StartAnnotationParams(const StartAnnotationParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartAnnotationParams)
}

void StartAnnotationParams::SharedCtor() {
  _cached_size_ = 0;
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewtype_ = 0;
}

StartAnnotationParams::~StartAnnotationParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartAnnotationParams)
  SharedDtor();
}

void StartAnnotationParams::SharedDtor() {
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartAnnotationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartAnnotationParams& StartAnnotationParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartAnnotationParams* StartAnnotationParams::New(::google::protobuf::Arena* arena) const {
  StartAnnotationParams* n = new StartAnnotationParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartAnnotationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
  }
  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartAnnotationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartAnnotationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartAnnotationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartAnnotationParams)
  return false;
#undef DO_
}

void StartAnnotationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  // optional string left = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->left(), output);
  }

  // optional string top = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->top(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartAnnotationParams)
}

size_t StartAnnotationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartAnnotationParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string left = 2;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 3;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

    // optional int32 viewType = 1;
    if (has_viewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartAnnotationParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartAnnotationParams*>(&from));
}

void StartAnnotationParams::MergeFrom(const StartAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartAnnotationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
    if (cached_has_bits & 0x00000004u) {
      viewtype_ = from.viewtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartAnnotationParams::CopyFrom(const StartAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartAnnotationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartAnnotationParams::IsInitialized() const {
  return true;
}

void StartAnnotationParams::Swap(StartAnnotationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartAnnotationParams::InternalSwap(StartAnnotationParams* other) {
  using std::swap;
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartAnnotationParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartAnnotationParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartAnnotationParams

// optional int32 viewType = 1;
bool StartAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StartAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000004u;
}
void StartAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000004u;
}
void StartAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 StartAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.viewType)
  return viewtype_;
}
void StartAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.viewType)
}

// optional string left = 2;
bool StartAnnotationParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartAnnotationParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void StartAnnotationParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartAnnotationParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& StartAnnotationParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.left)
  return left_.GetNoArena();
}
void StartAnnotationParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.left)
}
#if LANG_CXX11
void StartAnnotationParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAnnotationParams.left)
}
#endif
void StartAnnotationParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAnnotationParams.left)
}
void StartAnnotationParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAnnotationParams.left)
}
::std::string* StartAnnotationParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAnnotationParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartAnnotationParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAnnotationParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartAnnotationParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAnnotationParams.left)
}

// optional string top = 3;
bool StartAnnotationParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StartAnnotationParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
void StartAnnotationParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
void StartAnnotationParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& StartAnnotationParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAnnotationParams.top)
  return top_.GetNoArena();
}
void StartAnnotationParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAnnotationParams.top)
}
#if LANG_CXX11
void StartAnnotationParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAnnotationParams.top)
}
#endif
void StartAnnotationParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAnnotationParams.top)
}
void StartAnnotationParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAnnotationParams.top)
}
::std::string* StartAnnotationParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAnnotationParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartAnnotationParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAnnotationParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartAnnotationParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAnnotationParams.top)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopAnnotationParams::kViewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopAnnotationParams::StopAnnotationParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StopAnnotationParams)
}
StopAnnotationParams::StopAnnotationParams(const StopAnnotationParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StopAnnotationParams)
}

void StopAnnotationParams::SharedCtor() {
  _cached_size_ = 0;
  viewtype_ = 0;
}

StopAnnotationParams::~StopAnnotationParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StopAnnotationParams)
  SharedDtor();
}

void StopAnnotationParams::SharedDtor() {
}

void StopAnnotationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StopAnnotationParams& StopAnnotationParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopAnnotationParams* StopAnnotationParams::New(::google::protobuf::Arena* arena) const {
  StopAnnotationParams* n = new StopAnnotationParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopAnnotationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StopAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StopAnnotationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StopAnnotationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StopAnnotationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StopAnnotationParams)
  return false;
#undef DO_
}

void StopAnnotationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StopAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StopAnnotationParams)
}

size_t StopAnnotationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StopAnnotationParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 viewType = 1;
  if (has_viewtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viewtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopAnnotationParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StopAnnotationParams*>(&from));
}

void StopAnnotationParams::MergeFrom(const StopAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StopAnnotationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewtype()) {
    set_viewtype(from.viewtype());
  }
}

void StopAnnotationParams::CopyFrom(const StopAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StopAnnotationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopAnnotationParams::IsInitialized() const {
  return true;
}

void StopAnnotationParams::Swap(StopAnnotationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopAnnotationParams::InternalSwap(StopAnnotationParams* other) {
  using std::swap;
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StopAnnotationParams::GetTypeName() const {
  return "com.electron.sdk.proto.StopAnnotationParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopAnnotationParams

// optional int32 viewType = 1;
bool StopAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StopAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
void StopAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void StopAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 StopAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StopAnnotationParams.viewType)
  return viewtype_;
}
void StopAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StopAnnotationParams.viewType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetToolParams::kViewTypeFieldNumber;
const int SetToolParams::kToolTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetToolParams::SetToolParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetToolParams)
}
SetToolParams::SetToolParams(const SetToolParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewtype_, &from.viewtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&tooltype_) -
    reinterpret_cast<char*>(&viewtype_)) + sizeof(tooltype_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetToolParams)
}

void SetToolParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&viewtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tooltype_) -
      reinterpret_cast<char*>(&viewtype_)) + sizeof(tooltype_));
}

SetToolParams::~SetToolParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetToolParams)
  SharedDtor();
}

void SetToolParams::SharedDtor() {
}

void SetToolParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetToolParams& SetToolParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetToolParams* SetToolParams::New(::google::protobuf::Arena* arena) const {
  SetToolParams* n = new SetToolParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetToolParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetToolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&viewtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tooltype_) -
        reinterpret_cast<char*>(&viewtype_)) + sizeof(tooltype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetToolParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetToolParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toolType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tooltype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tooltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetToolParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetToolParams)
  return false;
#undef DO_
}

void SetToolParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetToolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  // optional int32 toolType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tooltype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetToolParams)
}

size_t SetToolParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetToolParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 viewType = 1;
    if (has_viewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewtype());
    }

    // optional int32 toolType = 2;
    if (has_tooltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tooltype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetToolParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetToolParams*>(&from));
}

void SetToolParams::MergeFrom(const SetToolParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetToolParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      viewtype_ = from.viewtype_;
    }
    if (cached_has_bits & 0x00000002u) {
      tooltype_ = from.tooltype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetToolParams::CopyFrom(const SetToolParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetToolParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetToolParams::IsInitialized() const {
  return true;
}

void SetToolParams::Swap(SetToolParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetToolParams::InternalSwap(SetToolParams* other) {
  using std::swap;
  swap(viewtype_, other->viewtype_);
  swap(tooltype_, other->tooltype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetToolParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetToolParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetToolParams

// optional int32 viewType = 1;
bool SetToolParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetToolParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
void SetToolParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetToolParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 SetToolParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetToolParams.viewType)
  return viewtype_;
}
void SetToolParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetToolParams.viewType)
}

// optional int32 toolType = 2;
bool SetToolParams::has_tooltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetToolParams::set_has_tooltype() {
  _has_bits_[0] |= 0x00000002u;
}
void SetToolParams::clear_has_tooltype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetToolParams::clear_tooltype() {
  tooltype_ = 0;
  clear_has_tooltype();
}
::google::protobuf::int32 SetToolParams::tooltype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetToolParams.toolType)
  return tooltype_;
}
void SetToolParams::set_tooltype(::google::protobuf::int32 value) {
  set_has_tooltype();
  tooltype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetToolParams.toolType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearAnnotationParams::kViewTypeFieldNumber;
const int ClearAnnotationParams::kClearTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearAnnotationParams::ClearAnnotationParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ClearAnnotationParams)
}
ClearAnnotationParams::ClearAnnotationParams(const ClearAnnotationParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewtype_, &from.viewtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&cleartype_) -
    reinterpret_cast<char*>(&viewtype_)) + sizeof(cleartype_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ClearAnnotationParams)
}

void ClearAnnotationParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&viewtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cleartype_) -
      reinterpret_cast<char*>(&viewtype_)) + sizeof(cleartype_));
}

ClearAnnotationParams::~ClearAnnotationParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ClearAnnotationParams)
  SharedDtor();
}

void ClearAnnotationParams::SharedDtor() {
}

void ClearAnnotationParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ClearAnnotationParams& ClearAnnotationParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClearAnnotationParams* ClearAnnotationParams::New(::google::protobuf::Arena* arena) const {
  ClearAnnotationParams* n = new ClearAnnotationParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearAnnotationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ClearAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&viewtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cleartype_) -
        reinterpret_cast<char*>(&viewtype_)) + sizeof(cleartype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClearAnnotationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ClearAnnotationParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 clearType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cleartype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cleartype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ClearAnnotationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ClearAnnotationParams)
  return false;
#undef DO_
}

void ClearAnnotationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ClearAnnotationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  // optional int32 clearType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cleartype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ClearAnnotationParams)
}

size_t ClearAnnotationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ClearAnnotationParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 viewType = 1;
    if (has_viewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewtype());
    }

    // optional int32 clearType = 2;
    if (has_cleartype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cleartype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearAnnotationParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClearAnnotationParams*>(&from));
}

void ClearAnnotationParams::MergeFrom(const ClearAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ClearAnnotationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      viewtype_ = from.viewtype_;
    }
    if (cached_has_bits & 0x00000002u) {
      cleartype_ = from.cleartype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClearAnnotationParams::CopyFrom(const ClearAnnotationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ClearAnnotationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearAnnotationParams::IsInitialized() const {
  return true;
}

void ClearAnnotationParams::Swap(ClearAnnotationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearAnnotationParams::InternalSwap(ClearAnnotationParams* other) {
  using std::swap;
  swap(viewtype_, other->viewtype_);
  swap(cleartype_, other->cleartype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ClearAnnotationParams::GetTypeName() const {
  return "com.electron.sdk.proto.ClearAnnotationParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearAnnotationParams

// optional int32 viewType = 1;
bool ClearAnnotationParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClearAnnotationParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
void ClearAnnotationParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClearAnnotationParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 ClearAnnotationParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ClearAnnotationParams.viewType)
  return viewtype_;
}
void ClearAnnotationParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ClearAnnotationParams.viewType)
}

// optional int32 clearType = 2;
bool ClearAnnotationParams::has_cleartype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClearAnnotationParams::set_has_cleartype() {
  _has_bits_[0] |= 0x00000002u;
}
void ClearAnnotationParams::clear_has_cleartype() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClearAnnotationParams::clear_cleartype() {
  cleartype_ = 0;
  clear_has_cleartype();
}
::google::protobuf::int32 ClearAnnotationParams::cleartype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ClearAnnotationParams.clearType)
  return cleartype_;
}
void ClearAnnotationParams::set_cleartype(::google::protobuf::int32 value) {
  set_has_cleartype();
  cleartype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ClearAnnotationParams.clearType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetColorParams::kViewTypeFieldNumber;
const int SetColorParams::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetColorParams::SetColorParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetColorParams)
}
SetColorParams::SetColorParams(const SetColorParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_color()) {
    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetColorParams)
}

void SetColorParams::SharedCtor() {
  _cached_size_ = 0;
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewtype_ = 0;
}

SetColorParams::~SetColorParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetColorParams)
  SharedDtor();
}

void SetColorParams::SharedDtor() {
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetColorParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetColorParams& SetColorParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetColorParams* SetColorParams::New(::google::protobuf::Arena* arena) const {
  SetColorParams* n = new SetColorParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetColorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetColorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_color()) {
    GOOGLE_DCHECK(!color_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*color_.UnsafeRawStringPointer())->clear();
  }
  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetColorParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetColorParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string color = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetColorParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetColorParams)
  return false;
#undef DO_
}

void SetColorParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetColorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  // optional string color = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->color(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetColorParams)
}

size_t SetColorParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetColorParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }

    // optional int32 viewType = 1;
    if (has_viewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetColorParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetColorParams*>(&from));
}

void SetColorParams::MergeFrom(const SetColorParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetColorParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_color();
      color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
    }
    if (cached_has_bits & 0x00000002u) {
      viewtype_ = from.viewtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetColorParams::CopyFrom(const SetColorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetColorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetColorParams::IsInitialized() const {
  return true;
}

void SetColorParams::Swap(SetColorParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetColorParams::InternalSwap(SetColorParams* other) {
  using std::swap;
  color_.Swap(&other->color_);
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetColorParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetColorParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetColorParams

// optional int32 viewType = 1;
bool SetColorParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetColorParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000002u;
}
void SetColorParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetColorParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 SetColorParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetColorParams.viewType)
  return viewtype_;
}
void SetColorParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetColorParams.viewType)
}

// optional string color = 2;
bool SetColorParams::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetColorParams::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
void SetColorParams::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetColorParams::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color();
}
const ::std::string& SetColorParams::color() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetColorParams.color)
  return color_.GetNoArena();
}
void SetColorParams::set_color(const ::std::string& value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetColorParams.color)
}
#if LANG_CXX11
void SetColorParams::set_color(::std::string&& value) {
  set_has_color();
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetColorParams.color)
}
#endif
void SetColorParams::set_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetColorParams.color)
}
void SetColorParams::set_color(const char* value, size_t size) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetColorParams.color)
}
::std::string* SetColorParams::mutable_color() {
  set_has_color();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetColorParams.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetColorParams::release_color() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetColorParams.color)
  clear_has_color();
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetColorParams::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetColorParams.color)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLineWidthParams::kViewTypeFieldNumber;
const int SetLineWidthParams::kLineWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLineWidthParams::SetLineWidthParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetLineWidthParams)
}
SetLineWidthParams::SetLineWidthParams(const SetLineWidthParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  linewidth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_linewidth()) {
    linewidth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.linewidth_);
  }
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetLineWidthParams)
}

void SetLineWidthParams::SharedCtor() {
  _cached_size_ = 0;
  linewidth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewtype_ = 0;
}

SetLineWidthParams::~SetLineWidthParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetLineWidthParams)
  SharedDtor();
}

void SetLineWidthParams::SharedDtor() {
  linewidth_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetLineWidthParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetLineWidthParams& SetLineWidthParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetLineWidthParams* SetLineWidthParams::New(::google::protobuf::Arena* arena) const {
  SetLineWidthParams* n = new SetLineWidthParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLineWidthParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetLineWidthParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_linewidth()) {
    GOOGLE_DCHECK(!linewidth_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*linewidth_.UnsafeRawStringPointer())->clear();
  }
  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetLineWidthParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetLineWidthParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lineWidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_linewidth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetLineWidthParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetLineWidthParams)
  return false;
#undef DO_
}

void SetLineWidthParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetLineWidthParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  // optional string lineWidth = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->linewidth(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetLineWidthParams)
}

size_t SetLineWidthParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetLineWidthParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string lineWidth = 2;
    if (has_linewidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->linewidth());
    }

    // optional int32 viewType = 1;
    if (has_viewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLineWidthParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetLineWidthParams*>(&from));
}

void SetLineWidthParams::MergeFrom(const SetLineWidthParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetLineWidthParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_linewidth();
      linewidth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.linewidth_);
    }
    if (cached_has_bits & 0x00000002u) {
      viewtype_ = from.viewtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetLineWidthParams::CopyFrom(const SetLineWidthParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetLineWidthParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLineWidthParams::IsInitialized() const {
  return true;
}

void SetLineWidthParams::Swap(SetLineWidthParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLineWidthParams::InternalSwap(SetLineWidthParams* other) {
  using std::swap;
  linewidth_.Swap(&other->linewidth_);
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetLineWidthParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetLineWidthParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetLineWidthParams

// optional int32 viewType = 1;
bool SetLineWidthParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetLineWidthParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000002u;
}
void SetLineWidthParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetLineWidthParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 SetLineWidthParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetLineWidthParams.viewType)
  return viewtype_;
}
void SetLineWidthParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetLineWidthParams.viewType)
}

// optional string lineWidth = 2;
bool SetLineWidthParams::has_linewidth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetLineWidthParams::set_has_linewidth() {
  _has_bits_[0] |= 0x00000001u;
}
void SetLineWidthParams::clear_has_linewidth() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetLineWidthParams::clear_linewidth() {
  linewidth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_linewidth();
}
const ::std::string& SetLineWidthParams::linewidth() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  return linewidth_.GetNoArena();
}
void SetLineWidthParams::set_linewidth(const ::std::string& value) {
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
#if LANG_CXX11
void SetLineWidthParams::set_linewidth(::std::string&& value) {
  set_has_linewidth();
  linewidth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
#endif
void SetLineWidthParams::set_linewidth(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
void SetLineWidthParams::set_linewidth(const char* value, size_t size) {
  set_has_linewidth();
  linewidth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}
::std::string* SetLineWidthParams::mutable_linewidth() {
  set_has_linewidth();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  return linewidth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetLineWidthParams::release_linewidth() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
  clear_has_linewidth();
  return linewidth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetLineWidthParams::set_allocated_linewidth(::std::string* linewidth) {
  if (linewidth != NULL) {
    set_has_linewidth();
  } else {
    clear_has_linewidth();
  }
  linewidth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), linewidth);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetLineWidthParams.lineWidth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndoParams::kViewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndoParams::UndoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.UndoParams)
}
UndoParams::UndoParams(const UndoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.UndoParams)
}

void UndoParams::SharedCtor() {
  _cached_size_ = 0;
  viewtype_ = 0;
}

UndoParams::~UndoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.UndoParams)
  SharedDtor();
}

void UndoParams::SharedDtor() {
}

void UndoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UndoParams& UndoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

UndoParams* UndoParams::New(::google::protobuf::Arena* arena) const {
  UndoParams* n = new UndoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UndoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.UndoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UndoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.UndoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.UndoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.UndoParams)
  return false;
#undef DO_
}

void UndoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.UndoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.UndoParams)
}

size_t UndoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.UndoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 viewType = 1;
  if (has_viewtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viewtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UndoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UndoParams*>(&from));
}

void UndoParams::MergeFrom(const UndoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.UndoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewtype()) {
    set_viewtype(from.viewtype());
  }
}

void UndoParams::CopyFrom(const UndoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.UndoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndoParams::IsInitialized() const {
  return true;
}

void UndoParams::Swap(UndoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndoParams::InternalSwap(UndoParams* other) {
  using std::swap;
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string UndoParams::GetTypeName() const {
  return "com.electron.sdk.proto.UndoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UndoParams

// optional int32 viewType = 1;
bool UndoParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UndoParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
void UndoParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void UndoParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 UndoParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UndoParams.viewType)
  return viewtype_;
}
void UndoParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UndoParams.viewType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedoParams::kViewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedoParams::RedoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedoParams)
}
RedoParams::RedoParams(const RedoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  viewtype_ = from.viewtype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedoParams)
}

void RedoParams::SharedCtor() {
  _cached_size_ = 0;
  viewtype_ = 0;
}

RedoParams::~RedoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedoParams)
  SharedDtor();
}

void RedoParams::SharedDtor() {
}

void RedoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedoParams& RedoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedoParams* RedoParams::New(::google::protobuf::Arena* arena) const {
  RedoParams* n = new RedoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viewtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 viewType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_viewtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedoParams)
  return false;
#undef DO_
}

void RedoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 viewType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->viewtype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedoParams)
}

size_t RedoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 viewType = 1;
  if (has_viewtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viewtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedoParams*>(&from));
}

void RedoParams::MergeFrom(const RedoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewtype()) {
    set_viewtype(from.viewtype());
  }
}

void RedoParams::CopyFrom(const RedoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedoParams::IsInitialized() const {
  return true;
}

void RedoParams::Swap(RedoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedoParams::InternalSwap(RedoParams* other) {
  using std::swap;
  swap(viewtype_, other->viewtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedoParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedoParams

// optional int32 viewType = 1;
bool RedoParams::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedoParams::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
void RedoParams::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedoParams::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
::google::protobuf::int32 RedoParams::viewtype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedoParams.viewType)
  return viewtype_;
}
void RedoParams::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedoParams.viewType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MuteAudioParams::kUserIDFieldNumber;
const int MuteAudioParams::kAllowUnmuteBySelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MuteAudioParams::MuteAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.MuteAudioParams)
}
MuteAudioParams::MuteAudioParams(const MuteAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&allowunmutebyself_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(allowunmutebyself_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.MuteAudioParams)
}

void MuteAudioParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allowunmutebyself_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(allowunmutebyself_));
}

MuteAudioParams::~MuteAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.MuteAudioParams)
  SharedDtor();
}

void MuteAudioParams::SharedDtor() {
}

void MuteAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MuteAudioParams& MuteAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

MuteAudioParams* MuteAudioParams::New(::google::protobuf::Arena* arena) const {
  MuteAudioParams* n = new MuteAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MuteAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.MuteAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allowunmutebyself_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(allowunmutebyself_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MuteAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.MuteAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allowUnmuteBySelf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_allowunmutebyself();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowunmutebyself_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.MuteAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.MuteAudioParams)
  return false;
#undef DO_
}

void MuteAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.MuteAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional bool allowUnmuteBySelf = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->allowunmutebyself(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.MuteAudioParams)
}

size_t MuteAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.MuteAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userID = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional bool allowUnmuteBySelf = 2;
    if (has_allowunmutebyself()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MuteAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MuteAudioParams*>(&from));
}

void MuteAudioParams::MergeFrom(const MuteAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.MuteAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      allowunmutebyself_ = from.allowunmutebyself_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MuteAudioParams::CopyFrom(const MuteAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.MuteAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MuteAudioParams::IsInitialized() const {
  return true;
}

void MuteAudioParams::Swap(MuteAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MuteAudioParams::InternalSwap(MuteAudioParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(allowunmutebyself_, other->allowunmutebyself_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string MuteAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.MuteAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MuteAudioParams

// optional int32 userID = 1;
bool MuteAudioParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MuteAudioParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void MuteAudioParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MuteAudioParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 MuteAudioParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteAudioParams.userID)
  return userid_;
}
void MuteAudioParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteAudioParams.userID)
}

// optional bool allowUnmuteBySelf = 2;
bool MuteAudioParams::has_allowunmutebyself() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MuteAudioParams::set_has_allowunmutebyself() {
  _has_bits_[0] |= 0x00000002u;
}
void MuteAudioParams::clear_has_allowunmutebyself() {
  _has_bits_[0] &= ~0x00000002u;
}
void MuteAudioParams::clear_allowunmutebyself() {
  allowunmutebyself_ = false;
  clear_has_allowunmutebyself();
}
bool MuteAudioParams::allowunmutebyself() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteAudioParams.allowUnmuteBySelf)
  return allowunmutebyself_;
}
void MuteAudioParams::set_allowunmutebyself(bool value) {
  set_has_allowunmutebyself();
  allowunmutebyself_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteAudioParams.allowUnmuteBySelf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnmuteAudioParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnmuteAudioParams::UnmuteAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.UnmuteAudioParams)
}
UnmuteAudioParams::UnmuteAudioParams(const UnmuteAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.UnmuteAudioParams)
}

void UnmuteAudioParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0;
}

UnmuteAudioParams::~UnmuteAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.UnmuteAudioParams)
  SharedDtor();
}

void UnmuteAudioParams::SharedDtor() {
}

void UnmuteAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UnmuteAudioParams& UnmuteAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnmuteAudioParams* UnmuteAudioParams::New(::google::protobuf::Arena* arena) const {
  UnmuteAudioParams* n = new UnmuteAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnmuteAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.UnmuteAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnmuteAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.UnmuteAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.UnmuteAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.UnmuteAudioParams)
  return false;
#undef DO_
}

void UnmuteAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.UnmuteAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.UnmuteAudioParams)
}

size_t UnmuteAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.UnmuteAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnmuteAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UnmuteAudioParams*>(&from));
}

void UnmuteAudioParams::MergeFrom(const UnmuteAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.UnmuteAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void UnmuteAudioParams::CopyFrom(const UnmuteAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.UnmuteAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmuteAudioParams::IsInitialized() const {
  return true;
}

void UnmuteAudioParams::Swap(UnmuteAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnmuteAudioParams::InternalSwap(UnmuteAudioParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string UnmuteAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.UnmuteAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnmuteAudioParams

// optional int32 userID = 1;
bool UnmuteAudioParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnmuteAudioParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void UnmuteAudioParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnmuteAudioParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 UnmuteAudioParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnmuteAudioParams.userID)
  return userid_;
}
void UnmuteAudioParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnmuteAudioParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnablePlayChimeWhenEnterOrExitParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnablePlayChimeWhenEnterOrExitParams::EnablePlayChimeWhenEnterOrExitParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
}
EnablePlayChimeWhenEnterOrExitParams::EnablePlayChimeWhenEnterOrExitParams(const EnablePlayChimeWhenEnterOrExitParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
}

void EnablePlayChimeWhenEnterOrExitParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnablePlayChimeWhenEnterOrExitParams::~EnablePlayChimeWhenEnterOrExitParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  SharedDtor();
}

void EnablePlayChimeWhenEnterOrExitParams::SharedDtor() {
}

void EnablePlayChimeWhenEnterOrExitParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnablePlayChimeWhenEnterOrExitParams& EnablePlayChimeWhenEnterOrExitParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnablePlayChimeWhenEnterOrExitParams* EnablePlayChimeWhenEnterOrExitParams::New(::google::protobuf::Arena* arena) const {
  EnablePlayChimeWhenEnterOrExitParams* n = new EnablePlayChimeWhenEnterOrExitParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnablePlayChimeWhenEnterOrExitParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnablePlayChimeWhenEnterOrExitParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  return false;
#undef DO_
}

void EnablePlayChimeWhenEnterOrExitParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
}

size_t EnablePlayChimeWhenEnterOrExitParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnablePlayChimeWhenEnterOrExitParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnablePlayChimeWhenEnterOrExitParams*>(&from));
}

void EnablePlayChimeWhenEnterOrExitParams::MergeFrom(const EnablePlayChimeWhenEnterOrExitParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnablePlayChimeWhenEnterOrExitParams::CopyFrom(const EnablePlayChimeWhenEnterOrExitParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnablePlayChimeWhenEnterOrExitParams::IsInitialized() const {
  return true;
}

void EnablePlayChimeWhenEnterOrExitParams::Swap(EnablePlayChimeWhenEnterOrExitParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnablePlayChimeWhenEnterOrExitParams::InternalSwap(EnablePlayChimeWhenEnterOrExitParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnablePlayChimeWhenEnterOrExitParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnablePlayChimeWhenEnterOrExitParams

// optional bool bEnable = 1;
bool EnablePlayChimeWhenEnterOrExitParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnablePlayChimeWhenEnterOrExitParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnablePlayChimeWhenEnterOrExitParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnablePlayChimeWhenEnterOrExitParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnablePlayChimeWhenEnterOrExitParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams.bEnable)
  return benable_;
}
void EnablePlayChimeWhenEnterOrExitParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnablePlayChimeWhenEnterOrExitParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableInviteButtonOnMeeitngUIParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableInviteButtonOnMeeitngUIParams::EnableInviteButtonOnMeeitngUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
}
EnableInviteButtonOnMeeitngUIParams::EnableInviteButtonOnMeeitngUIParams(const EnableInviteButtonOnMeeitngUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
}

void EnableInviteButtonOnMeeitngUIParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableInviteButtonOnMeeitngUIParams::~EnableInviteButtonOnMeeitngUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  SharedDtor();
}

void EnableInviteButtonOnMeeitngUIParams::SharedDtor() {
}

void EnableInviteButtonOnMeeitngUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableInviteButtonOnMeeitngUIParams& EnableInviteButtonOnMeeitngUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableInviteButtonOnMeeitngUIParams* EnableInviteButtonOnMeeitngUIParams::New(::google::protobuf::Arena* arena) const {
  EnableInviteButtonOnMeeitngUIParams* n = new EnableInviteButtonOnMeeitngUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableInviteButtonOnMeeitngUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableInviteButtonOnMeeitngUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  return false;
#undef DO_
}

void EnableInviteButtonOnMeeitngUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
}

size_t EnableInviteButtonOnMeeitngUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableInviteButtonOnMeeitngUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableInviteButtonOnMeeitngUIParams*>(&from));
}

void EnableInviteButtonOnMeeitngUIParams::MergeFrom(const EnableInviteButtonOnMeeitngUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableInviteButtonOnMeeitngUIParams::CopyFrom(const EnableInviteButtonOnMeeitngUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableInviteButtonOnMeeitngUIParams::IsInitialized() const {
  return true;
}

void EnableInviteButtonOnMeeitngUIParams::Swap(EnableInviteButtonOnMeeitngUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableInviteButtonOnMeeitngUIParams::InternalSwap(EnableInviteButtonOnMeeitngUIParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableInviteButtonOnMeeitngUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableInviteButtonOnMeeitngUIParams

// optional bool bEnable = 1;
bool EnableInviteButtonOnMeeitngUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableInviteButtonOnMeeitngUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableInviteButtonOnMeeitngUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableInviteButtonOnMeeitngUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableInviteButtonOnMeeitngUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams.bEnable)
  return benable_;
}
void EnableInviteButtonOnMeeitngUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInviteButtonOnMeeitngUIParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFloatVideoPosParams::kLeftFieldNumber;
const int SetFloatVideoPosParams::kTopFieldNumber;
const int SetFloatVideoPosParams::kHSelfWndFieldNumber;
const int SetFloatVideoPosParams::kHParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFloatVideoPosParams::SetFloatVideoPosParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetFloatVideoPosParams)
}
SetFloatVideoPosParams::SetFloatVideoPosParams(const SetFloatVideoPosParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hselfwnd()) {
    hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
  }
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetFloatVideoPosParams)
}

void SetFloatVideoPosParams::SharedCtor() {
  _cached_size_ = 0;
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetFloatVideoPosParams::~SetFloatVideoPosParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetFloatVideoPosParams)
  SharedDtor();
}

void SetFloatVideoPosParams::SharedDtor() {
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hselfwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFloatVideoPosParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetFloatVideoPosParams& SetFloatVideoPosParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetFloatVideoPosParams* SetFloatVideoPosParams::New(::google::protobuf::Arena* arena) const {
  SetFloatVideoPosParams* n = new SetFloatVideoPosParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFloatVideoPosParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!hselfwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hselfwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetFloatVideoPosParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hSelfWnd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hselfwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hParent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetFloatVideoPosParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetFloatVideoPosParams)
  return false;
#undef DO_
}

void SetFloatVideoPosParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->left(), output);
  }

  // optional string top = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->top(), output);
  }

  // optional string hSelfWnd = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hselfwnd(), output);
  }

  // optional string hParent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hparent(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetFloatVideoPosParams)
}

size_t SetFloatVideoPosParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

    // optional string hSelfWnd = 3;
    if (has_hselfwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hselfwnd());
    }

    // optional string hParent = 4;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFloatVideoPosParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetFloatVideoPosParams*>(&from));
}

void SetFloatVideoPosParams::MergeFrom(const SetFloatVideoPosParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_hselfwnd();
      hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
  }
}

void SetFloatVideoPosParams::CopyFrom(const SetFloatVideoPosParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetFloatVideoPosParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFloatVideoPosParams::IsInitialized() const {
  return true;
}

void SetFloatVideoPosParams::Swap(SetFloatVideoPosParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFloatVideoPosParams::InternalSwap(SetFloatVideoPosParams* other) {
  using std::swap;
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  hselfwnd_.Swap(&other->hselfwnd_);
  hparent_.Swap(&other->hparent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetFloatVideoPosParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetFloatVideoPosParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFloatVideoPosParams

// optional string left = 1;
bool SetFloatVideoPosParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetFloatVideoPosParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void SetFloatVideoPosParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetFloatVideoPosParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& SetFloatVideoPosParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  return left_.GetNoArena();
}
void SetFloatVideoPosParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
#if LANG_CXX11
void SetFloatVideoPosParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
#endif
void SetFloatVideoPosParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
void SetFloatVideoPosParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}
::std::string* SetFloatVideoPosParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFloatVideoPosParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFloatVideoPosParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.left)
}

// optional string top = 2;
bool SetFloatVideoPosParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetFloatVideoPosParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
void SetFloatVideoPosParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetFloatVideoPosParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& SetFloatVideoPosParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  return top_.GetNoArena();
}
void SetFloatVideoPosParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
#if LANG_CXX11
void SetFloatVideoPosParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
#endif
void SetFloatVideoPosParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
void SetFloatVideoPosParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}
::std::string* SetFloatVideoPosParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFloatVideoPosParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFloatVideoPosParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.top)
}

// optional string hSelfWnd = 3;
bool SetFloatVideoPosParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SetFloatVideoPosParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000004u;
}
void SetFloatVideoPosParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000004u;
}
void SetFloatVideoPosParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
const ::std::string& SetFloatVideoPosParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
void SetFloatVideoPosParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
#if LANG_CXX11
void SetFloatVideoPosParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
#endif
void SetFloatVideoPosParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
void SetFloatVideoPosParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}
::std::string* SetFloatVideoPosParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFloatVideoPosParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFloatVideoPosParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.hSelfWnd)
}

// optional string hParent = 4;
bool SetFloatVideoPosParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SetFloatVideoPosParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000008u;
}
void SetFloatVideoPosParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000008u;
}
void SetFloatVideoPosParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& SetFloatVideoPosParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  return hparent_.GetNoArena();
}
void SetFloatVideoPosParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
#if LANG_CXX11
void SetFloatVideoPosParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
#endif
void SetFloatVideoPosParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
void SetFloatVideoPosParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}
::std::string* SetFloatVideoPosParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetFloatVideoPosParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetFloatVideoPosParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetFloatVideoPosParams.hParent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBottomFloatToolBarWndVisibilityParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBottomFloatToolBarWndVisibilityParams::SetBottomFloatToolBarWndVisibilityParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
}
SetBottomFloatToolBarWndVisibilityParams::SetBottomFloatToolBarWndVisibilityParams(const SetBottomFloatToolBarWndVisibilityParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
}

void SetBottomFloatToolBarWndVisibilityParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetBottomFloatToolBarWndVisibilityParams::~SetBottomFloatToolBarWndVisibilityParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  SharedDtor();
}

void SetBottomFloatToolBarWndVisibilityParams::SharedDtor() {
}

void SetBottomFloatToolBarWndVisibilityParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetBottomFloatToolBarWndVisibilityParams& SetBottomFloatToolBarWndVisibilityParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetBottomFloatToolBarWndVisibilityParams* SetBottomFloatToolBarWndVisibilityParams::New(::google::protobuf::Arena* arena) const {
  SetBottomFloatToolBarWndVisibilityParams* n = new SetBottomFloatToolBarWndVisibilityParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetBottomFloatToolBarWndVisibilityParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetBottomFloatToolBarWndVisibilityParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  return false;
#undef DO_
}

void SetBottomFloatToolBarWndVisibilityParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
}

size_t SetBottomFloatToolBarWndVisibilityParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetBottomFloatToolBarWndVisibilityParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetBottomFloatToolBarWndVisibilityParams*>(&from));
}

void SetBottomFloatToolBarWndVisibilityParams::MergeFrom(const SetBottomFloatToolBarWndVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetBottomFloatToolBarWndVisibilityParams::CopyFrom(const SetBottomFloatToolBarWndVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBottomFloatToolBarWndVisibilityParams::IsInitialized() const {
  return true;
}

void SetBottomFloatToolBarWndVisibilityParams::Swap(SetBottomFloatToolBarWndVisibilityParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBottomFloatToolBarWndVisibilityParams::InternalSwap(SetBottomFloatToolBarWndVisibilityParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetBottomFloatToolBarWndVisibilityParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetBottomFloatToolBarWndVisibilityParams

// optional bool bShow = 1;
bool SetBottomFloatToolBarWndVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetBottomFloatToolBarWndVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetBottomFloatToolBarWndVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetBottomFloatToolBarWndVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetBottomFloatToolBarWndVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams.bShow)
  return bshow_;
}
void SetBottomFloatToolBarWndVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetBottomFloatToolBarWndVisibilityParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSharingToolBarVisibilityParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSharingToolBarVisibilityParams::SetSharingToolBarVisibilityParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
}
SetSharingToolBarVisibilityParams::SetSharingToolBarVisibilityParams(const SetSharingToolBarVisibilityParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
}

void SetSharingToolBarVisibilityParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetSharingToolBarVisibilityParams::~SetSharingToolBarVisibilityParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  SharedDtor();
}

void SetSharingToolBarVisibilityParams::SharedDtor() {
}

void SetSharingToolBarVisibilityParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetSharingToolBarVisibilityParams& SetSharingToolBarVisibilityParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSharingToolBarVisibilityParams* SetSharingToolBarVisibilityParams::New(::google::protobuf::Arena* arena) const {
  SetSharingToolBarVisibilityParams* n = new SetSharingToolBarVisibilityParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSharingToolBarVisibilityParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetSharingToolBarVisibilityParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  return false;
#undef DO_
}

void SetSharingToolBarVisibilityParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
}

size_t SetSharingToolBarVisibilityParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSharingToolBarVisibilityParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetSharingToolBarVisibilityParams*>(&from));
}

void SetSharingToolBarVisibilityParams::MergeFrom(const SetSharingToolBarVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetSharingToolBarVisibilityParams::CopyFrom(const SetSharingToolBarVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetSharingToolBarVisibilityParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSharingToolBarVisibilityParams::IsInitialized() const {
  return true;
}

void SetSharingToolBarVisibilityParams::Swap(SetSharingToolBarVisibilityParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSharingToolBarVisibilityParams::InternalSwap(SetSharingToolBarVisibilityParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetSharingToolBarVisibilityParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetSharingToolBarVisibilityParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSharingToolBarVisibilityParams

// optional bool bShow = 1;
bool SetSharingToolBarVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetSharingToolBarVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetSharingToolBarVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetSharingToolBarVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetSharingToolBarVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetSharingToolBarVisibilityParams.bShow)
  return bshow_;
}
void SetSharingToolBarVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetSharingToolBarVisibilityParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDirectShareMonitorIDParams::kMonitorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDirectShareMonitorIDParams::SetDirectShareMonitorIDParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
}
SetDirectShareMonitorIDParams::SetDirectShareMonitorIDParams(const SetDirectShareMonitorIDParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monitorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_monitorid()) {
    monitorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitorid_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
}

void SetDirectShareMonitorIDParams::SharedCtor() {
  _cached_size_ = 0;
  monitorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetDirectShareMonitorIDParams::~SetDirectShareMonitorIDParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  SharedDtor();
}

void SetDirectShareMonitorIDParams::SharedDtor() {
  monitorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetDirectShareMonitorIDParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetDirectShareMonitorIDParams& SetDirectShareMonitorIDParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDirectShareMonitorIDParams* SetDirectShareMonitorIDParams::New(::google::protobuf::Arena* arena) const {
  SetDirectShareMonitorIDParams* n = new SetDirectShareMonitorIDParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDirectShareMonitorIDParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_monitorid()) {
    GOOGLE_DCHECK(!monitorid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*monitorid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetDirectShareMonitorIDParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string monitorID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitorid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  return false;
#undef DO_
}

void SetDirectShareMonitorIDParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string monitorID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->monitorid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
}

size_t SetDirectShareMonitorIDParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string monitorID = 1;
  if (has_monitorid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDirectShareMonitorIDParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetDirectShareMonitorIDParams*>(&from));
}

void SetDirectShareMonitorIDParams::MergeFrom(const SetDirectShareMonitorIDParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitorid()) {
    set_has_monitorid();
    monitorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitorid_);
  }
}

void SetDirectShareMonitorIDParams::CopyFrom(const SetDirectShareMonitorIDParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetDirectShareMonitorIDParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDirectShareMonitorIDParams::IsInitialized() const {
  return true;
}

void SetDirectShareMonitorIDParams::Swap(SetDirectShareMonitorIDParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDirectShareMonitorIDParams::InternalSwap(SetDirectShareMonitorIDParams* other) {
  using std::swap;
  monitorid_.Swap(&other->monitorid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetDirectShareMonitorIDParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetDirectShareMonitorIDParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDirectShareMonitorIDParams

// optional string monitorID = 1;
bool SetDirectShareMonitorIDParams::has_monitorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetDirectShareMonitorIDParams::set_has_monitorid() {
  _has_bits_[0] |= 0x00000001u;
}
void SetDirectShareMonitorIDParams::clear_has_monitorid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetDirectShareMonitorIDParams::clear_monitorid() {
  monitorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_monitorid();
}
const ::std::string& SetDirectShareMonitorIDParams::monitorid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  return monitorid_.GetNoArena();
}
void SetDirectShareMonitorIDParams::set_monitorid(const ::std::string& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
#if LANG_CXX11
void SetDirectShareMonitorIDParams::set_monitorid(::std::string&& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
#endif
void SetDirectShareMonitorIDParams::set_monitorid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
void SetDirectShareMonitorIDParams::set_monitorid(const char* value, size_t size) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}
::std::string* SetDirectShareMonitorIDParams::mutable_monitorid() {
  set_has_monitorid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  return monitorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDirectShareMonitorIDParams::release_monitorid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
  clear_has_monitorid();
  return monitorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDirectShareMonitorIDParams::set_allocated_monitorid(::std::string* monitorid) {
  if (monitorid != NULL) {
    set_has_monitorid();
  } else {
    clear_has_monitorid();
  }
  monitorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitorid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDirectShareMonitorIDParams.monitorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMeetingUIPosParams::kLeftFieldNumber;
const int SetMeetingUIPosParams::kTopFieldNumber;
const int SetMeetingUIPosParams::kHSelfWndFieldNumber;
const int SetMeetingUIPosParams::kHParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMeetingUIPosParams::SetMeetingUIPosParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetMeetingUIPosParams)
}
SetMeetingUIPosParams::SetMeetingUIPosParams(const SetMeetingUIPosParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_left()) {
    left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
  }
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_top()) {
    top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
  }
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hselfwnd()) {
    hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
  }
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hparent()) {
    hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetMeetingUIPosParams)
}

void SetMeetingUIPosParams::SharedCtor() {
  _cached_size_ = 0;
  left_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hselfwnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetMeetingUIPosParams::~SetMeetingUIPosParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetMeetingUIPosParams)
  SharedDtor();
}

void SetMeetingUIPosParams::SharedDtor() {
  left_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hselfwnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hparent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMeetingUIPosParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetMeetingUIPosParams& SetMeetingUIPosParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMeetingUIPosParams* SetMeetingUIPosParams::New(::google::protobuf::Arena* arena) const {
  SetMeetingUIPosParams* n = new SetMeetingUIPosParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMeetingUIPosParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!left_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*left_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!top_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*top_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!hselfwnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hselfwnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!hparent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hparent_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetMeetingUIPosParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hSelfWnd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hselfwnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hParent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hparent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetMeetingUIPosParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetMeetingUIPosParams)
  return false;
#undef DO_
}

void SetMeetingUIPosParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->left(), output);
  }

  // optional string top = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->top(), output);
  }

  // optional string hSelfWnd = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hselfwnd(), output);
  }

  // optional string hParent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hparent(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetMeetingUIPosParams)
}

size_t SetMeetingUIPosParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left());
    }

    // optional string top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->top());
    }

    // optional string hSelfWnd = 3;
    if (has_hselfwnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hselfwnd());
    }

    // optional string hParent = 4;
    if (has_hparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hparent());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMeetingUIPosParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetMeetingUIPosParams*>(&from));
}

void SetMeetingUIPosParams::MergeFrom(const SetMeetingUIPosParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_left();
      left_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_top();
      top_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.top_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_hselfwnd();
      hselfwnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hselfwnd_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hparent();
      hparent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hparent_);
    }
  }
}

void SetMeetingUIPosParams::CopyFrom(const SetMeetingUIPosParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetMeetingUIPosParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMeetingUIPosParams::IsInitialized() const {
  return true;
}

void SetMeetingUIPosParams::Swap(SetMeetingUIPosParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMeetingUIPosParams::InternalSwap(SetMeetingUIPosParams* other) {
  using std::swap;
  left_.Swap(&other->left_);
  top_.Swap(&other->top_);
  hselfwnd_.Swap(&other->hselfwnd_);
  hparent_.Swap(&other->hparent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetMeetingUIPosParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetMeetingUIPosParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMeetingUIPosParams

// optional string left = 1;
bool SetMeetingUIPosParams::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetMeetingUIPosParams::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void SetMeetingUIPosParams::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetMeetingUIPosParams::clear_left() {
  left_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left();
}
const ::std::string& SetMeetingUIPosParams::left() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  return left_.GetNoArena();
}
void SetMeetingUIPosParams::set_left(const ::std::string& value) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
#if LANG_CXX11
void SetMeetingUIPosParams::set_left(::std::string&& value) {
  set_has_left();
  left_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
#endif
void SetMeetingUIPosParams::set_left(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
void SetMeetingUIPosParams::set_left(const char* value, size_t size) {
  set_has_left();
  left_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}
::std::string* SetMeetingUIPosParams::mutable_left() {
  set_has_left();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  return left_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMeetingUIPosParams::release_left() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.left)
  clear_has_left();
  return left_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMeetingUIPosParams::set_allocated_left(::std::string* left) {
  if (left != NULL) {
    set_has_left();
  } else {
    clear_has_left();
  }
  left_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.left)
}

// optional string top = 2;
bool SetMeetingUIPosParams::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetMeetingUIPosParams::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
void SetMeetingUIPosParams::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetMeetingUIPosParams::clear_top() {
  top_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_top();
}
const ::std::string& SetMeetingUIPosParams::top() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  return top_.GetNoArena();
}
void SetMeetingUIPosParams::set_top(const ::std::string& value) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
#if LANG_CXX11
void SetMeetingUIPosParams::set_top(::std::string&& value) {
  set_has_top();
  top_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
#endif
void SetMeetingUIPosParams::set_top(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
void SetMeetingUIPosParams::set_top(const char* value, size_t size) {
  set_has_top();
  top_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}
::std::string* SetMeetingUIPosParams::mutable_top() {
  set_has_top();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  return top_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMeetingUIPosParams::release_top() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.top)
  clear_has_top();
  return top_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMeetingUIPosParams::set_allocated_top(::std::string* top) {
  if (top != NULL) {
    set_has_top();
  } else {
    clear_has_top();
  }
  top_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), top);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.top)
}

// optional string hSelfWnd = 3;
bool SetMeetingUIPosParams::has_hselfwnd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SetMeetingUIPosParams::set_has_hselfwnd() {
  _has_bits_[0] |= 0x00000004u;
}
void SetMeetingUIPosParams::clear_has_hselfwnd() {
  _has_bits_[0] &= ~0x00000004u;
}
void SetMeetingUIPosParams::clear_hselfwnd() {
  hselfwnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hselfwnd();
}
const ::std::string& SetMeetingUIPosParams::hselfwnd() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  return hselfwnd_.GetNoArena();
}
void SetMeetingUIPosParams::set_hselfwnd(const ::std::string& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
#if LANG_CXX11
void SetMeetingUIPosParams::set_hselfwnd(::std::string&& value) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
#endif
void SetMeetingUIPosParams::set_hselfwnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
void SetMeetingUIPosParams::set_hselfwnd(const char* value, size_t size) {
  set_has_hselfwnd();
  hselfwnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}
::std::string* SetMeetingUIPosParams::mutable_hselfwnd() {
  set_has_hselfwnd();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  return hselfwnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMeetingUIPosParams::release_hselfwnd() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
  clear_has_hselfwnd();
  return hselfwnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMeetingUIPosParams::set_allocated_hselfwnd(::std::string* hselfwnd) {
  if (hselfwnd != NULL) {
    set_has_hselfwnd();
  } else {
    clear_has_hselfwnd();
  }
  hselfwnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hselfwnd);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.hSelfWnd)
}

// optional string hParent = 4;
bool SetMeetingUIPosParams::has_hparent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SetMeetingUIPosParams::set_has_hparent() {
  _has_bits_[0] |= 0x00000008u;
}
void SetMeetingUIPosParams::clear_has_hparent() {
  _has_bits_[0] &= ~0x00000008u;
}
void SetMeetingUIPosParams::clear_hparent() {
  hparent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hparent();
}
const ::std::string& SetMeetingUIPosParams::hparent() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  return hparent_.GetNoArena();
}
void SetMeetingUIPosParams::set_hparent(const ::std::string& value) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
#if LANG_CXX11
void SetMeetingUIPosParams::set_hparent(::std::string&& value) {
  set_has_hparent();
  hparent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
#endif
void SetMeetingUIPosParams::set_hparent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
void SetMeetingUIPosParams::set_hparent(const char* value, size_t size) {
  set_has_hparent();
  hparent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}
::std::string* SetMeetingUIPosParams::mutable_hparent() {
  set_has_hparent();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  return hparent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMeetingUIPosParams::release_hparent() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
  clear_has_hparent();
  return hparent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMeetingUIPosParams::set_allocated_hparent(::std::string* hparent) {
  if (hparent != NULL) {
    set_has_hparent();
  } else {
    clear_has_hparent();
  }
  hparent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hparent);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetMeetingUIPosParams.hParent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableWaitingForHostDialogParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableWaitingForHostDialogParams::DisableWaitingForHostDialogParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
}
DisableWaitingForHostDialogParams::DisableWaitingForHostDialogParams(const DisableWaitingForHostDialogParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
}

void DisableWaitingForHostDialogParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableWaitingForHostDialogParams::~DisableWaitingForHostDialogParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  SharedDtor();
}

void DisableWaitingForHostDialogParams::SharedDtor() {
}

void DisableWaitingForHostDialogParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableWaitingForHostDialogParams& DisableWaitingForHostDialogParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableWaitingForHostDialogParams* DisableWaitingForHostDialogParams::New(::google::protobuf::Arena* arena) const {
  DisableWaitingForHostDialogParams* n = new DisableWaitingForHostDialogParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableWaitingForHostDialogParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableWaitingForHostDialogParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  return false;
#undef DO_
}

void DisableWaitingForHostDialogParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
}

size_t DisableWaitingForHostDialogParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableWaitingForHostDialogParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableWaitingForHostDialogParams*>(&from));
}

void DisableWaitingForHostDialogParams::MergeFrom(const DisableWaitingForHostDialogParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableWaitingForHostDialogParams::CopyFrom(const DisableWaitingForHostDialogParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableWaitingForHostDialogParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableWaitingForHostDialogParams::IsInitialized() const {
  return true;
}

void DisableWaitingForHostDialogParams::Swap(DisableWaitingForHostDialogParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableWaitingForHostDialogParams::InternalSwap(DisableWaitingForHostDialogParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableWaitingForHostDialogParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableWaitingForHostDialogParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableWaitingForHostDialogParams

// optional bool bDisable = 1;
bool DisableWaitingForHostDialogParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableWaitingForHostDialogParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableWaitingForHostDialogParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableWaitingForHostDialogParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableWaitingForHostDialogParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableWaitingForHostDialogParams.bDisable)
  return bdisable_;
}
void DisableWaitingForHostDialogParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableWaitingForHostDialogParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisablePopupMeetingWrongPSWDlgParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisablePopupMeetingWrongPSWDlgParams::DisablePopupMeetingWrongPSWDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
}
DisablePopupMeetingWrongPSWDlgParams::DisablePopupMeetingWrongPSWDlgParams(const DisablePopupMeetingWrongPSWDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
}

void DisablePopupMeetingWrongPSWDlgParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisablePopupMeetingWrongPSWDlgParams::~DisablePopupMeetingWrongPSWDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  SharedDtor();
}

void DisablePopupMeetingWrongPSWDlgParams::SharedDtor() {
}

void DisablePopupMeetingWrongPSWDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisablePopupMeetingWrongPSWDlgParams& DisablePopupMeetingWrongPSWDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisablePopupMeetingWrongPSWDlgParams* DisablePopupMeetingWrongPSWDlgParams::New(::google::protobuf::Arena* arena) const {
  DisablePopupMeetingWrongPSWDlgParams* n = new DisablePopupMeetingWrongPSWDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisablePopupMeetingWrongPSWDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisablePopupMeetingWrongPSWDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  return false;
#undef DO_
}

void DisablePopupMeetingWrongPSWDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
}

size_t DisablePopupMeetingWrongPSWDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisablePopupMeetingWrongPSWDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisablePopupMeetingWrongPSWDlgParams*>(&from));
}

void DisablePopupMeetingWrongPSWDlgParams::MergeFrom(const DisablePopupMeetingWrongPSWDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisablePopupMeetingWrongPSWDlgParams::CopyFrom(const DisablePopupMeetingWrongPSWDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisablePopupMeetingWrongPSWDlgParams::IsInitialized() const {
  return true;
}

void DisablePopupMeetingWrongPSWDlgParams::Swap(DisablePopupMeetingWrongPSWDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisablePopupMeetingWrongPSWDlgParams::InternalSwap(DisablePopupMeetingWrongPSWDlgParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisablePopupMeetingWrongPSWDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisablePopupMeetingWrongPSWDlgParams

// optional bool bDisable = 1;
bool DisablePopupMeetingWrongPSWDlgParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisablePopupMeetingWrongPSWDlgParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisablePopupMeetingWrongPSWDlgParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisablePopupMeetingWrongPSWDlgParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisablePopupMeetingWrongPSWDlgParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams.bDisable)
  return bdisable_;
}
void DisablePopupMeetingWrongPSWDlgParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisablePopupMeetingWrongPSWDlgParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoEndOtherMeetingWhenStartMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoEndOtherMeetingWhenStartMeetingParams::EnableAutoEndOtherMeetingWhenStartMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
}
EnableAutoEndOtherMeetingWhenStartMeetingParams::EnableAutoEndOtherMeetingWhenStartMeetingParams(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoEndOtherMeetingWhenStartMeetingParams::~EnableAutoEndOtherMeetingWhenStartMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  SharedDtor();
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::SharedDtor() {
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoEndOtherMeetingWhenStartMeetingParams& EnableAutoEndOtherMeetingWhenStartMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoEndOtherMeetingWhenStartMeetingParams* EnableAutoEndOtherMeetingWhenStartMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoEndOtherMeetingWhenStartMeetingParams* n = new EnableAutoEndOtherMeetingWhenStartMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoEndOtherMeetingWhenStartMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  return false;
#undef DO_
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
}

size_t EnableAutoEndOtherMeetingWhenStartMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoEndOtherMeetingWhenStartMeetingParams*>(&from));
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::MergeFrom(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::CopyFrom(const EnableAutoEndOtherMeetingWhenStartMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoEndOtherMeetingWhenStartMeetingParams::IsInitialized() const {
  return true;
}

void EnableAutoEndOtherMeetingWhenStartMeetingParams::Swap(EnableAutoEndOtherMeetingWhenStartMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoEndOtherMeetingWhenStartMeetingParams::InternalSwap(EnableAutoEndOtherMeetingWhenStartMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoEndOtherMeetingWhenStartMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoEndOtherMeetingWhenStartMeetingParams

// optional bool bEnable = 1;
bool EnableAutoEndOtherMeetingWhenStartMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoEndOtherMeetingWhenStartMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoEndOtherMeetingWhenStartMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoEndOtherMeetingWhenStartMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoEndOtherMeetingWhenStartMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams.bEnable)
  return benable_;
}
void EnableAutoEndOtherMeetingWhenStartMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoEndOtherMeetingWhenStartMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableLButtonDBClick4SwitchFullScreenModeParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableLButtonDBClick4SwitchFullScreenModeParams::EnableLButtonDBClick4SwitchFullScreenModeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
}
EnableLButtonDBClick4SwitchFullScreenModeParams::EnableLButtonDBClick4SwitchFullScreenModeParams(const EnableLButtonDBClick4SwitchFullScreenModeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableLButtonDBClick4SwitchFullScreenModeParams::~EnableLButtonDBClick4SwitchFullScreenModeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  SharedDtor();
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::SharedDtor() {
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableLButtonDBClick4SwitchFullScreenModeParams& EnableLButtonDBClick4SwitchFullScreenModeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableLButtonDBClick4SwitchFullScreenModeParams* EnableLButtonDBClick4SwitchFullScreenModeParams::New(::google::protobuf::Arena* arena) const {
  EnableLButtonDBClick4SwitchFullScreenModeParams* n = new EnableLButtonDBClick4SwitchFullScreenModeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableLButtonDBClick4SwitchFullScreenModeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  return false;
#undef DO_
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
}

size_t EnableLButtonDBClick4SwitchFullScreenModeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableLButtonDBClick4SwitchFullScreenModeParams*>(&from));
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::MergeFrom(const EnableLButtonDBClick4SwitchFullScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::CopyFrom(const EnableLButtonDBClick4SwitchFullScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableLButtonDBClick4SwitchFullScreenModeParams::IsInitialized() const {
  return true;
}

void EnableLButtonDBClick4SwitchFullScreenModeParams::Swap(EnableLButtonDBClick4SwitchFullScreenModeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableLButtonDBClick4SwitchFullScreenModeParams::InternalSwap(EnableLButtonDBClick4SwitchFullScreenModeParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableLButtonDBClick4SwitchFullScreenModeParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableLButtonDBClick4SwitchFullScreenModeParams

// optional bool bEnable = 1;
bool EnableLButtonDBClick4SwitchFullScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableLButtonDBClick4SwitchFullScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableLButtonDBClick4SwitchFullScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableLButtonDBClick4SwitchFullScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableLButtonDBClick4SwitchFullScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams.bEnable)
  return benable_;
}
void EnableLButtonDBClick4SwitchFullScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLButtonDBClick4SwitchFullScreenModeParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFloatVideoWndVisibilityParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFloatVideoWndVisibilityParams::SetFloatVideoWndVisibilityParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
}
SetFloatVideoWndVisibilityParams::SetFloatVideoWndVisibilityParams(const SetFloatVideoWndVisibilityParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
}

void SetFloatVideoWndVisibilityParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetFloatVideoWndVisibilityParams::~SetFloatVideoWndVisibilityParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  SharedDtor();
}

void SetFloatVideoWndVisibilityParams::SharedDtor() {
}

void SetFloatVideoWndVisibilityParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetFloatVideoWndVisibilityParams& SetFloatVideoWndVisibilityParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetFloatVideoWndVisibilityParams* SetFloatVideoWndVisibilityParams::New(::google::protobuf::Arena* arena) const {
  SetFloatVideoWndVisibilityParams* n = new SetFloatVideoWndVisibilityParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFloatVideoWndVisibilityParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetFloatVideoWndVisibilityParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  return false;
#undef DO_
}

void SetFloatVideoWndVisibilityParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
}

size_t SetFloatVideoWndVisibilityParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFloatVideoWndVisibilityParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetFloatVideoWndVisibilityParams*>(&from));
}

void SetFloatVideoWndVisibilityParams::MergeFrom(const SetFloatVideoWndVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetFloatVideoWndVisibilityParams::CopyFrom(const SetFloatVideoWndVisibilityParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFloatVideoWndVisibilityParams::IsInitialized() const {
  return true;
}

void SetFloatVideoWndVisibilityParams::Swap(SetFloatVideoWndVisibilityParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFloatVideoWndVisibilityParams::InternalSwap(SetFloatVideoWndVisibilityParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetFloatVideoWndVisibilityParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetFloatVideoWndVisibilityParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFloatVideoWndVisibilityParams

// optional bool bShow = 1;
bool SetFloatVideoWndVisibilityParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetFloatVideoWndVisibilityParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetFloatVideoWndVisibilityParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetFloatVideoWndVisibilityParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetFloatVideoWndVisibilityParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams.bShow)
  return bshow_;
}
void SetFloatVideoWndVisibilityParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetFloatVideoWndVisibilityParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrePopulateWebinarRegistrationInfoParams::kEmailFieldNumber;
const int PrePopulateWebinarRegistrationInfoParams::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrePopulateWebinarRegistrationInfoParams::PrePopulateWebinarRegistrationInfoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
}
PrePopulateWebinarRegistrationInfoParams::PrePopulateWebinarRegistrationInfoParams(const PrePopulateWebinarRegistrationInfoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
}

void PrePopulateWebinarRegistrationInfoParams::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PrePopulateWebinarRegistrationInfoParams::~PrePopulateWebinarRegistrationInfoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  SharedDtor();
}

void PrePopulateWebinarRegistrationInfoParams::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrePopulateWebinarRegistrationInfoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PrePopulateWebinarRegistrationInfoParams& PrePopulateWebinarRegistrationInfoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrePopulateWebinarRegistrationInfoParams* PrePopulateWebinarRegistrationInfoParams::New(::google::protobuf::Arena* arena) const {
  PrePopulateWebinarRegistrationInfoParams* n = new PrePopulateWebinarRegistrationInfoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrePopulateWebinarRegistrationInfoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrePopulateWebinarRegistrationInfoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  return false;
#undef DO_
}

void PrePopulateWebinarRegistrationInfoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // optional string userName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
}

size_t PrePopulateWebinarRegistrationInfoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string email = 1;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string userName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrePopulateWebinarRegistrationInfoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PrePopulateWebinarRegistrationInfoParams*>(&from));
}

void PrePopulateWebinarRegistrationInfoParams::MergeFrom(const PrePopulateWebinarRegistrationInfoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
  }
}

void PrePopulateWebinarRegistrationInfoParams::CopyFrom(const PrePopulateWebinarRegistrationInfoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrePopulateWebinarRegistrationInfoParams::IsInitialized() const {
  return true;
}

void PrePopulateWebinarRegistrationInfoParams::Swap(PrePopulateWebinarRegistrationInfoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrePopulateWebinarRegistrationInfoParams::InternalSwap(PrePopulateWebinarRegistrationInfoParams* other) {
  using std::swap;
  email_.Swap(&other->email_);
  username_.Swap(&other->username_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string PrePopulateWebinarRegistrationInfoParams::GetTypeName() const {
  return "com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrePopulateWebinarRegistrationInfoParams

// optional string email = 1;
bool PrePopulateWebinarRegistrationInfoParams::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrePopulateWebinarRegistrationInfoParams::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
void PrePopulateWebinarRegistrationInfoParams::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrePopulateWebinarRegistrationInfoParams::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& PrePopulateWebinarRegistrationInfoParams::email() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  return email_.GetNoArena();
}
void PrePopulateWebinarRegistrationInfoParams::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
#if LANG_CXX11
void PrePopulateWebinarRegistrationInfoParams::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
#endif
void PrePopulateWebinarRegistrationInfoParams::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
void PrePopulateWebinarRegistrationInfoParams::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}
::std::string* PrePopulateWebinarRegistrationInfoParams::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrePopulateWebinarRegistrationInfoParams::release_email() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrePopulateWebinarRegistrationInfoParams::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.email)
}

// optional string userName = 2;
bool PrePopulateWebinarRegistrationInfoParams::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrePopulateWebinarRegistrationInfoParams::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void PrePopulateWebinarRegistrationInfoParams::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrePopulateWebinarRegistrationInfoParams::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& PrePopulateWebinarRegistrationInfoParams::username() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  return username_.GetNoArena();
}
void PrePopulateWebinarRegistrationInfoParams::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
#if LANG_CXX11
void PrePopulateWebinarRegistrationInfoParams::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
#endif
void PrePopulateWebinarRegistrationInfoParams::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
void PrePopulateWebinarRegistrationInfoParams::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}
::std::string* PrePopulateWebinarRegistrationInfoParams::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrePopulateWebinarRegistrationInfoParams::release_username() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrePopulateWebinarRegistrationInfoParams::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.PrePopulateWebinarRegistrationInfoParams.userName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
}
EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::~EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  SharedDtor();
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::SharedDtor() {
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* n = new EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  return false;
#undef DO_
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
}

size_t EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams*>(&from));
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::MergeFrom(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::CopyFrom(const EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::IsInitialized() const {
  return true;
}

void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::Swap(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::InternalSwap(EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams

// optional bool bEnable = 1;
bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams.bEnable)
  return benable_;
}
void EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustSpeakerVolumeWhenJoinAudioParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoAdjustMicVolumeWhenJoinAudioParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoAdjustMicVolumeWhenJoinAudioParams::EnableAutoAdjustMicVolumeWhenJoinAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
}
EnableAutoAdjustMicVolumeWhenJoinAudioParams::EnableAutoAdjustMicVolumeWhenJoinAudioParams(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoAdjustMicVolumeWhenJoinAudioParams::~EnableAutoAdjustMicVolumeWhenJoinAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  SharedDtor();
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::SharedDtor() {
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoAdjustMicVolumeWhenJoinAudioParams& EnableAutoAdjustMicVolumeWhenJoinAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoAdjustMicVolumeWhenJoinAudioParams* EnableAutoAdjustMicVolumeWhenJoinAudioParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoAdjustMicVolumeWhenJoinAudioParams* n = new EnableAutoAdjustMicVolumeWhenJoinAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  return false;
#undef DO_
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
}

size_t EnableAutoAdjustMicVolumeWhenJoinAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoAdjustMicVolumeWhenJoinAudioParams*>(&from));
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::MergeFrom(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::CopyFrom(const EnableAutoAdjustMicVolumeWhenJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::IsInitialized() const {
  return true;
}

void EnableAutoAdjustMicVolumeWhenJoinAudioParams::Swap(EnableAutoAdjustMicVolumeWhenJoinAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoAdjustMicVolumeWhenJoinAudioParams::InternalSwap(EnableAutoAdjustMicVolumeWhenJoinAudioParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoAdjustMicVolumeWhenJoinAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoAdjustMicVolumeWhenJoinAudioParams

// optional bool bEnable = 1;
bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoAdjustMicVolumeWhenJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoAdjustMicVolumeWhenJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoAdjustMicVolumeWhenJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoAdjustMicVolumeWhenJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams.bEnable)
  return benable_;
}
void EnableAutoAdjustMicVolumeWhenJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustMicVolumeWhenJoinAudioParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigDSCPParams::kDscpAudioFieldNumber;
const int ConfigDSCPParams::kDscpVideoFieldNumber;
const int ConfigDSCPParams::kBResetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigDSCPParams::ConfigDSCPParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ConfigDSCPParams)
}
ConfigDSCPParams::ConfigDSCPParams(const ConfigDSCPParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dscpaudio_, &from.dscpaudio_,
    static_cast<size_t>(reinterpret_cast<char*>(&breset_) -
    reinterpret_cast<char*>(&dscpaudio_)) + sizeof(breset_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ConfigDSCPParams)
}

void ConfigDSCPParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dscpaudio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&breset_) -
      reinterpret_cast<char*>(&dscpaudio_)) + sizeof(breset_));
}

ConfigDSCPParams::~ConfigDSCPParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ConfigDSCPParams)
  SharedDtor();
}

void ConfigDSCPParams::SharedDtor() {
}

void ConfigDSCPParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ConfigDSCPParams& ConfigDSCPParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigDSCPParams* ConfigDSCPParams::New(::google::protobuf::Arena* arena) const {
  ConfigDSCPParams* n = new ConfigDSCPParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigDSCPParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ConfigDSCPParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&dscpaudio_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&breset_) -
        reinterpret_cast<char*>(&dscpaudio_)) + sizeof(breset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigDSCPParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ConfigDSCPParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dscpAudio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dscpaudio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dscpaudio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dscpVideo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dscpvideo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dscpvideo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bReset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_breset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &breset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ConfigDSCPParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ConfigDSCPParams)
  return false;
#undef DO_
}

void ConfigDSCPParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ConfigDSCPParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dscpAudio = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dscpaudio(), output);
  }

  // optional int32 dscpVideo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dscpvideo(), output);
  }

  // optional bool bReset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->breset(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ConfigDSCPParams)
}

size_t ConfigDSCPParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ConfigDSCPParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 dscpAudio = 1;
    if (has_dscpaudio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dscpaudio());
    }

    // optional int32 dscpVideo = 2;
    if (has_dscpvideo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dscpvideo());
    }

    // optional bool bReset = 3;
    if (has_breset()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigDSCPParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ConfigDSCPParams*>(&from));
}

void ConfigDSCPParams::MergeFrom(const ConfigDSCPParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ConfigDSCPParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      dscpaudio_ = from.dscpaudio_;
    }
    if (cached_has_bits & 0x00000002u) {
      dscpvideo_ = from.dscpvideo_;
    }
    if (cached_has_bits & 0x00000004u) {
      breset_ = from.breset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigDSCPParams::CopyFrom(const ConfigDSCPParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ConfigDSCPParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigDSCPParams::IsInitialized() const {
  return true;
}

void ConfigDSCPParams::Swap(ConfigDSCPParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigDSCPParams::InternalSwap(ConfigDSCPParams* other) {
  using std::swap;
  swap(dscpaudio_, other->dscpaudio_);
  swap(dscpvideo_, other->dscpvideo_);
  swap(breset_, other->breset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ConfigDSCPParams::GetTypeName() const {
  return "com.electron.sdk.proto.ConfigDSCPParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigDSCPParams

// optional int32 dscpAudio = 1;
bool ConfigDSCPParams::has_dscpaudio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConfigDSCPParams::set_has_dscpaudio() {
  _has_bits_[0] |= 0x00000001u;
}
void ConfigDSCPParams::clear_has_dscpaudio() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConfigDSCPParams::clear_dscpaudio() {
  dscpaudio_ = 0;
  clear_has_dscpaudio();
}
::google::protobuf::int32 ConfigDSCPParams::dscpaudio() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.dscpAudio)
  return dscpaudio_;
}
void ConfigDSCPParams::set_dscpaudio(::google::protobuf::int32 value) {
  set_has_dscpaudio();
  dscpaudio_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.dscpAudio)
}

// optional int32 dscpVideo = 2;
bool ConfigDSCPParams::has_dscpvideo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConfigDSCPParams::set_has_dscpvideo() {
  _has_bits_[0] |= 0x00000002u;
}
void ConfigDSCPParams::clear_has_dscpvideo() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConfigDSCPParams::clear_dscpvideo() {
  dscpvideo_ = 0;
  clear_has_dscpvideo();
}
::google::protobuf::int32 ConfigDSCPParams::dscpvideo() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.dscpVideo)
  return dscpvideo_;
}
void ConfigDSCPParams::set_dscpvideo(::google::protobuf::int32 value) {
  set_has_dscpvideo();
  dscpvideo_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.dscpVideo)
}

// optional bool bReset = 3;
bool ConfigDSCPParams::has_breset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ConfigDSCPParams::set_has_breset() {
  _has_bits_[0] |= 0x00000004u;
}
void ConfigDSCPParams::clear_has_breset() {
  _has_bits_[0] &= ~0x00000004u;
}
void ConfigDSCPParams::clear_breset() {
  breset_ = false;
  clear_has_breset();
}
bool ConfigDSCPParams::breset() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfigDSCPParams.bReset)
  return breset_;
}
void ConfigDSCPParams::set_breset(bool value) {
  set_has_breset();
  breset_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfigDSCPParams.bReset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableHIdeFullPhoneNumber4PureCallinUserParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableHIdeFullPhoneNumber4PureCallinUserParams::EnableHIdeFullPhoneNumber4PureCallinUserParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
}
EnableHIdeFullPhoneNumber4PureCallinUserParams::EnableHIdeFullPhoneNumber4PureCallinUserParams(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableHIdeFullPhoneNumber4PureCallinUserParams::~EnableHIdeFullPhoneNumber4PureCallinUserParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  SharedDtor();
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::SharedDtor() {
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableHIdeFullPhoneNumber4PureCallinUserParams& EnableHIdeFullPhoneNumber4PureCallinUserParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableHIdeFullPhoneNumber4PureCallinUserParams* EnableHIdeFullPhoneNumber4PureCallinUserParams::New(::google::protobuf::Arena* arena) const {
  EnableHIdeFullPhoneNumber4PureCallinUserParams* n = new EnableHIdeFullPhoneNumber4PureCallinUserParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableHIdeFullPhoneNumber4PureCallinUserParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  return false;
#undef DO_
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
}

size_t EnableHIdeFullPhoneNumber4PureCallinUserParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableHIdeFullPhoneNumber4PureCallinUserParams*>(&from));
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::MergeFrom(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::CopyFrom(const EnableHIdeFullPhoneNumber4PureCallinUserParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableHIdeFullPhoneNumber4PureCallinUserParams::IsInitialized() const {
  return true;
}

void EnableHIdeFullPhoneNumber4PureCallinUserParams::Swap(EnableHIdeFullPhoneNumber4PureCallinUserParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableHIdeFullPhoneNumber4PureCallinUserParams::InternalSwap(EnableHIdeFullPhoneNumber4PureCallinUserParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableHIdeFullPhoneNumber4PureCallinUserParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableHIdeFullPhoneNumber4PureCallinUserParams

// optional bool bEnable = 1;
bool EnableHIdeFullPhoneNumber4PureCallinUserParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableHIdeFullPhoneNumber4PureCallinUserParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableHIdeFullPhoneNumber4PureCallinUserParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableHIdeFullPhoneNumber4PureCallinUserParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableHIdeFullPhoneNumber4PureCallinUserParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams.bEnable)
  return benable_;
}
void EnableHIdeFullPhoneNumber4PureCallinUserParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHIdeFullPhoneNumber4PureCallinUserParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableShareIOSDeviceParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableShareIOSDeviceParams::EnableShareIOSDeviceParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableShareIOSDeviceParams)
}
EnableShareIOSDeviceParams::EnableShareIOSDeviceParams(const EnableShareIOSDeviceParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableShareIOSDeviceParams)
}

void EnableShareIOSDeviceParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableShareIOSDeviceParams::~EnableShareIOSDeviceParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  SharedDtor();
}

void EnableShareIOSDeviceParams::SharedDtor() {
}

void EnableShareIOSDeviceParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableShareIOSDeviceParams& EnableShareIOSDeviceParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableShareIOSDeviceParams* EnableShareIOSDeviceParams::New(::google::protobuf::Arena* arena) const {
  EnableShareIOSDeviceParams* n = new EnableShareIOSDeviceParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableShareIOSDeviceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableShareIOSDeviceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  return false;
#undef DO_
}

void EnableShareIOSDeviceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableShareIOSDeviceParams)
}

size_t EnableShareIOSDeviceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableShareIOSDeviceParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableShareIOSDeviceParams*>(&from));
}

void EnableShareIOSDeviceParams::MergeFrom(const EnableShareIOSDeviceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableShareIOSDeviceParams::CopyFrom(const EnableShareIOSDeviceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableShareIOSDeviceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableShareIOSDeviceParams::IsInitialized() const {
  return true;
}

void EnableShareIOSDeviceParams::Swap(EnableShareIOSDeviceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableShareIOSDeviceParams::InternalSwap(EnableShareIOSDeviceParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableShareIOSDeviceParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableShareIOSDeviceParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableShareIOSDeviceParams

// optional bool bEnable = 1;
bool EnableShareIOSDeviceParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableShareIOSDeviceParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableShareIOSDeviceParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableShareIOSDeviceParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableShareIOSDeviceParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShareIOSDeviceParams.bEnable)
  return benable_;
}
void EnableShareIOSDeviceParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShareIOSDeviceParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableShareWhiteBoardParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableShareWhiteBoardParams::EnableShareWhiteBoardParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableShareWhiteBoardParams)
}
EnableShareWhiteBoardParams::EnableShareWhiteBoardParams(const EnableShareWhiteBoardParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableShareWhiteBoardParams)
}

void EnableShareWhiteBoardParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableShareWhiteBoardParams::~EnableShareWhiteBoardParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  SharedDtor();
}

void EnableShareWhiteBoardParams::SharedDtor() {
}

void EnableShareWhiteBoardParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableShareWhiteBoardParams& EnableShareWhiteBoardParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableShareWhiteBoardParams* EnableShareWhiteBoardParams::New(::google::protobuf::Arena* arena) const {
  EnableShareWhiteBoardParams* n = new EnableShareWhiteBoardParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableShareWhiteBoardParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableShareWhiteBoardParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  return false;
#undef DO_
}

void EnableShareWhiteBoardParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableShareWhiteBoardParams)
}

size_t EnableShareWhiteBoardParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableShareWhiteBoardParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableShareWhiteBoardParams*>(&from));
}

void EnableShareWhiteBoardParams::MergeFrom(const EnableShareWhiteBoardParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableShareWhiteBoardParams::CopyFrom(const EnableShareWhiteBoardParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableShareWhiteBoardParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableShareWhiteBoardParams::IsInitialized() const {
  return true;
}

void EnableShareWhiteBoardParams::Swap(EnableShareWhiteBoardParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableShareWhiteBoardParams::InternalSwap(EnableShareWhiteBoardParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableShareWhiteBoardParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableShareWhiteBoardParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableShareWhiteBoardParams

// optional bool bEnable = 1;
bool EnableShareWhiteBoardParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableShareWhiteBoardParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableShareWhiteBoardParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableShareWhiteBoardParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableShareWhiteBoardParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShareWhiteBoardParams.bEnable)
  return benable_;
}
void EnableShareWhiteBoardParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShareWhiteBoardParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableLengthLimitationOfMeetingNumberParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableLengthLimitationOfMeetingNumberParams::EnableLengthLimitationOfMeetingNumberParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
}
EnableLengthLimitationOfMeetingNumberParams::EnableLengthLimitationOfMeetingNumberParams(const EnableLengthLimitationOfMeetingNumberParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
}

void EnableLengthLimitationOfMeetingNumberParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableLengthLimitationOfMeetingNumberParams::~EnableLengthLimitationOfMeetingNumberParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  SharedDtor();
}

void EnableLengthLimitationOfMeetingNumberParams::SharedDtor() {
}

void EnableLengthLimitationOfMeetingNumberParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableLengthLimitationOfMeetingNumberParams& EnableLengthLimitationOfMeetingNumberParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableLengthLimitationOfMeetingNumberParams* EnableLengthLimitationOfMeetingNumberParams::New(::google::protobuf::Arena* arena) const {
  EnableLengthLimitationOfMeetingNumberParams* n = new EnableLengthLimitationOfMeetingNumberParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableLengthLimitationOfMeetingNumberParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableLengthLimitationOfMeetingNumberParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  return false;
#undef DO_
}

void EnableLengthLimitationOfMeetingNumberParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
}

size_t EnableLengthLimitationOfMeetingNumberParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableLengthLimitationOfMeetingNumberParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableLengthLimitationOfMeetingNumberParams*>(&from));
}

void EnableLengthLimitationOfMeetingNumberParams::MergeFrom(const EnableLengthLimitationOfMeetingNumberParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableLengthLimitationOfMeetingNumberParams::CopyFrom(const EnableLengthLimitationOfMeetingNumberParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableLengthLimitationOfMeetingNumberParams::IsInitialized() const {
  return true;
}

void EnableLengthLimitationOfMeetingNumberParams::Swap(EnableLengthLimitationOfMeetingNumberParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableLengthLimitationOfMeetingNumberParams::InternalSwap(EnableLengthLimitationOfMeetingNumberParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableLengthLimitationOfMeetingNumberParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableLengthLimitationOfMeetingNumberParams

// optional bool bEnable = 1;
bool EnableLengthLimitationOfMeetingNumberParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableLengthLimitationOfMeetingNumberParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableLengthLimitationOfMeetingNumberParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableLengthLimitationOfMeetingNumberParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableLengthLimitationOfMeetingNumberParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams.bEnable)
  return benable_;
}
void EnableLengthLimitationOfMeetingNumberParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLengthLimitationOfMeetingNumberParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceDisableMultiShareParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceDisableMultiShareParams::ForceDisableMultiShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ForceDisableMultiShareParams)
}
ForceDisableMultiShareParams::ForceDisableMultiShareParams(const ForceDisableMultiShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ForceDisableMultiShareParams)
}

void ForceDisableMultiShareParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

ForceDisableMultiShareParams::~ForceDisableMultiShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ForceDisableMultiShareParams)
  SharedDtor();
}

void ForceDisableMultiShareParams::SharedDtor() {
}

void ForceDisableMultiShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ForceDisableMultiShareParams& ForceDisableMultiShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceDisableMultiShareParams* ForceDisableMultiShareParams::New(::google::protobuf::Arena* arena) const {
  ForceDisableMultiShareParams* n = new ForceDisableMultiShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceDisableMultiShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ForceDisableMultiShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ForceDisableMultiShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ForceDisableMultiShareParams)
  return false;
#undef DO_
}

void ForceDisableMultiShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ForceDisableMultiShareParams)
}

size_t ForceDisableMultiShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceDisableMultiShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ForceDisableMultiShareParams*>(&from));
}

void ForceDisableMultiShareParams::MergeFrom(const ForceDisableMultiShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void ForceDisableMultiShareParams::CopyFrom(const ForceDisableMultiShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ForceDisableMultiShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceDisableMultiShareParams::IsInitialized() const {
  return true;
}

void ForceDisableMultiShareParams::Swap(ForceDisableMultiShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceDisableMultiShareParams::InternalSwap(ForceDisableMultiShareParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ForceDisableMultiShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.ForceDisableMultiShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceDisableMultiShareParams

// optional bool bDisable = 1;
bool ForceDisableMultiShareParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ForceDisableMultiShareParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void ForceDisableMultiShareParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void ForceDisableMultiShareParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool ForceDisableMultiShareParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ForceDisableMultiShareParams.bDisable)
  return bdisable_;
}
void ForceDisableMultiShareParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ForceDisableMultiShareParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableLocalRecordingConverProgressBarDialogParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableLocalRecordingConverProgressBarDialogParams::EnableLocalRecordingConverProgressBarDialogParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
}
EnableLocalRecordingConverProgressBarDialogParams::EnableLocalRecordingConverProgressBarDialogParams(const EnableLocalRecordingConverProgressBarDialogParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
}

void EnableLocalRecordingConverProgressBarDialogParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableLocalRecordingConverProgressBarDialogParams::~EnableLocalRecordingConverProgressBarDialogParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  SharedDtor();
}

void EnableLocalRecordingConverProgressBarDialogParams::SharedDtor() {
}

void EnableLocalRecordingConverProgressBarDialogParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableLocalRecordingConverProgressBarDialogParams& EnableLocalRecordingConverProgressBarDialogParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableLocalRecordingConverProgressBarDialogParams* EnableLocalRecordingConverProgressBarDialogParams::New(::google::protobuf::Arena* arena) const {
  EnableLocalRecordingConverProgressBarDialogParams* n = new EnableLocalRecordingConverProgressBarDialogParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableLocalRecordingConverProgressBarDialogParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableLocalRecordingConverProgressBarDialogParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  return false;
#undef DO_
}

void EnableLocalRecordingConverProgressBarDialogParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
}

size_t EnableLocalRecordingConverProgressBarDialogParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableLocalRecordingConverProgressBarDialogParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableLocalRecordingConverProgressBarDialogParams*>(&from));
}

void EnableLocalRecordingConverProgressBarDialogParams::MergeFrom(const EnableLocalRecordingConverProgressBarDialogParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableLocalRecordingConverProgressBarDialogParams::CopyFrom(const EnableLocalRecordingConverProgressBarDialogParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableLocalRecordingConverProgressBarDialogParams::IsInitialized() const {
  return true;
}

void EnableLocalRecordingConverProgressBarDialogParams::Swap(EnableLocalRecordingConverProgressBarDialogParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableLocalRecordingConverProgressBarDialogParams::InternalSwap(EnableLocalRecordingConverProgressBarDialogParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableLocalRecordingConverProgressBarDialogParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableLocalRecordingConverProgressBarDialogParams

// optional bool bEnable = 1;
bool EnableLocalRecordingConverProgressBarDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableLocalRecordingConverProgressBarDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableLocalRecordingConverProgressBarDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableLocalRecordingConverProgressBarDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableLocalRecordingConverProgressBarDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams.bEnable)
  return benable_;
}
void EnableLocalRecordingConverProgressBarDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLocalRecordingConverProgressBarDialogParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaxDurationForOnlyHostInMeetingParams::kNDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaxDurationForOnlyHostInMeetingParams::SetMaxDurationForOnlyHostInMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
}
SetMaxDurationForOnlyHostInMeetingParams::SetMaxDurationForOnlyHostInMeetingParams(const SetMaxDurationForOnlyHostInMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nduration_ = from.nduration_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
}

void SetMaxDurationForOnlyHostInMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  nduration_ = 0;
}

SetMaxDurationForOnlyHostInMeetingParams::~SetMaxDurationForOnlyHostInMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  SharedDtor();
}

void SetMaxDurationForOnlyHostInMeetingParams::SharedDtor() {
}

void SetMaxDurationForOnlyHostInMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetMaxDurationForOnlyHostInMeetingParams& SetMaxDurationForOnlyHostInMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMaxDurationForOnlyHostInMeetingParams* SetMaxDurationForOnlyHostInMeetingParams::New(::google::protobuf::Arena* arena) const {
  SetMaxDurationForOnlyHostInMeetingParams* n = new SetMaxDurationForOnlyHostInMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMaxDurationForOnlyHostInMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nduration_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetMaxDurationForOnlyHostInMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nDuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nduration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  return false;
#undef DO_
}

void SetMaxDurationForOnlyHostInMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 nDuration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nduration(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
}

size_t SetMaxDurationForOnlyHostInMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 nDuration = 1;
  if (has_nduration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nduration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMaxDurationForOnlyHostInMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetMaxDurationForOnlyHostInMeetingParams*>(&from));
}

void SetMaxDurationForOnlyHostInMeetingParams::MergeFrom(const SetMaxDurationForOnlyHostInMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nduration()) {
    set_nduration(from.nduration());
  }
}

void SetMaxDurationForOnlyHostInMeetingParams::CopyFrom(const SetMaxDurationForOnlyHostInMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaxDurationForOnlyHostInMeetingParams::IsInitialized() const {
  return true;
}

void SetMaxDurationForOnlyHostInMeetingParams::Swap(SetMaxDurationForOnlyHostInMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaxDurationForOnlyHostInMeetingParams::InternalSwap(SetMaxDurationForOnlyHostInMeetingParams* other) {
  using std::swap;
  swap(nduration_, other->nduration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetMaxDurationForOnlyHostInMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMaxDurationForOnlyHostInMeetingParams

// optional int32 nDuration = 1;
bool SetMaxDurationForOnlyHostInMeetingParams::has_nduration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetMaxDurationForOnlyHostInMeetingParams::set_has_nduration() {
  _has_bits_[0] |= 0x00000001u;
}
void SetMaxDurationForOnlyHostInMeetingParams::clear_has_nduration() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetMaxDurationForOnlyHostInMeetingParams::clear_nduration() {
  nduration_ = 0;
  clear_has_nduration();
}
::google::protobuf::int32 SetMaxDurationForOnlyHostInMeetingParams::nduration() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams.nDuration)
  return nduration_;
}
void SetMaxDurationForOnlyHostInMeetingParams::set_nduration(::google::protobuf::int32 value) {
  set_has_nduration();
  nduration_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMaxDurationForOnlyHostInMeetingParams.nDuration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableApproveRemoteControlDlgParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableApproveRemoteControlDlgParams::EnableApproveRemoteControlDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
}
EnableApproveRemoteControlDlgParams::EnableApproveRemoteControlDlgParams(const EnableApproveRemoteControlDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
}

void EnableApproveRemoteControlDlgParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableApproveRemoteControlDlgParams::~EnableApproveRemoteControlDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  SharedDtor();
}

void EnableApproveRemoteControlDlgParams::SharedDtor() {
}

void EnableApproveRemoteControlDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableApproveRemoteControlDlgParams& EnableApproveRemoteControlDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableApproveRemoteControlDlgParams* EnableApproveRemoteControlDlgParams::New(::google::protobuf::Arena* arena) const {
  EnableApproveRemoteControlDlgParams* n = new EnableApproveRemoteControlDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableApproveRemoteControlDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableApproveRemoteControlDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  return false;
#undef DO_
}

void EnableApproveRemoteControlDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
}

size_t EnableApproveRemoteControlDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableApproveRemoteControlDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableApproveRemoteControlDlgParams*>(&from));
}

void EnableApproveRemoteControlDlgParams::MergeFrom(const EnableApproveRemoteControlDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableApproveRemoteControlDlgParams::CopyFrom(const EnableApproveRemoteControlDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableApproveRemoteControlDlgParams::IsInitialized() const {
  return true;
}

void EnableApproveRemoteControlDlgParams::Swap(EnableApproveRemoteControlDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableApproveRemoteControlDlgParams::InternalSwap(EnableApproveRemoteControlDlgParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableApproveRemoteControlDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableApproveRemoteControlDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableApproveRemoteControlDlgParams

// optional bool bEnable = 1;
bool EnableApproveRemoteControlDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableApproveRemoteControlDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableApproveRemoteControlDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableApproveRemoteControlDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableApproveRemoteControlDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams.bEnable)
  return benable_;
}
void EnableApproveRemoteControlDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableApproveRemoteControlDlgParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableDeclineRemoteControlResponseDlgParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableDeclineRemoteControlResponseDlgParams::EnableDeclineRemoteControlResponseDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
}
EnableDeclineRemoteControlResponseDlgParams::EnableDeclineRemoteControlResponseDlgParams(const EnableDeclineRemoteControlResponseDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
}

void EnableDeclineRemoteControlResponseDlgParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableDeclineRemoteControlResponseDlgParams::~EnableDeclineRemoteControlResponseDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  SharedDtor();
}

void EnableDeclineRemoteControlResponseDlgParams::SharedDtor() {
}

void EnableDeclineRemoteControlResponseDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableDeclineRemoteControlResponseDlgParams& EnableDeclineRemoteControlResponseDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableDeclineRemoteControlResponseDlgParams* EnableDeclineRemoteControlResponseDlgParams::New(::google::protobuf::Arena* arena) const {
  EnableDeclineRemoteControlResponseDlgParams* n = new EnableDeclineRemoteControlResponseDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableDeclineRemoteControlResponseDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableDeclineRemoteControlResponseDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  return false;
#undef DO_
}

void EnableDeclineRemoteControlResponseDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
}

size_t EnableDeclineRemoteControlResponseDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableDeclineRemoteControlResponseDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableDeclineRemoteControlResponseDlgParams*>(&from));
}

void EnableDeclineRemoteControlResponseDlgParams::MergeFrom(const EnableDeclineRemoteControlResponseDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableDeclineRemoteControlResponseDlgParams::CopyFrom(const EnableDeclineRemoteControlResponseDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableDeclineRemoteControlResponseDlgParams::IsInitialized() const {
  return true;
}

void EnableDeclineRemoteControlResponseDlgParams::Swap(EnableDeclineRemoteControlResponseDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableDeclineRemoteControlResponseDlgParams::InternalSwap(EnableDeclineRemoteControlResponseDlgParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableDeclineRemoteControlResponseDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableDeclineRemoteControlResponseDlgParams

// optional bool bEnable = 1;
bool EnableDeclineRemoteControlResponseDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableDeclineRemoteControlResponseDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableDeclineRemoteControlResponseDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableDeclineRemoteControlResponseDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableDeclineRemoteControlResponseDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams.bEnable)
  return benable_;
}
void EnableDeclineRemoteControlResponseDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDeclineRemoteControlResponseDlgParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableLeaveMeetingOptionForHostParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableLeaveMeetingOptionForHostParams::EnableLeaveMeetingOptionForHostParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
}
EnableLeaveMeetingOptionForHostParams::EnableLeaveMeetingOptionForHostParams(const EnableLeaveMeetingOptionForHostParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
}

void EnableLeaveMeetingOptionForHostParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableLeaveMeetingOptionForHostParams::~EnableLeaveMeetingOptionForHostParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  SharedDtor();
}

void EnableLeaveMeetingOptionForHostParams::SharedDtor() {
}

void EnableLeaveMeetingOptionForHostParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableLeaveMeetingOptionForHostParams& EnableLeaveMeetingOptionForHostParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableLeaveMeetingOptionForHostParams* EnableLeaveMeetingOptionForHostParams::New(::google::protobuf::Arena* arena) const {
  EnableLeaveMeetingOptionForHostParams* n = new EnableLeaveMeetingOptionForHostParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableLeaveMeetingOptionForHostParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableLeaveMeetingOptionForHostParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  return false;
#undef DO_
}

void EnableLeaveMeetingOptionForHostParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
}

size_t EnableLeaveMeetingOptionForHostParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableLeaveMeetingOptionForHostParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableLeaveMeetingOptionForHostParams*>(&from));
}

void EnableLeaveMeetingOptionForHostParams::MergeFrom(const EnableLeaveMeetingOptionForHostParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableLeaveMeetingOptionForHostParams::CopyFrom(const EnableLeaveMeetingOptionForHostParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableLeaveMeetingOptionForHostParams::IsInitialized() const {
  return true;
}

void EnableLeaveMeetingOptionForHostParams::Swap(EnableLeaveMeetingOptionForHostParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableLeaveMeetingOptionForHostParams::InternalSwap(EnableLeaveMeetingOptionForHostParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableLeaveMeetingOptionForHostParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableLeaveMeetingOptionForHostParams

// optional bool bEnable = 1;
bool EnableLeaveMeetingOptionForHostParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableLeaveMeetingOptionForHostParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableLeaveMeetingOptionForHostParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableLeaveMeetingOptionForHostParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableLeaveMeetingOptionForHostParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams.bEnable)
  return benable_;
}
void EnableLeaveMeetingOptionForHostParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableLeaveMeetingOptionForHostParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableVideoButtonOnMeetingUIParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableVideoButtonOnMeetingUIParams::EnableVideoButtonOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
}
EnableVideoButtonOnMeetingUIParams::EnableVideoButtonOnMeetingUIParams(const EnableVideoButtonOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
}

void EnableVideoButtonOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableVideoButtonOnMeetingUIParams::~EnableVideoButtonOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  SharedDtor();
}

void EnableVideoButtonOnMeetingUIParams::SharedDtor() {
}

void EnableVideoButtonOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableVideoButtonOnMeetingUIParams& EnableVideoButtonOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableVideoButtonOnMeetingUIParams* EnableVideoButtonOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  EnableVideoButtonOnMeetingUIParams* n = new EnableVideoButtonOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableVideoButtonOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableVideoButtonOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  return false;
#undef DO_
}

void EnableVideoButtonOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
}

size_t EnableVideoButtonOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableVideoButtonOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableVideoButtonOnMeetingUIParams*>(&from));
}

void EnableVideoButtonOnMeetingUIParams::MergeFrom(const EnableVideoButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableVideoButtonOnMeetingUIParams::CopyFrom(const EnableVideoButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableVideoButtonOnMeetingUIParams::IsInitialized() const {
  return true;
}

void EnableVideoButtonOnMeetingUIParams::Swap(EnableVideoButtonOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableVideoButtonOnMeetingUIParams::InternalSwap(EnableVideoButtonOnMeetingUIParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableVideoButtonOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableVideoButtonOnMeetingUIParams

// optional bool bEnable = 1;
bool EnableVideoButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableVideoButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableVideoButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableVideoButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableVideoButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams.bEnable)
  return benable_;
}
void EnableVideoButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoButtonOnMeetingUIParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAudioButtonOnMeetingUIParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAudioButtonOnMeetingUIParams::EnableAudioButtonOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
}
EnableAudioButtonOnMeetingUIParams::EnableAudioButtonOnMeetingUIParams(const EnableAudioButtonOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
}

void EnableAudioButtonOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAudioButtonOnMeetingUIParams::~EnableAudioButtonOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  SharedDtor();
}

void EnableAudioButtonOnMeetingUIParams::SharedDtor() {
}

void EnableAudioButtonOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAudioButtonOnMeetingUIParams& EnableAudioButtonOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAudioButtonOnMeetingUIParams* EnableAudioButtonOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  EnableAudioButtonOnMeetingUIParams* n = new EnableAudioButtonOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAudioButtonOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAudioButtonOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  return false;
#undef DO_
}

void EnableAudioButtonOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
}

size_t EnableAudioButtonOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAudioButtonOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAudioButtonOnMeetingUIParams*>(&from));
}

void EnableAudioButtonOnMeetingUIParams::MergeFrom(const EnableAudioButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAudioButtonOnMeetingUIParams::CopyFrom(const EnableAudioButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAudioButtonOnMeetingUIParams::IsInitialized() const {
  return true;
}

void EnableAudioButtonOnMeetingUIParams::Swap(EnableAudioButtonOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAudioButtonOnMeetingUIParams::InternalSwap(EnableAudioButtonOnMeetingUIParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAudioButtonOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAudioButtonOnMeetingUIParams

// optional bool bEnable = 1;
bool EnableAudioButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAudioButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAudioButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAudioButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAudioButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams.bEnable)
  return benable_;
}
void EnableAudioButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAudioButtonOnMeetingUIParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableEnterAndExitFullScreenButtonOnMeetingUIParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableEnterAndExitFullScreenButtonOnMeetingUIParams::EnableEnterAndExitFullScreenButtonOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
}
EnableEnterAndExitFullScreenButtonOnMeetingUIParams::EnableEnterAndExitFullScreenButtonOnMeetingUIParams(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableEnterAndExitFullScreenButtonOnMeetingUIParams::~EnableEnterAndExitFullScreenButtonOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  SharedDtor();
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::SharedDtor() {
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& EnableEnterAndExitFullScreenButtonOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableEnterAndExitFullScreenButtonOnMeetingUIParams* EnableEnterAndExitFullScreenButtonOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  EnableEnterAndExitFullScreenButtonOnMeetingUIParams* n = new EnableEnterAndExitFullScreenButtonOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  return false;
#undef DO_
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
}

size_t EnableEnterAndExitFullScreenButtonOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableEnterAndExitFullScreenButtonOnMeetingUIParams*>(&from));
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::MergeFrom(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::CopyFrom(const EnableEnterAndExitFullScreenButtonOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::IsInitialized() const {
  return true;
}

void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::Swap(EnableEnterAndExitFullScreenButtonOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::InternalSwap(EnableEnterAndExitFullScreenButtonOnMeetingUIParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableEnterAndExitFullScreenButtonOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableEnterAndExitFullScreenButtonOnMeetingUIParams

// optional bool bEnable = 1;
bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableEnterAndExitFullScreenButtonOnMeetingUIParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams.bEnable)
  return benable_;
}
void EnableEnterAndExitFullScreenButtonOnMeetingUIParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableEnterAndExitFullScreenButtonOnMeetingUIParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickShareBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickShareBTNEventParams::RedirectClickShareBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
}
RedirectClickShareBTNEventParams::RedirectClickShareBTNEventParams(const RedirectClickShareBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
}

void RedirectClickShareBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickShareBTNEventParams::~RedirectClickShareBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  SharedDtor();
}

void RedirectClickShareBTNEventParams::SharedDtor() {
}

void RedirectClickShareBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickShareBTNEventParams& RedirectClickShareBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickShareBTNEventParams* RedirectClickShareBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickShareBTNEventParams* n = new RedirectClickShareBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickShareBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickShareBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickShareBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
}

size_t RedirectClickShareBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickShareBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickShareBTNEventParams*>(&from));
}

void RedirectClickShareBTNEventParams::MergeFrom(const RedirectClickShareBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickShareBTNEventParams::CopyFrom(const RedirectClickShareBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickShareBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickShareBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickShareBTNEventParams::Swap(RedirectClickShareBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickShareBTNEventParams::InternalSwap(RedirectClickShareBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickShareBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickShareBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickShareBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickShareBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickShareBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickShareBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickShareBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickShareBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickShareBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickShareBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickShareBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickEndMeetingBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickEndMeetingBTNEventParams::RedirectClickEndMeetingBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
}
RedirectClickEndMeetingBTNEventParams::RedirectClickEndMeetingBTNEventParams(const RedirectClickEndMeetingBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
}

void RedirectClickEndMeetingBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickEndMeetingBTNEventParams::~RedirectClickEndMeetingBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  SharedDtor();
}

void RedirectClickEndMeetingBTNEventParams::SharedDtor() {
}

void RedirectClickEndMeetingBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickEndMeetingBTNEventParams& RedirectClickEndMeetingBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickEndMeetingBTNEventParams* RedirectClickEndMeetingBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickEndMeetingBTNEventParams* n = new RedirectClickEndMeetingBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickEndMeetingBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickEndMeetingBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickEndMeetingBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
}

size_t RedirectClickEndMeetingBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickEndMeetingBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickEndMeetingBTNEventParams*>(&from));
}

void RedirectClickEndMeetingBTNEventParams::MergeFrom(const RedirectClickEndMeetingBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickEndMeetingBTNEventParams::CopyFrom(const RedirectClickEndMeetingBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickEndMeetingBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickEndMeetingBTNEventParams::Swap(RedirectClickEndMeetingBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickEndMeetingBTNEventParams::InternalSwap(RedirectClickEndMeetingBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickEndMeetingBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickEndMeetingBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickEndMeetingBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickEndMeetingBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickEndMeetingBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickEndMeetingBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickEndMeetingBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickEndMeetingBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickEndMeetingBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectFreeMeetingEndingReminderDlgParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectFreeMeetingEndingReminderDlgParams::RedirectFreeMeetingEndingReminderDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
}
RedirectFreeMeetingEndingReminderDlgParams::RedirectFreeMeetingEndingReminderDlgParams(const RedirectFreeMeetingEndingReminderDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
}

void RedirectFreeMeetingEndingReminderDlgParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectFreeMeetingEndingReminderDlgParams::~RedirectFreeMeetingEndingReminderDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  SharedDtor();
}

void RedirectFreeMeetingEndingReminderDlgParams::SharedDtor() {
}

void RedirectFreeMeetingEndingReminderDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectFreeMeetingEndingReminderDlgParams& RedirectFreeMeetingEndingReminderDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectFreeMeetingEndingReminderDlgParams* RedirectFreeMeetingEndingReminderDlgParams::New(::google::protobuf::Arena* arena) const {
  RedirectFreeMeetingEndingReminderDlgParams* n = new RedirectFreeMeetingEndingReminderDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectFreeMeetingEndingReminderDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectFreeMeetingEndingReminderDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  return false;
#undef DO_
}

void RedirectFreeMeetingEndingReminderDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
}

size_t RedirectFreeMeetingEndingReminderDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectFreeMeetingEndingReminderDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectFreeMeetingEndingReminderDlgParams*>(&from));
}

void RedirectFreeMeetingEndingReminderDlgParams::MergeFrom(const RedirectFreeMeetingEndingReminderDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectFreeMeetingEndingReminderDlgParams::CopyFrom(const RedirectFreeMeetingEndingReminderDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectFreeMeetingEndingReminderDlgParams::IsInitialized() const {
  return true;
}

void RedirectFreeMeetingEndingReminderDlgParams::Swap(RedirectFreeMeetingEndingReminderDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectFreeMeetingEndingReminderDlgParams::InternalSwap(RedirectFreeMeetingEndingReminderDlgParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectFreeMeetingEndingReminderDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectFreeMeetingEndingReminderDlgParams

// optional bool bRedirect = 1;
bool RedirectFreeMeetingEndingReminderDlgParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectFreeMeetingEndingReminderDlgParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectFreeMeetingEndingReminderDlgParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectFreeMeetingEndingReminderDlgParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectFreeMeetingEndingReminderDlgParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams.bRedirect)
  return bredirect_;
}
void RedirectFreeMeetingEndingReminderDlgParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectFreeMeetingEndingReminderDlgParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickCustomLiveStreamMenuEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickCustomLiveStreamMenuEventParams::RedirectClickCustomLiveStreamMenuEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
}
RedirectClickCustomLiveStreamMenuEventParams::RedirectClickCustomLiveStreamMenuEventParams(const RedirectClickCustomLiveStreamMenuEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
}

void RedirectClickCustomLiveStreamMenuEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickCustomLiveStreamMenuEventParams::~RedirectClickCustomLiveStreamMenuEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  SharedDtor();
}

void RedirectClickCustomLiveStreamMenuEventParams::SharedDtor() {
}

void RedirectClickCustomLiveStreamMenuEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickCustomLiveStreamMenuEventParams& RedirectClickCustomLiveStreamMenuEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickCustomLiveStreamMenuEventParams* RedirectClickCustomLiveStreamMenuEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickCustomLiveStreamMenuEventParams* n = new RedirectClickCustomLiveStreamMenuEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickCustomLiveStreamMenuEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickCustomLiveStreamMenuEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  return false;
#undef DO_
}

void RedirectClickCustomLiveStreamMenuEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
}

size_t RedirectClickCustomLiveStreamMenuEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickCustomLiveStreamMenuEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickCustomLiveStreamMenuEventParams*>(&from));
}

void RedirectClickCustomLiveStreamMenuEventParams::MergeFrom(const RedirectClickCustomLiveStreamMenuEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickCustomLiveStreamMenuEventParams::CopyFrom(const RedirectClickCustomLiveStreamMenuEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickCustomLiveStreamMenuEventParams::IsInitialized() const {
  return true;
}

void RedirectClickCustomLiveStreamMenuEventParams::Swap(RedirectClickCustomLiveStreamMenuEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickCustomLiveStreamMenuEventParams::InternalSwap(RedirectClickCustomLiveStreamMenuEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickCustomLiveStreamMenuEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickCustomLiveStreamMenuEventParams

// optional bool bRedirect = 1;
bool RedirectClickCustomLiveStreamMenuEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickCustomLiveStreamMenuEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickCustomLiveStreamMenuEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickCustomLiveStreamMenuEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickCustomLiveStreamMenuEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickCustomLiveStreamMenuEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickCustomLiveStreamMenuEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickParticipantListBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickParticipantListBTNEventParams::RedirectClickParticipantListBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
}
RedirectClickParticipantListBTNEventParams::RedirectClickParticipantListBTNEventParams(const RedirectClickParticipantListBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
}

void RedirectClickParticipantListBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickParticipantListBTNEventParams::~RedirectClickParticipantListBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  SharedDtor();
}

void RedirectClickParticipantListBTNEventParams::SharedDtor() {
}

void RedirectClickParticipantListBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickParticipantListBTNEventParams& RedirectClickParticipantListBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickParticipantListBTNEventParams* RedirectClickParticipantListBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickParticipantListBTNEventParams* n = new RedirectClickParticipantListBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickParticipantListBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickParticipantListBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickParticipantListBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
}

size_t RedirectClickParticipantListBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickParticipantListBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickParticipantListBTNEventParams*>(&from));
}

void RedirectClickParticipantListBTNEventParams::MergeFrom(const RedirectClickParticipantListBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickParticipantListBTNEventParams::CopyFrom(const RedirectClickParticipantListBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickParticipantListBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickParticipantListBTNEventParams::Swap(RedirectClickParticipantListBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickParticipantListBTNEventParams::InternalSwap(RedirectClickParticipantListBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickParticipantListBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickParticipantListBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickParticipantListBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickParticipantListBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickParticipantListBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickParticipantListBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickParticipantListBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickParticipantListBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickParticipantListBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickCCBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickCCBTNEventParams::RedirectClickCCBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
}
RedirectClickCCBTNEventParams::RedirectClickCCBTNEventParams(const RedirectClickCCBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
}

void RedirectClickCCBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickCCBTNEventParams::~RedirectClickCCBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  SharedDtor();
}

void RedirectClickCCBTNEventParams::SharedDtor() {
}

void RedirectClickCCBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickCCBTNEventParams& RedirectClickCCBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickCCBTNEventParams* RedirectClickCCBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickCCBTNEventParams* n = new RedirectClickCCBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickCCBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickCCBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickCCBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
}

size_t RedirectClickCCBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickCCBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickCCBTNEventParams*>(&from));
}

void RedirectClickCCBTNEventParams::MergeFrom(const RedirectClickCCBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickCCBTNEventParams::CopyFrom(const RedirectClickCCBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickCCBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickCCBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickCCBTNEventParams::Swap(RedirectClickCCBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickCCBTNEventParams::InternalSwap(RedirectClickCCBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickCCBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickCCBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickCCBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickCCBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickCCBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickCCBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickCCBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickCCBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickCCBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickCCBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickCCBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickAudioBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickAudioBTNEventParams::RedirectClickAudioBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
}
RedirectClickAudioBTNEventParams::RedirectClickAudioBTNEventParams(const RedirectClickAudioBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
}

void RedirectClickAudioBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickAudioBTNEventParams::~RedirectClickAudioBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  SharedDtor();
}

void RedirectClickAudioBTNEventParams::SharedDtor() {
}

void RedirectClickAudioBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickAudioBTNEventParams& RedirectClickAudioBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickAudioBTNEventParams* RedirectClickAudioBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickAudioBTNEventParams* n = new RedirectClickAudioBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickAudioBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickAudioBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickAudioBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
}

size_t RedirectClickAudioBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickAudioBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickAudioBTNEventParams*>(&from));
}

void RedirectClickAudioBTNEventParams::MergeFrom(const RedirectClickAudioBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickAudioBTNEventParams::CopyFrom(const RedirectClickAudioBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickAudioBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickAudioBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickAudioBTNEventParams::Swap(RedirectClickAudioBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickAudioBTNEventParams::InternalSwap(RedirectClickAudioBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickAudioBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickAudioBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickAudioBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickAudioBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickAudioBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickAudioBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickAudioBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickAudioBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickAudioBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickAudioBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickAudioBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectClickAudioMenuBTNEventParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectClickAudioMenuBTNEventParams::RedirectClickAudioMenuBTNEventParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
}
RedirectClickAudioMenuBTNEventParams::RedirectClickAudioMenuBTNEventParams(const RedirectClickAudioMenuBTNEventParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
}

void RedirectClickAudioMenuBTNEventParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectClickAudioMenuBTNEventParams::~RedirectClickAudioMenuBTNEventParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  SharedDtor();
}

void RedirectClickAudioMenuBTNEventParams::SharedDtor() {
}

void RedirectClickAudioMenuBTNEventParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectClickAudioMenuBTNEventParams& RedirectClickAudioMenuBTNEventParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectClickAudioMenuBTNEventParams* RedirectClickAudioMenuBTNEventParams::New(::google::protobuf::Arena* arena) const {
  RedirectClickAudioMenuBTNEventParams* n = new RedirectClickAudioMenuBTNEventParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectClickAudioMenuBTNEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectClickAudioMenuBTNEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  return false;
#undef DO_
}

void RedirectClickAudioMenuBTNEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
}

size_t RedirectClickAudioMenuBTNEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectClickAudioMenuBTNEventParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectClickAudioMenuBTNEventParams*>(&from));
}

void RedirectClickAudioMenuBTNEventParams::MergeFrom(const RedirectClickAudioMenuBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectClickAudioMenuBTNEventParams::CopyFrom(const RedirectClickAudioMenuBTNEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectClickAudioMenuBTNEventParams::IsInitialized() const {
  return true;
}

void RedirectClickAudioMenuBTNEventParams::Swap(RedirectClickAudioMenuBTNEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectClickAudioMenuBTNEventParams::InternalSwap(RedirectClickAudioMenuBTNEventParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectClickAudioMenuBTNEventParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectClickAudioMenuBTNEventParams

// optional bool bRedirect = 1;
bool RedirectClickAudioMenuBTNEventParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectClickAudioMenuBTNEventParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectClickAudioMenuBTNEventParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectClickAudioMenuBTNEventParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectClickAudioMenuBTNEventParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams.bRedirect)
  return bredirect_;
}
void RedirectClickAudioMenuBTNEventParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectClickAudioMenuBTNEventParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectMeetingWarningMsgParams::kBRedirectBadNetworkFieldNumber;
const int RedirectMeetingWarningMsgParams::kBRedirectWarnHighCPUFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectMeetingWarningMsgParams::RedirectMeetingWarningMsgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
}
RedirectMeetingWarningMsgParams::RedirectMeetingWarningMsgParams(const RedirectMeetingWarningMsgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bredirectbadnetwork_, &from.bredirectbadnetwork_,
    static_cast<size_t>(reinterpret_cast<char*>(&bredirectwarnhighcpu_) -
    reinterpret_cast<char*>(&bredirectbadnetwork_)) + sizeof(bredirectwarnhighcpu_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
}

void RedirectMeetingWarningMsgParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bredirectbadnetwork_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bredirectwarnhighcpu_) -
      reinterpret_cast<char*>(&bredirectbadnetwork_)) + sizeof(bredirectwarnhighcpu_));
}

RedirectMeetingWarningMsgParams::~RedirectMeetingWarningMsgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  SharedDtor();
}

void RedirectMeetingWarningMsgParams::SharedDtor() {
}

void RedirectMeetingWarningMsgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectMeetingWarningMsgParams& RedirectMeetingWarningMsgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectMeetingWarningMsgParams* RedirectMeetingWarningMsgParams::New(::google::protobuf::Arena* arena) const {
  RedirectMeetingWarningMsgParams* n = new RedirectMeetingWarningMsgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectMeetingWarningMsgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bredirectbadnetwork_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bredirectwarnhighcpu_) -
        reinterpret_cast<char*>(&bredirectbadnetwork_)) + sizeof(bredirectwarnhighcpu_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectMeetingWarningMsgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirectBadNetwork = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirectbadnetwork();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirectbadnetwork_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bRedirectWarnHighCPU = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bredirectwarnhighcpu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirectwarnhighcpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  return false;
#undef DO_
}

void RedirectMeetingWarningMsgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirectBadNetwork = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirectbadnetwork(), output);
  }

  // optional bool bRedirectWarnHighCPU = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bredirectwarnhighcpu(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
}

size_t RedirectMeetingWarningMsgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bRedirectBadNetwork = 1;
    if (has_bredirectbadnetwork()) {
      total_size += 1 + 1;
    }

    // optional bool bRedirectWarnHighCPU = 2;
    if (has_bredirectwarnhighcpu()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectMeetingWarningMsgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectMeetingWarningMsgParams*>(&from));
}

void RedirectMeetingWarningMsgParams::MergeFrom(const RedirectMeetingWarningMsgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bredirectbadnetwork_ = from.bredirectbadnetwork_;
    }
    if (cached_has_bits & 0x00000002u) {
      bredirectwarnhighcpu_ = from.bredirectwarnhighcpu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RedirectMeetingWarningMsgParams::CopyFrom(const RedirectMeetingWarningMsgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectMeetingWarningMsgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectMeetingWarningMsgParams::IsInitialized() const {
  return true;
}

void RedirectMeetingWarningMsgParams::Swap(RedirectMeetingWarningMsgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectMeetingWarningMsgParams::InternalSwap(RedirectMeetingWarningMsgParams* other) {
  using std::swap;
  swap(bredirectbadnetwork_, other->bredirectbadnetwork_);
  swap(bredirectwarnhighcpu_, other->bredirectwarnhighcpu_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectMeetingWarningMsgParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectMeetingWarningMsgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectMeetingWarningMsgParams

// optional bool bRedirectBadNetwork = 1;
bool RedirectMeetingWarningMsgParams::has_bredirectbadnetwork() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectMeetingWarningMsgParams::set_has_bredirectbadnetwork() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectMeetingWarningMsgParams::clear_has_bredirectbadnetwork() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectMeetingWarningMsgParams::clear_bredirectbadnetwork() {
  bredirectbadnetwork_ = false;
  clear_has_bredirectbadnetwork();
}
bool RedirectMeetingWarningMsgParams::bredirectbadnetwork() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectBadNetwork)
  return bredirectbadnetwork_;
}
void RedirectMeetingWarningMsgParams::set_bredirectbadnetwork(bool value) {
  set_has_bredirectbadnetwork();
  bredirectbadnetwork_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectBadNetwork)
}

// optional bool bRedirectWarnHighCPU = 2;
bool RedirectMeetingWarningMsgParams::has_bredirectwarnhighcpu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectMeetingWarningMsgParams::set_has_bredirectwarnhighcpu() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectMeetingWarningMsgParams::clear_has_bredirectwarnhighcpu() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectMeetingWarningMsgParams::clear_bredirectwarnhighcpu() {
  bredirectwarnhighcpu_ = false;
  clear_has_bredirectwarnhighcpu();
}
bool RedirectMeetingWarningMsgParams::bredirectwarnhighcpu() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectWarnHighCPU)
  return bredirectwarnhighcpu_;
}
void RedirectMeetingWarningMsgParams::set_bredirectwarnhighcpu(bool value) {
  set_has_bredirectwarnhighcpu();
  bredirectwarnhighcpu_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectMeetingWarningMsgParams.bRedirectWarnHighCPU)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableToolTipsShowParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableToolTipsShowParams::EnableToolTipsShowParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableToolTipsShowParams)
}
EnableToolTipsShowParams::EnableToolTipsShowParams(const EnableToolTipsShowParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableToolTipsShowParams)
}

void EnableToolTipsShowParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableToolTipsShowParams::~EnableToolTipsShowParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableToolTipsShowParams)
  SharedDtor();
}

void EnableToolTipsShowParams::SharedDtor() {
}

void EnableToolTipsShowParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableToolTipsShowParams& EnableToolTipsShowParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableToolTipsShowParams* EnableToolTipsShowParams::New(::google::protobuf::Arena* arena) const {
  EnableToolTipsShowParams* n = new EnableToolTipsShowParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableToolTipsShowParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableToolTipsShowParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableToolTipsShowParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableToolTipsShowParams)
  return false;
#undef DO_
}

void EnableToolTipsShowParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableToolTipsShowParams)
}

size_t EnableToolTipsShowParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableToolTipsShowParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableToolTipsShowParams*>(&from));
}

void EnableToolTipsShowParams::MergeFrom(const EnableToolTipsShowParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableToolTipsShowParams::CopyFrom(const EnableToolTipsShowParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableToolTipsShowParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableToolTipsShowParams::IsInitialized() const {
  return true;
}

void EnableToolTipsShowParams::Swap(EnableToolTipsShowParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableToolTipsShowParams::InternalSwap(EnableToolTipsShowParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableToolTipsShowParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableToolTipsShowParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableToolTipsShowParams

// optional bool bEnable = 1;
bool EnableToolTipsShowParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableToolTipsShowParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableToolTipsShowParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableToolTipsShowParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableToolTipsShowParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableToolTipsShowParams.bEnable)
  return benable_;
}
void EnableToolTipsShowParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableToolTipsShowParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAirplayInstructionWindowParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAirplayInstructionWindowParams::EnableAirplayInstructionWindowParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
}
EnableAirplayInstructionWindowParams::EnableAirplayInstructionWindowParams(const EnableAirplayInstructionWindowParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
}

void EnableAirplayInstructionWindowParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAirplayInstructionWindowParams::~EnableAirplayInstructionWindowParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  SharedDtor();
}

void EnableAirplayInstructionWindowParams::SharedDtor() {
}

void EnableAirplayInstructionWindowParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAirplayInstructionWindowParams& EnableAirplayInstructionWindowParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAirplayInstructionWindowParams* EnableAirplayInstructionWindowParams::New(::google::protobuf::Arena* arena) const {
  EnableAirplayInstructionWindowParams* n = new EnableAirplayInstructionWindowParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAirplayInstructionWindowParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAirplayInstructionWindowParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  return false;
#undef DO_
}

void EnableAirplayInstructionWindowParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
}

size_t EnableAirplayInstructionWindowParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAirplayInstructionWindowParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAirplayInstructionWindowParams*>(&from));
}

void EnableAirplayInstructionWindowParams::MergeFrom(const EnableAirplayInstructionWindowParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAirplayInstructionWindowParams::CopyFrom(const EnableAirplayInstructionWindowParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAirplayInstructionWindowParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAirplayInstructionWindowParams::IsInitialized() const {
  return true;
}

void EnableAirplayInstructionWindowParams::Swap(EnableAirplayInstructionWindowParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAirplayInstructionWindowParams::InternalSwap(EnableAirplayInstructionWindowParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAirplayInstructionWindowParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAirplayInstructionWindowParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAirplayInstructionWindowParams

// optional bool bEnable = 1;
bool EnableAirplayInstructionWindowParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAirplayInstructionWindowParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAirplayInstructionWindowParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAirplayInstructionWindowParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAirplayInstructionWindowParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAirplayInstructionWindowParams.bEnable)
  return benable_;
}
void EnableAirplayInstructionWindowParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAirplayInstructionWindowParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableClaimHostFeatureParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableClaimHostFeatureParams::EnableClaimHostFeatureParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableClaimHostFeatureParams)
}
EnableClaimHostFeatureParams::EnableClaimHostFeatureParams(const EnableClaimHostFeatureParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableClaimHostFeatureParams)
}

void EnableClaimHostFeatureParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableClaimHostFeatureParams::~EnableClaimHostFeatureParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  SharedDtor();
}

void EnableClaimHostFeatureParams::SharedDtor() {
}

void EnableClaimHostFeatureParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableClaimHostFeatureParams& EnableClaimHostFeatureParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableClaimHostFeatureParams* EnableClaimHostFeatureParams::New(::google::protobuf::Arena* arena) const {
  EnableClaimHostFeatureParams* n = new EnableClaimHostFeatureParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableClaimHostFeatureParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableClaimHostFeatureParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  return false;
#undef DO_
}

void EnableClaimHostFeatureParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableClaimHostFeatureParams)
}

size_t EnableClaimHostFeatureParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableClaimHostFeatureParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableClaimHostFeatureParams*>(&from));
}

void EnableClaimHostFeatureParams::MergeFrom(const EnableClaimHostFeatureParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableClaimHostFeatureParams::CopyFrom(const EnableClaimHostFeatureParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableClaimHostFeatureParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableClaimHostFeatureParams::IsInitialized() const {
  return true;
}

void EnableClaimHostFeatureParams::Swap(EnableClaimHostFeatureParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableClaimHostFeatureParams::InternalSwap(EnableClaimHostFeatureParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableClaimHostFeatureParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableClaimHostFeatureParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableClaimHostFeatureParams

// optional bool bEnable = 1;
bool EnableClaimHostFeatureParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableClaimHostFeatureParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableClaimHostFeatureParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableClaimHostFeatureParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableClaimHostFeatureParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableClaimHostFeatureParams.bEnable)
  return benable_;
}
void EnableClaimHostFeatureParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableClaimHostFeatureParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoHideJoinAudioDialogParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoHideJoinAudioDialogParams::EnableAutoHideJoinAudioDialogParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
}
EnableAutoHideJoinAudioDialogParams::EnableAutoHideJoinAudioDialogParams(const EnableAutoHideJoinAudioDialogParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
}

void EnableAutoHideJoinAudioDialogParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoHideJoinAudioDialogParams::~EnableAutoHideJoinAudioDialogParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  SharedDtor();
}

void EnableAutoHideJoinAudioDialogParams::SharedDtor() {
}

void EnableAutoHideJoinAudioDialogParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoHideJoinAudioDialogParams& EnableAutoHideJoinAudioDialogParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoHideJoinAudioDialogParams* EnableAutoHideJoinAudioDialogParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoHideJoinAudioDialogParams* n = new EnableAutoHideJoinAudioDialogParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoHideJoinAudioDialogParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoHideJoinAudioDialogParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  return false;
#undef DO_
}

void EnableAutoHideJoinAudioDialogParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
}

size_t EnableAutoHideJoinAudioDialogParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoHideJoinAudioDialogParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoHideJoinAudioDialogParams*>(&from));
}

void EnableAutoHideJoinAudioDialogParams::MergeFrom(const EnableAutoHideJoinAudioDialogParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoHideJoinAudioDialogParams::CopyFrom(const EnableAutoHideJoinAudioDialogParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoHideJoinAudioDialogParams::IsInitialized() const {
  return true;
}

void EnableAutoHideJoinAudioDialogParams::Swap(EnableAutoHideJoinAudioDialogParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoHideJoinAudioDialogParams::InternalSwap(EnableAutoHideJoinAudioDialogParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoHideJoinAudioDialogParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoHideJoinAudioDialogParams

// optional bool bEnable = 1;
bool EnableAutoHideJoinAudioDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoHideJoinAudioDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoHideJoinAudioDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoHideJoinAudioDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoHideJoinAudioDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams.bEnable)
  return benable_;
}
void EnableAutoHideJoinAudioDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoHideJoinAudioDialogParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlwaysShowIconOnTaskBarParams::kBAlwaysShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlwaysShowIconOnTaskBarParams::AlwaysShowIconOnTaskBarParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
}
AlwaysShowIconOnTaskBarParams::AlwaysShowIconOnTaskBarParams(const AlwaysShowIconOnTaskBarParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  balwaysshow_ = from.balwaysshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
}

void AlwaysShowIconOnTaskBarParams::SharedCtor() {
  _cached_size_ = 0;
  balwaysshow_ = false;
}

AlwaysShowIconOnTaskBarParams::~AlwaysShowIconOnTaskBarParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  SharedDtor();
}

void AlwaysShowIconOnTaskBarParams::SharedDtor() {
}

void AlwaysShowIconOnTaskBarParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AlwaysShowIconOnTaskBarParams& AlwaysShowIconOnTaskBarParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlwaysShowIconOnTaskBarParams* AlwaysShowIconOnTaskBarParams::New(::google::protobuf::Arena* arena) const {
  AlwaysShowIconOnTaskBarParams* n = new AlwaysShowIconOnTaskBarParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlwaysShowIconOnTaskBarParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  balwaysshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AlwaysShowIconOnTaskBarParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bAlwaysShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_balwaysshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &balwaysshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  return false;
#undef DO_
}

void AlwaysShowIconOnTaskBarParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bAlwaysShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->balwaysshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
}

size_t AlwaysShowIconOnTaskBarParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bAlwaysShow = 1;
  if (has_balwaysshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlwaysShowIconOnTaskBarParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AlwaysShowIconOnTaskBarParams*>(&from));
}

void AlwaysShowIconOnTaskBarParams::MergeFrom(const AlwaysShowIconOnTaskBarParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_balwaysshow()) {
    set_balwaysshow(from.balwaysshow());
  }
}

void AlwaysShowIconOnTaskBarParams::CopyFrom(const AlwaysShowIconOnTaskBarParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlwaysShowIconOnTaskBarParams::IsInitialized() const {
  return true;
}

void AlwaysShowIconOnTaskBarParams::Swap(AlwaysShowIconOnTaskBarParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlwaysShowIconOnTaskBarParams::InternalSwap(AlwaysShowIconOnTaskBarParams* other) {
  using std::swap;
  swap(balwaysshow_, other->balwaysshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AlwaysShowIconOnTaskBarParams::GetTypeName() const {
  return "com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlwaysShowIconOnTaskBarParams

// optional bool bAlwaysShow = 1;
bool AlwaysShowIconOnTaskBarParams::has_balwaysshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AlwaysShowIconOnTaskBarParams::set_has_balwaysshow() {
  _has_bits_[0] |= 0x00000001u;
}
void AlwaysShowIconOnTaskBarParams::clear_has_balwaysshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void AlwaysShowIconOnTaskBarParams::clear_balwaysshow() {
  balwaysshow_ = false;
  clear_has_balwaysshow();
}
bool AlwaysShowIconOnTaskBarParams::balwaysshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams.bAlwaysShow)
  return balwaysshow_;
}
void AlwaysShowIconOnTaskBarParams::set_balwaysshow(bool value) {
  set_has_balwaysshow();
  balwaysshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AlwaysShowIconOnTaskBarParams.bAlwaysShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableSplitScreenModeUIElementsParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableSplitScreenModeUIElementsParams::DisableSplitScreenModeUIElementsParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
}
DisableSplitScreenModeUIElementsParams::DisableSplitScreenModeUIElementsParams(const DisableSplitScreenModeUIElementsParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
}

void DisableSplitScreenModeUIElementsParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableSplitScreenModeUIElementsParams::~DisableSplitScreenModeUIElementsParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  SharedDtor();
}

void DisableSplitScreenModeUIElementsParams::SharedDtor() {
}

void DisableSplitScreenModeUIElementsParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableSplitScreenModeUIElementsParams& DisableSplitScreenModeUIElementsParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableSplitScreenModeUIElementsParams* DisableSplitScreenModeUIElementsParams::New(::google::protobuf::Arena* arena) const {
  DisableSplitScreenModeUIElementsParams* n = new DisableSplitScreenModeUIElementsParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableSplitScreenModeUIElementsParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableSplitScreenModeUIElementsParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  return false;
#undef DO_
}

void DisableSplitScreenModeUIElementsParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
}

size_t DisableSplitScreenModeUIElementsParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableSplitScreenModeUIElementsParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableSplitScreenModeUIElementsParams*>(&from));
}

void DisableSplitScreenModeUIElementsParams::MergeFrom(const DisableSplitScreenModeUIElementsParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableSplitScreenModeUIElementsParams::CopyFrom(const DisableSplitScreenModeUIElementsParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableSplitScreenModeUIElementsParams::IsInitialized() const {
  return true;
}

void DisableSplitScreenModeUIElementsParams::Swap(DisableSplitScreenModeUIElementsParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableSplitScreenModeUIElementsParams::InternalSwap(DisableSplitScreenModeUIElementsParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableSplitScreenModeUIElementsParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableSplitScreenModeUIElementsParams

// optional bool bDisable = 1;
bool DisableSplitScreenModeUIElementsParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableSplitScreenModeUIElementsParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableSplitScreenModeUIElementsParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableSplitScreenModeUIElementsParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableSplitScreenModeUIElementsParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams.bDisable)
  return bdisable_;
}
void DisableSplitScreenModeUIElementsParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableSplitScreenModeUIElementsParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowAudioUseComputerSoundChkboxParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowAudioUseComputerSoundChkboxParams::SetShowAudioUseComputerSoundChkboxParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
}
SetShowAudioUseComputerSoundChkboxParams::SetShowAudioUseComputerSoundChkboxParams(const SetShowAudioUseComputerSoundChkboxParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
}

void SetShowAudioUseComputerSoundChkboxParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetShowAudioUseComputerSoundChkboxParams::~SetShowAudioUseComputerSoundChkboxParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  SharedDtor();
}

void SetShowAudioUseComputerSoundChkboxParams::SharedDtor() {
}

void SetShowAudioUseComputerSoundChkboxParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowAudioUseComputerSoundChkboxParams& SetShowAudioUseComputerSoundChkboxParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowAudioUseComputerSoundChkboxParams* SetShowAudioUseComputerSoundChkboxParams::New(::google::protobuf::Arena* arena) const {
  SetShowAudioUseComputerSoundChkboxParams* n = new SetShowAudioUseComputerSoundChkboxParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowAudioUseComputerSoundChkboxParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowAudioUseComputerSoundChkboxParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  return false;
#undef DO_
}

void SetShowAudioUseComputerSoundChkboxParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
}

size_t SetShowAudioUseComputerSoundChkboxParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowAudioUseComputerSoundChkboxParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowAudioUseComputerSoundChkboxParams*>(&from));
}

void SetShowAudioUseComputerSoundChkboxParams::MergeFrom(const SetShowAudioUseComputerSoundChkboxParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetShowAudioUseComputerSoundChkboxParams::CopyFrom(const SetShowAudioUseComputerSoundChkboxParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowAudioUseComputerSoundChkboxParams::IsInitialized() const {
  return true;
}

void SetShowAudioUseComputerSoundChkboxParams::Swap(SetShowAudioUseComputerSoundChkboxParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowAudioUseComputerSoundChkboxParams::InternalSwap(SetShowAudioUseComputerSoundChkboxParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowAudioUseComputerSoundChkboxParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowAudioUseComputerSoundChkboxParams

// optional bool bShow = 1;
bool SetShowAudioUseComputerSoundChkboxParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowAudioUseComputerSoundChkboxParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowAudioUseComputerSoundChkboxParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowAudioUseComputerSoundChkboxParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowAudioUseComputerSoundChkboxParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams.bShow)
  return bshow_;
}
void SetShowAudioUseComputerSoundChkboxParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowAudioUseComputerSoundChkboxParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowCallInTabParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowCallInTabParams::SetShowCallInTabParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowCallInTabParams)
}
SetShowCallInTabParams::SetShowCallInTabParams(const SetShowCallInTabParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowCallInTabParams)
}

void SetShowCallInTabParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetShowCallInTabParams::~SetShowCallInTabParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowCallInTabParams)
  SharedDtor();
}

void SetShowCallInTabParams::SharedDtor() {
}

void SetShowCallInTabParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowCallInTabParams& SetShowCallInTabParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowCallInTabParams* SetShowCallInTabParams::New(::google::protobuf::Arena* arena) const {
  SetShowCallInTabParams* n = new SetShowCallInTabParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowCallInTabParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowCallInTabParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowCallInTabParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowCallInTabParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowCallInTabParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowCallInTabParams)
  return false;
#undef DO_
}

void SetShowCallInTabParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowCallInTabParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowCallInTabParams)
}

size_t SetShowCallInTabParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowCallInTabParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowCallInTabParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowCallInTabParams*>(&from));
}

void SetShowCallInTabParams::MergeFrom(const SetShowCallInTabParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowCallInTabParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetShowCallInTabParams::CopyFrom(const SetShowCallInTabParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowCallInTabParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowCallInTabParams::IsInitialized() const {
  return true;
}

void SetShowCallInTabParams::Swap(SetShowCallInTabParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowCallInTabParams::InternalSwap(SetShowCallInTabParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowCallInTabParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowCallInTabParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowCallInTabParams

// optional bool bShow = 1;
bool SetShowCallInTabParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowCallInTabParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowCallInTabParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowCallInTabParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowCallInTabParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowCallInTabParams.bShow)
  return bshow_;
}
void SetShowCallInTabParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowCallInTabParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowCallMeTabParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowCallMeTabParams::SetShowCallMeTabParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowCallMeTabParams)
}
SetShowCallMeTabParams::SetShowCallMeTabParams(const SetShowCallMeTabParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowCallMeTabParams)
}

void SetShowCallMeTabParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetShowCallMeTabParams::~SetShowCallMeTabParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowCallMeTabParams)
  SharedDtor();
}

void SetShowCallMeTabParams::SharedDtor() {
}

void SetShowCallMeTabParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowCallMeTabParams& SetShowCallMeTabParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowCallMeTabParams* SetShowCallMeTabParams::New(::google::protobuf::Arena* arena) const {
  SetShowCallMeTabParams* n = new SetShowCallMeTabParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowCallMeTabParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowCallMeTabParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowCallMeTabParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowCallMeTabParams)
  return false;
#undef DO_
}

void SetShowCallMeTabParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowCallMeTabParams)
}

size_t SetShowCallMeTabParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowCallMeTabParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowCallMeTabParams*>(&from));
}

void SetShowCallMeTabParams::MergeFrom(const SetShowCallMeTabParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetShowCallMeTabParams::CopyFrom(const SetShowCallMeTabParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowCallMeTabParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowCallMeTabParams::IsInitialized() const {
  return true;
}

void SetShowCallMeTabParams::Swap(SetShowCallMeTabParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowCallMeTabParams::InternalSwap(SetShowCallMeTabParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowCallMeTabParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowCallMeTabParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowCallMeTabParams

// optional bool bShow = 1;
bool SetShowCallMeTabParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowCallMeTabParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowCallMeTabParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowCallMeTabParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowCallMeTabParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowCallMeTabParams.bShow)
  return bshow_;
}
void SetShowCallMeTabParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowCallMeTabParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableTopMostAttr4SettingDialogParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableTopMostAttr4SettingDialogParams::DisableTopMostAttr4SettingDialogParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
}
DisableTopMostAttr4SettingDialogParams::DisableTopMostAttr4SettingDialogParams(const DisableTopMostAttr4SettingDialogParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
}

void DisableTopMostAttr4SettingDialogParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableTopMostAttr4SettingDialogParams::~DisableTopMostAttr4SettingDialogParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  SharedDtor();
}

void DisableTopMostAttr4SettingDialogParams::SharedDtor() {
}

void DisableTopMostAttr4SettingDialogParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableTopMostAttr4SettingDialogParams& DisableTopMostAttr4SettingDialogParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableTopMostAttr4SettingDialogParams* DisableTopMostAttr4SettingDialogParams::New(::google::protobuf::Arena* arena) const {
  DisableTopMostAttr4SettingDialogParams* n = new DisableTopMostAttr4SettingDialogParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableTopMostAttr4SettingDialogParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableTopMostAttr4SettingDialogParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  return false;
#undef DO_
}

void DisableTopMostAttr4SettingDialogParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
}

size_t DisableTopMostAttr4SettingDialogParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableTopMostAttr4SettingDialogParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableTopMostAttr4SettingDialogParams*>(&from));
}

void DisableTopMostAttr4SettingDialogParams::MergeFrom(const DisableTopMostAttr4SettingDialogParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableTopMostAttr4SettingDialogParams::CopyFrom(const DisableTopMostAttr4SettingDialogParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableTopMostAttr4SettingDialogParams::IsInitialized() const {
  return true;
}

void DisableTopMostAttr4SettingDialogParams::Swap(DisableTopMostAttr4SettingDialogParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableTopMostAttr4SettingDialogParams::InternalSwap(DisableTopMostAttr4SettingDialogParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableTopMostAttr4SettingDialogParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableTopMostAttr4SettingDialogParams

// optional bool bDisable = 1;
bool DisableTopMostAttr4SettingDialogParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableTopMostAttr4SettingDialogParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableTopMostAttr4SettingDialogParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableTopMostAttr4SettingDialogParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableTopMostAttr4SettingDialogParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams.bDisable)
  return bdisable_;
}
void DisableTopMostAttr4SettingDialogParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableTopMostAttr4SettingDialogParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableGrabShareWithoutReminderParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableGrabShareWithoutReminderParams::EnableGrabShareWithoutReminderParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
}
EnableGrabShareWithoutReminderParams::EnableGrabShareWithoutReminderParams(const EnableGrabShareWithoutReminderParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
}

void EnableGrabShareWithoutReminderParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableGrabShareWithoutReminderParams::~EnableGrabShareWithoutReminderParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  SharedDtor();
}

void EnableGrabShareWithoutReminderParams::SharedDtor() {
}

void EnableGrabShareWithoutReminderParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableGrabShareWithoutReminderParams& EnableGrabShareWithoutReminderParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableGrabShareWithoutReminderParams* EnableGrabShareWithoutReminderParams::New(::google::protobuf::Arena* arena) const {
  EnableGrabShareWithoutReminderParams* n = new EnableGrabShareWithoutReminderParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableGrabShareWithoutReminderParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableGrabShareWithoutReminderParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  return false;
#undef DO_
}

void EnableGrabShareWithoutReminderParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
}

size_t EnableGrabShareWithoutReminderParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableGrabShareWithoutReminderParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableGrabShareWithoutReminderParams*>(&from));
}

void EnableGrabShareWithoutReminderParams::MergeFrom(const EnableGrabShareWithoutReminderParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableGrabShareWithoutReminderParams::CopyFrom(const EnableGrabShareWithoutReminderParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableGrabShareWithoutReminderParams::IsInitialized() const {
  return true;
}

void EnableGrabShareWithoutReminderParams::Swap(EnableGrabShareWithoutReminderParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableGrabShareWithoutReminderParams::InternalSwap(EnableGrabShareWithoutReminderParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableGrabShareWithoutReminderParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableGrabShareWithoutReminderParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableGrabShareWithoutReminderParams

// optional bool bEnable = 1;
bool EnableGrabShareWithoutReminderParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableGrabShareWithoutReminderParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableGrabShareWithoutReminderParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableGrabShareWithoutReminderParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableGrabShareWithoutReminderParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams.bEnable)
  return benable_;
}
void EnableGrabShareWithoutReminderParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableGrabShareWithoutReminderParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableShowShareSwitchMultiToSingleConfirmDlgParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableShowShareSwitchMultiToSingleConfirmDlgParams::EnableShowShareSwitchMultiToSingleConfirmDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
}
EnableShowShareSwitchMultiToSingleConfirmDlgParams::EnableShowShareSwitchMultiToSingleConfirmDlgParams(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableShowShareSwitchMultiToSingleConfirmDlgParams::~EnableShowShareSwitchMultiToSingleConfirmDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  SharedDtor();
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::SharedDtor() {
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableShowShareSwitchMultiToSingleConfirmDlgParams& EnableShowShareSwitchMultiToSingleConfirmDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableShowShareSwitchMultiToSingleConfirmDlgParams* EnableShowShareSwitchMultiToSingleConfirmDlgParams::New(::google::protobuf::Arena* arena) const {
  EnableShowShareSwitchMultiToSingleConfirmDlgParams* n = new EnableShowShareSwitchMultiToSingleConfirmDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  return false;
#undef DO_
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
}

size_t EnableShowShareSwitchMultiToSingleConfirmDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableShowShareSwitchMultiToSingleConfirmDlgParams*>(&from));
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::MergeFrom(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::CopyFrom(const EnableShowShareSwitchMultiToSingleConfirmDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::IsInitialized() const {
  return true;
}

void EnableShowShareSwitchMultiToSingleConfirmDlgParams::Swap(EnableShowShareSwitchMultiToSingleConfirmDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableShowShareSwitchMultiToSingleConfirmDlgParams::InternalSwap(EnableShowShareSwitchMultiToSingleConfirmDlgParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableShowShareSwitchMultiToSingleConfirmDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableShowShareSwitchMultiToSingleConfirmDlgParams

// optional bool bEnable = 1;
bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableShowShareSwitchMultiToSingleConfirmDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableShowShareSwitchMultiToSingleConfirmDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableShowShareSwitchMultiToSingleConfirmDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableShowShareSwitchMultiToSingleConfirmDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams.bEnable)
  return benable_;
}
void EnableShowShareSwitchMultiToSingleConfirmDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowShareSwitchMultiToSingleConfirmDlgParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableFreeMeetingRemainTimeNotifyParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableFreeMeetingRemainTimeNotifyParams::DisableFreeMeetingRemainTimeNotifyParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
}
DisableFreeMeetingRemainTimeNotifyParams::DisableFreeMeetingRemainTimeNotifyParams(const DisableFreeMeetingRemainTimeNotifyParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
}

void DisableFreeMeetingRemainTimeNotifyParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableFreeMeetingRemainTimeNotifyParams::~DisableFreeMeetingRemainTimeNotifyParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  SharedDtor();
}

void DisableFreeMeetingRemainTimeNotifyParams::SharedDtor() {
}

void DisableFreeMeetingRemainTimeNotifyParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableFreeMeetingRemainTimeNotifyParams& DisableFreeMeetingRemainTimeNotifyParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableFreeMeetingRemainTimeNotifyParams* DisableFreeMeetingRemainTimeNotifyParams::New(::google::protobuf::Arena* arena) const {
  DisableFreeMeetingRemainTimeNotifyParams* n = new DisableFreeMeetingRemainTimeNotifyParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableFreeMeetingRemainTimeNotifyParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableFreeMeetingRemainTimeNotifyParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  return false;
#undef DO_
}

void DisableFreeMeetingRemainTimeNotifyParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
}

size_t DisableFreeMeetingRemainTimeNotifyParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableFreeMeetingRemainTimeNotifyParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableFreeMeetingRemainTimeNotifyParams*>(&from));
}

void DisableFreeMeetingRemainTimeNotifyParams::MergeFrom(const DisableFreeMeetingRemainTimeNotifyParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableFreeMeetingRemainTimeNotifyParams::CopyFrom(const DisableFreeMeetingRemainTimeNotifyParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableFreeMeetingRemainTimeNotifyParams::IsInitialized() const {
  return true;
}

void DisableFreeMeetingRemainTimeNotifyParams::Swap(DisableFreeMeetingRemainTimeNotifyParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableFreeMeetingRemainTimeNotifyParams::InternalSwap(DisableFreeMeetingRemainTimeNotifyParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableFreeMeetingRemainTimeNotifyParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableFreeMeetingRemainTimeNotifyParams

// optional bool bDisable = 1;
bool DisableFreeMeetingRemainTimeNotifyParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableFreeMeetingRemainTimeNotifyParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableFreeMeetingRemainTimeNotifyParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableFreeMeetingRemainTimeNotifyParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableFreeMeetingRemainTimeNotifyParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams.bDisable)
  return bdisable_;
}
void DisableFreeMeetingRemainTimeNotifyParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableFreeMeetingRemainTimeNotifyParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideChatItemOnMeetingUIParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideChatItemOnMeetingUIParams::HideChatItemOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
}
HideChatItemOnMeetingUIParams::HideChatItemOnMeetingUIParams(const HideChatItemOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
}

void HideChatItemOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideChatItemOnMeetingUIParams::~HideChatItemOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  SharedDtor();
}

void HideChatItemOnMeetingUIParams::SharedDtor() {
}

void HideChatItemOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideChatItemOnMeetingUIParams& HideChatItemOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideChatItemOnMeetingUIParams* HideChatItemOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  HideChatItemOnMeetingUIParams* n = new HideChatItemOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideChatItemOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideChatItemOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  return false;
#undef DO_
}

void HideChatItemOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
}

size_t HideChatItemOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideChatItemOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideChatItemOnMeetingUIParams*>(&from));
}

void HideChatItemOnMeetingUIParams::MergeFrom(const HideChatItemOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideChatItemOnMeetingUIParams::CopyFrom(const HideChatItemOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideChatItemOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideChatItemOnMeetingUIParams::IsInitialized() const {
  return true;
}

void HideChatItemOnMeetingUIParams::Swap(HideChatItemOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideChatItemOnMeetingUIParams::InternalSwap(HideChatItemOnMeetingUIParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideChatItemOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideChatItemOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideChatItemOnMeetingUIParams

// optional bool bHide = 1;
bool HideChatItemOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideChatItemOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideChatItemOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideChatItemOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideChatItemOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideChatItemOnMeetingUIParams.bHide)
  return bhide_;
}
void HideChatItemOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideChatItemOnMeetingUIParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideRecordItemOnMeetingUIParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideRecordItemOnMeetingUIParams::HideRecordItemOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
}
HideRecordItemOnMeetingUIParams::HideRecordItemOnMeetingUIParams(const HideRecordItemOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
}

void HideRecordItemOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideRecordItemOnMeetingUIParams::~HideRecordItemOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  SharedDtor();
}

void HideRecordItemOnMeetingUIParams::SharedDtor() {
}

void HideRecordItemOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideRecordItemOnMeetingUIParams& HideRecordItemOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideRecordItemOnMeetingUIParams* HideRecordItemOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  HideRecordItemOnMeetingUIParams* n = new HideRecordItemOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideRecordItemOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideRecordItemOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  return false;
#undef DO_
}

void HideRecordItemOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
}

size_t HideRecordItemOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideRecordItemOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideRecordItemOnMeetingUIParams*>(&from));
}

void HideRecordItemOnMeetingUIParams::MergeFrom(const HideRecordItemOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideRecordItemOnMeetingUIParams::CopyFrom(const HideRecordItemOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideRecordItemOnMeetingUIParams::IsInitialized() const {
  return true;
}

void HideRecordItemOnMeetingUIParams::Swap(HideRecordItemOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideRecordItemOnMeetingUIParams::InternalSwap(HideRecordItemOnMeetingUIParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideRecordItemOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideRecordItemOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideRecordItemOnMeetingUIParams

// optional bool bHide = 1;
bool HideRecordItemOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideRecordItemOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideRecordItemOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideRecordItemOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideRecordItemOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams.bHide)
  return bhide_;
}
void HideRecordItemOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideRecordItemOnMeetingUIParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideUpgradeFreeMeetingButtonParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideUpgradeFreeMeetingButtonParams::HideUpgradeFreeMeetingButtonParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
}
HideUpgradeFreeMeetingButtonParams::HideUpgradeFreeMeetingButtonParams(const HideUpgradeFreeMeetingButtonParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
}

void HideUpgradeFreeMeetingButtonParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideUpgradeFreeMeetingButtonParams::~HideUpgradeFreeMeetingButtonParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  SharedDtor();
}

void HideUpgradeFreeMeetingButtonParams::SharedDtor() {
}

void HideUpgradeFreeMeetingButtonParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideUpgradeFreeMeetingButtonParams& HideUpgradeFreeMeetingButtonParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideUpgradeFreeMeetingButtonParams* HideUpgradeFreeMeetingButtonParams::New(::google::protobuf::Arena* arena) const {
  HideUpgradeFreeMeetingButtonParams* n = new HideUpgradeFreeMeetingButtonParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideUpgradeFreeMeetingButtonParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideUpgradeFreeMeetingButtonParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  return false;
#undef DO_
}

void HideUpgradeFreeMeetingButtonParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
}

size_t HideUpgradeFreeMeetingButtonParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideUpgradeFreeMeetingButtonParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideUpgradeFreeMeetingButtonParams*>(&from));
}

void HideUpgradeFreeMeetingButtonParams::MergeFrom(const HideUpgradeFreeMeetingButtonParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideUpgradeFreeMeetingButtonParams::CopyFrom(const HideUpgradeFreeMeetingButtonParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideUpgradeFreeMeetingButtonParams::IsInitialized() const {
  return true;
}

void HideUpgradeFreeMeetingButtonParams::Swap(HideUpgradeFreeMeetingButtonParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideUpgradeFreeMeetingButtonParams::InternalSwap(HideUpgradeFreeMeetingButtonParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideUpgradeFreeMeetingButtonParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideUpgradeFreeMeetingButtonParams

// optional bool bHide = 1;
bool HideUpgradeFreeMeetingButtonParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideUpgradeFreeMeetingButtonParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideUpgradeFreeMeetingButtonParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideUpgradeFreeMeetingButtonParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideUpgradeFreeMeetingButtonParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams.bHide)
  return bhide_;
}
void HideUpgradeFreeMeetingButtonParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideUpgradeFreeMeetingButtonParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowInviteDlgTabPageParams::kTabPageFieldNumber;
const int SetShowInviteDlgTabPageParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowInviteDlgTabPageParams::SetShowInviteDlgTabPageParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
}
SetShowInviteDlgTabPageParams::SetShowInviteDlgTabPageParams(const SetShowInviteDlgTabPageParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tabpage_, &from.tabpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&bshow_) -
    reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
}

void SetShowInviteDlgTabPageParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tabpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bshow_) -
      reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
}

SetShowInviteDlgTabPageParams::~SetShowInviteDlgTabPageParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  SharedDtor();
}

void SetShowInviteDlgTabPageParams::SharedDtor() {
}

void SetShowInviteDlgTabPageParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowInviteDlgTabPageParams& SetShowInviteDlgTabPageParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowInviteDlgTabPageParams* SetShowInviteDlgTabPageParams::New(::google::protobuf::Arena* arena) const {
  SetShowInviteDlgTabPageParams* n = new SetShowInviteDlgTabPageParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowInviteDlgTabPageParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tabpage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bshow_) -
        reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowInviteDlgTabPageParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tabPage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tabpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tabpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bShow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  return false;
#undef DO_
}

void SetShowInviteDlgTabPageParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tabPage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tabpage(), output);
  }

  // optional bool bShow = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
}

size_t SetShowInviteDlgTabPageParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 tabPage = 1;
    if (has_tabpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tabpage());
    }

    // optional bool bShow = 2;
    if (has_bshow()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowInviteDlgTabPageParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowInviteDlgTabPageParams*>(&from));
}

void SetShowInviteDlgTabPageParams::MergeFrom(const SetShowInviteDlgTabPageParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tabpage_ = from.tabpage_;
    }
    if (cached_has_bits & 0x00000002u) {
      bshow_ = from.bshow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetShowInviteDlgTabPageParams::CopyFrom(const SetShowInviteDlgTabPageParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowInviteDlgTabPageParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowInviteDlgTabPageParams::IsInitialized() const {
  return true;
}

void SetShowInviteDlgTabPageParams::Swap(SetShowInviteDlgTabPageParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowInviteDlgTabPageParams::InternalSwap(SetShowInviteDlgTabPageParams* other) {
  using std::swap;
  swap(tabpage_, other->tabpage_);
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowInviteDlgTabPageParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowInviteDlgTabPageParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowInviteDlgTabPageParams

// optional int32 tabPage = 1;
bool SetShowInviteDlgTabPageParams::has_tabpage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowInviteDlgTabPageParams::set_has_tabpage() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowInviteDlgTabPageParams::clear_has_tabpage() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowInviteDlgTabPageParams::clear_tabpage() {
  tabpage_ = 0;
  clear_has_tabpage();
}
::google::protobuf::int32 SetShowInviteDlgTabPageParams::tabpage() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.tabPage)
  return tabpage_;
}
void SetShowInviteDlgTabPageParams::set_tabpage(::google::protobuf::int32 value) {
  set_has_tabpage();
  tabpage_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.tabPage)
}

// optional bool bShow = 2;
bool SetShowInviteDlgTabPageParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetShowInviteDlgTabPageParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000002u;
}
void SetShowInviteDlgTabPageParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetShowInviteDlgTabPageParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowInviteDlgTabPageParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.bShow)
  return bshow_;
}
void SetShowInviteDlgTabPageParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowInviteDlgTabPageParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowH323SubTabPageParams::kTabPageFieldNumber;
const int SetShowH323SubTabPageParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowH323SubTabPageParams::SetShowH323SubTabPageParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowH323SubTabPageParams)
}
SetShowH323SubTabPageParams::SetShowH323SubTabPageParams(const SetShowH323SubTabPageParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tabpage_, &from.tabpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&bshow_) -
    reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowH323SubTabPageParams)
}

void SetShowH323SubTabPageParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tabpage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bshow_) -
      reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
}

SetShowH323SubTabPageParams::~SetShowH323SubTabPageParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  SharedDtor();
}

void SetShowH323SubTabPageParams::SharedDtor() {
}

void SetShowH323SubTabPageParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowH323SubTabPageParams& SetShowH323SubTabPageParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowH323SubTabPageParams* SetShowH323SubTabPageParams::New(::google::protobuf::Arena* arena) const {
  SetShowH323SubTabPageParams* n = new SetShowH323SubTabPageParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowH323SubTabPageParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tabpage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bshow_) -
        reinterpret_cast<char*>(&tabpage_)) + sizeof(bshow_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowH323SubTabPageParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tabPage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tabpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tabpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bShow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  return false;
#undef DO_
}

void SetShowH323SubTabPageParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tabPage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tabpage(), output);
  }

  // optional bool bShow = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowH323SubTabPageParams)
}

size_t SetShowH323SubTabPageParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 tabPage = 1;
    if (has_tabpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tabpage());
    }

    // optional bool bShow = 2;
    if (has_bshow()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowH323SubTabPageParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowH323SubTabPageParams*>(&from));
}

void SetShowH323SubTabPageParams::MergeFrom(const SetShowH323SubTabPageParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tabpage_ = from.tabpage_;
    }
    if (cached_has_bits & 0x00000002u) {
      bshow_ = from.bshow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetShowH323SubTabPageParams::CopyFrom(const SetShowH323SubTabPageParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowH323SubTabPageParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowH323SubTabPageParams::IsInitialized() const {
  return true;
}

void SetShowH323SubTabPageParams::Swap(SetShowH323SubTabPageParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowH323SubTabPageParams::InternalSwap(SetShowH323SubTabPageParams* other) {
  using std::swap;
  swap(tabpage_, other->tabpage_);
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowH323SubTabPageParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowH323SubTabPageParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowH323SubTabPageParams

// optional int32 tabPage = 1;
bool SetShowH323SubTabPageParams::has_tabpage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowH323SubTabPageParams::set_has_tabpage() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowH323SubTabPageParams::clear_has_tabpage() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowH323SubTabPageParams::clear_tabpage() {
  tabpage_ = 0;
  clear_has_tabpage();
}
::google::protobuf::int32 SetShowH323SubTabPageParams::tabpage() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowH323SubTabPageParams.tabPage)
  return tabpage_;
}
void SetShowH323SubTabPageParams::set_tabpage(::google::protobuf::int32 value) {
  set_has_tabpage();
  tabpage_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowH323SubTabPageParams.tabPage)
}

// optional bool bShow = 2;
bool SetShowH323SubTabPageParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetShowH323SubTabPageParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000002u;
}
void SetShowH323SubTabPageParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetShowH323SubTabPageParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowH323SubTabPageParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowH323SubTabPageParams.bShow)
  return bshow_;
}
void SetShowH323SubTabPageParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowH323SubTabPageParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideUpgradeWarningMsgForFreeUserWhenScheduleParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideUpgradeWarningMsgForFreeUserWhenScheduleParams::HideUpgradeWarningMsgForFreeUserWhenScheduleParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
}
HideUpgradeWarningMsgForFreeUserWhenScheduleParams::HideUpgradeWarningMsgForFreeUserWhenScheduleParams(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideUpgradeWarningMsgForFreeUserWhenScheduleParams::~HideUpgradeWarningMsgForFreeUserWhenScheduleParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  SharedDtor();
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::SharedDtor() {
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& HideUpgradeWarningMsgForFreeUserWhenScheduleParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideUpgradeWarningMsgForFreeUserWhenScheduleParams* HideUpgradeWarningMsgForFreeUserWhenScheduleParams::New(::google::protobuf::Arena* arena) const {
  HideUpgradeWarningMsgForFreeUserWhenScheduleParams* n = new HideUpgradeWarningMsgForFreeUserWhenScheduleParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  return false;
#undef DO_
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
}

size_t HideUpgradeWarningMsgForFreeUserWhenScheduleParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideUpgradeWarningMsgForFreeUserWhenScheduleParams*>(&from));
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::MergeFrom(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::CopyFrom(const HideUpgradeWarningMsgForFreeUserWhenScheduleParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::IsInitialized() const {
  return true;
}

void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::Swap(HideUpgradeWarningMsgForFreeUserWhenScheduleParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::InternalSwap(HideUpgradeWarningMsgForFreeUserWhenScheduleParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideUpgradeWarningMsgForFreeUserWhenScheduleParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideUpgradeWarningMsgForFreeUserWhenScheduleParams

// optional bool bHide = 1;
bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideUpgradeWarningMsgForFreeUserWhenScheduleParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams.bHide)
  return bhide_;
}
void HideUpgradeWarningMsgForFreeUserWhenScheduleParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideUpgradeWarningMsgForFreeUserWhenScheduleParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideSwitchCameraButtonParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideSwitchCameraButtonParams::HideSwitchCameraButtonParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideSwitchCameraButtonParams)
}
HideSwitchCameraButtonParams::HideSwitchCameraButtonParams(const HideSwitchCameraButtonParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideSwitchCameraButtonParams)
}

void HideSwitchCameraButtonParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideSwitchCameraButtonParams::~HideSwitchCameraButtonParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  SharedDtor();
}

void HideSwitchCameraButtonParams::SharedDtor() {
}

void HideSwitchCameraButtonParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideSwitchCameraButtonParams& HideSwitchCameraButtonParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideSwitchCameraButtonParams* HideSwitchCameraButtonParams::New(::google::protobuf::Arena* arena) const {
  HideSwitchCameraButtonParams* n = new HideSwitchCameraButtonParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideSwitchCameraButtonParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideSwitchCameraButtonParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  return false;
#undef DO_
}

void HideSwitchCameraButtonParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideSwitchCameraButtonParams)
}

size_t HideSwitchCameraButtonParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideSwitchCameraButtonParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideSwitchCameraButtonParams*>(&from));
}

void HideSwitchCameraButtonParams::MergeFrom(const HideSwitchCameraButtonParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideSwitchCameraButtonParams::CopyFrom(const HideSwitchCameraButtonParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideSwitchCameraButtonParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideSwitchCameraButtonParams::IsInitialized() const {
  return true;
}

void HideSwitchCameraButtonParams::Swap(HideSwitchCameraButtonParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideSwitchCameraButtonParams::InternalSwap(HideSwitchCameraButtonParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideSwitchCameraButtonParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideSwitchCameraButtonParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideSwitchCameraButtonParams

// optional bool bHide = 1;
bool HideSwitchCameraButtonParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideSwitchCameraButtonParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideSwitchCameraButtonParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideSwitchCameraButtonParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideSwitchCameraButtonParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideSwitchCameraButtonParams.bHide)
  return bhide_;
}
void HideSwitchCameraButtonParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideSwitchCameraButtonParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideCopyUrlOnInviteWindowParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideCopyUrlOnInviteWindowParams::HideCopyUrlOnInviteWindowParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
}
HideCopyUrlOnInviteWindowParams::HideCopyUrlOnInviteWindowParams(const HideCopyUrlOnInviteWindowParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
}

void HideCopyUrlOnInviteWindowParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideCopyUrlOnInviteWindowParams::~HideCopyUrlOnInviteWindowParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  SharedDtor();
}

void HideCopyUrlOnInviteWindowParams::SharedDtor() {
}

void HideCopyUrlOnInviteWindowParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideCopyUrlOnInviteWindowParams& HideCopyUrlOnInviteWindowParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideCopyUrlOnInviteWindowParams* HideCopyUrlOnInviteWindowParams::New(::google::protobuf::Arena* arena) const {
  HideCopyUrlOnInviteWindowParams* n = new HideCopyUrlOnInviteWindowParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideCopyUrlOnInviteWindowParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideCopyUrlOnInviteWindowParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  return false;
#undef DO_
}

void HideCopyUrlOnInviteWindowParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
}

size_t HideCopyUrlOnInviteWindowParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideCopyUrlOnInviteWindowParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideCopyUrlOnInviteWindowParams*>(&from));
}

void HideCopyUrlOnInviteWindowParams::MergeFrom(const HideCopyUrlOnInviteWindowParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideCopyUrlOnInviteWindowParams::CopyFrom(const HideCopyUrlOnInviteWindowParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideCopyUrlOnInviteWindowParams::IsInitialized() const {
  return true;
}

void HideCopyUrlOnInviteWindowParams::Swap(HideCopyUrlOnInviteWindowParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideCopyUrlOnInviteWindowParams::InternalSwap(HideCopyUrlOnInviteWindowParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideCopyUrlOnInviteWindowParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideCopyUrlOnInviteWindowParams

// optional bool bHide = 1;
bool HideCopyUrlOnInviteWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideCopyUrlOnInviteWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideCopyUrlOnInviteWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideCopyUrlOnInviteWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideCopyUrlOnInviteWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams.bHide)
  return bhide_;
}
void HideCopyUrlOnInviteWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideCopyUrlOnInviteWindowParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideCopyInvitationOnInviteWindowParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideCopyInvitationOnInviteWindowParams::HideCopyInvitationOnInviteWindowParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
}
HideCopyInvitationOnInviteWindowParams::HideCopyInvitationOnInviteWindowParams(const HideCopyInvitationOnInviteWindowParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
}

void HideCopyInvitationOnInviteWindowParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideCopyInvitationOnInviteWindowParams::~HideCopyInvitationOnInviteWindowParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  SharedDtor();
}

void HideCopyInvitationOnInviteWindowParams::SharedDtor() {
}

void HideCopyInvitationOnInviteWindowParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideCopyInvitationOnInviteWindowParams& HideCopyInvitationOnInviteWindowParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideCopyInvitationOnInviteWindowParams* HideCopyInvitationOnInviteWindowParams::New(::google::protobuf::Arena* arena) const {
  HideCopyInvitationOnInviteWindowParams* n = new HideCopyInvitationOnInviteWindowParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideCopyInvitationOnInviteWindowParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideCopyInvitationOnInviteWindowParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  return false;
#undef DO_
}

void HideCopyInvitationOnInviteWindowParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
}

size_t HideCopyInvitationOnInviteWindowParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideCopyInvitationOnInviteWindowParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideCopyInvitationOnInviteWindowParams*>(&from));
}

void HideCopyInvitationOnInviteWindowParams::MergeFrom(const HideCopyInvitationOnInviteWindowParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideCopyInvitationOnInviteWindowParams::CopyFrom(const HideCopyInvitationOnInviteWindowParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideCopyInvitationOnInviteWindowParams::IsInitialized() const {
  return true;
}

void HideCopyInvitationOnInviteWindowParams::Swap(HideCopyInvitationOnInviteWindowParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideCopyInvitationOnInviteWindowParams::InternalSwap(HideCopyInvitationOnInviteWindowParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideCopyInvitationOnInviteWindowParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideCopyInvitationOnInviteWindowParams

// optional bool bHide = 1;
bool HideCopyInvitationOnInviteWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideCopyInvitationOnInviteWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideCopyInvitationOnInviteWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideCopyInvitationOnInviteWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideCopyInvitationOnInviteWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams.bHide)
  return bhide_;
}
void HideCopyInvitationOnInviteWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideCopyInvitationOnInviteWindowParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideKeypadButtonOnMeetingWindowParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideKeypadButtonOnMeetingWindowParams::HideKeypadButtonOnMeetingWindowParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
}
HideKeypadButtonOnMeetingWindowParams::HideKeypadButtonOnMeetingWindowParams(const HideKeypadButtonOnMeetingWindowParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
}

void HideKeypadButtonOnMeetingWindowParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideKeypadButtonOnMeetingWindowParams::~HideKeypadButtonOnMeetingWindowParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  SharedDtor();
}

void HideKeypadButtonOnMeetingWindowParams::SharedDtor() {
}

void HideKeypadButtonOnMeetingWindowParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideKeypadButtonOnMeetingWindowParams& HideKeypadButtonOnMeetingWindowParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideKeypadButtonOnMeetingWindowParams* HideKeypadButtonOnMeetingWindowParams::New(::google::protobuf::Arena* arena) const {
  HideKeypadButtonOnMeetingWindowParams* n = new HideKeypadButtonOnMeetingWindowParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideKeypadButtonOnMeetingWindowParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideKeypadButtonOnMeetingWindowParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  return false;
#undef DO_
}

void HideKeypadButtonOnMeetingWindowParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
}

size_t HideKeypadButtonOnMeetingWindowParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideKeypadButtonOnMeetingWindowParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideKeypadButtonOnMeetingWindowParams*>(&from));
}

void HideKeypadButtonOnMeetingWindowParams::MergeFrom(const HideKeypadButtonOnMeetingWindowParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideKeypadButtonOnMeetingWindowParams::CopyFrom(const HideKeypadButtonOnMeetingWindowParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideKeypadButtonOnMeetingWindowParams::IsInitialized() const {
  return true;
}

void HideKeypadButtonOnMeetingWindowParams::Swap(HideKeypadButtonOnMeetingWindowParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideKeypadButtonOnMeetingWindowParams::InternalSwap(HideKeypadButtonOnMeetingWindowParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideKeypadButtonOnMeetingWindowParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideKeypadButtonOnMeetingWindowParams

// optional bool bHide = 1;
bool HideKeypadButtonOnMeetingWindowParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideKeypadButtonOnMeetingWindowParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideKeypadButtonOnMeetingWindowParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideKeypadButtonOnMeetingWindowParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideKeypadButtonOnMeetingWindowParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams.bHide)
  return bhide_;
}
void HideKeypadButtonOnMeetingWindowParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideKeypadButtonOnMeetingWindowParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideRemoteControlOnMeetingUIParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideRemoteControlOnMeetingUIParams::HideRemoteControlOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
}
HideRemoteControlOnMeetingUIParams::HideRemoteControlOnMeetingUIParams(const HideRemoteControlOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
}

void HideRemoteControlOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideRemoteControlOnMeetingUIParams::~HideRemoteControlOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  SharedDtor();
}

void HideRemoteControlOnMeetingUIParams::SharedDtor() {
}

void HideRemoteControlOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideRemoteControlOnMeetingUIParams& HideRemoteControlOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideRemoteControlOnMeetingUIParams* HideRemoteControlOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  HideRemoteControlOnMeetingUIParams* n = new HideRemoteControlOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideRemoteControlOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideRemoteControlOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  return false;
#undef DO_
}

void HideRemoteControlOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
}

size_t HideRemoteControlOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideRemoteControlOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideRemoteControlOnMeetingUIParams*>(&from));
}

void HideRemoteControlOnMeetingUIParams::MergeFrom(const HideRemoteControlOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideRemoteControlOnMeetingUIParams::CopyFrom(const HideRemoteControlOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideRemoteControlOnMeetingUIParams::IsInitialized() const {
  return true;
}

void HideRemoteControlOnMeetingUIParams::Swap(HideRemoteControlOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideRemoteControlOnMeetingUIParams::InternalSwap(HideRemoteControlOnMeetingUIParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideRemoteControlOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideRemoteControlOnMeetingUIParams

// optional bool bHide = 1;
bool HideRemoteControlOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideRemoteControlOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideRemoteControlOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideRemoteControlOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideRemoteControlOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams.bHide)
  return bhide_;
}
void HideRemoteControlOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideRemoteControlOnMeetingUIParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideQAOnMeetingUIParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideQAOnMeetingUIParams::HideQAOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideQAOnMeetingUIParams)
}
HideQAOnMeetingUIParams::HideQAOnMeetingUIParams(const HideQAOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideQAOnMeetingUIParams)
}

void HideQAOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideQAOnMeetingUIParams::~HideQAOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  SharedDtor();
}

void HideQAOnMeetingUIParams::SharedDtor() {
}

void HideQAOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideQAOnMeetingUIParams& HideQAOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideQAOnMeetingUIParams* HideQAOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  HideQAOnMeetingUIParams* n = new HideQAOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideQAOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideQAOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  return false;
#undef DO_
}

void HideQAOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideQAOnMeetingUIParams)
}

size_t HideQAOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideQAOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideQAOnMeetingUIParams*>(&from));
}

void HideQAOnMeetingUIParams::MergeFrom(const HideQAOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideQAOnMeetingUIParams::CopyFrom(const HideQAOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideQAOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideQAOnMeetingUIParams::IsInitialized() const {
  return true;
}

void HideQAOnMeetingUIParams::Swap(HideQAOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideQAOnMeetingUIParams::InternalSwap(HideQAOnMeetingUIParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideQAOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideQAOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideQAOnMeetingUIParams

// optional bool bHide = 1;
bool HideQAOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideQAOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideQAOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideQAOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideQAOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideQAOnMeetingUIParams.bHide)
  return bhide_;
}
void HideQAOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideQAOnMeetingUIParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HidePollOnMeetingUIParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HidePollOnMeetingUIParams::HidePollOnMeetingUIParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HidePollOnMeetingUIParams)
}
HidePollOnMeetingUIParams::HidePollOnMeetingUIParams(const HidePollOnMeetingUIParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HidePollOnMeetingUIParams)
}

void HidePollOnMeetingUIParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HidePollOnMeetingUIParams::~HidePollOnMeetingUIParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  SharedDtor();
}

void HidePollOnMeetingUIParams::SharedDtor() {
}

void HidePollOnMeetingUIParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HidePollOnMeetingUIParams& HidePollOnMeetingUIParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HidePollOnMeetingUIParams* HidePollOnMeetingUIParams::New(::google::protobuf::Arena* arena) const {
  HidePollOnMeetingUIParams* n = new HidePollOnMeetingUIParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HidePollOnMeetingUIParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HidePollOnMeetingUIParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  return false;
#undef DO_
}

void HidePollOnMeetingUIParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HidePollOnMeetingUIParams)
}

size_t HidePollOnMeetingUIParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HidePollOnMeetingUIParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HidePollOnMeetingUIParams*>(&from));
}

void HidePollOnMeetingUIParams::MergeFrom(const HidePollOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HidePollOnMeetingUIParams::CopyFrom(const HidePollOnMeetingUIParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HidePollOnMeetingUIParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HidePollOnMeetingUIParams::IsInitialized() const {
  return true;
}

void HidePollOnMeetingUIParams::Swap(HidePollOnMeetingUIParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HidePollOnMeetingUIParams::InternalSwap(HidePollOnMeetingUIParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HidePollOnMeetingUIParams::GetTypeName() const {
  return "com.electron.sdk.proto.HidePollOnMeetingUIParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HidePollOnMeetingUIParams

// optional bool bHide = 1;
bool HidePollOnMeetingUIParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HidePollOnMeetingUIParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HidePollOnMeetingUIParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HidePollOnMeetingUIParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HidePollOnMeetingUIParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HidePollOnMeetingUIParams.bHide)
  return bhide_;
}
void HidePollOnMeetingUIParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HidePollOnMeetingUIParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableInputMeetingPasswordDlgParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableInputMeetingPasswordDlgParams::EnableInputMeetingPasswordDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
}
EnableInputMeetingPasswordDlgParams::EnableInputMeetingPasswordDlgParams(const EnableInputMeetingPasswordDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
}

void EnableInputMeetingPasswordDlgParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableInputMeetingPasswordDlgParams::~EnableInputMeetingPasswordDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  SharedDtor();
}

void EnableInputMeetingPasswordDlgParams::SharedDtor() {
}

void EnableInputMeetingPasswordDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableInputMeetingPasswordDlgParams& EnableInputMeetingPasswordDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableInputMeetingPasswordDlgParams* EnableInputMeetingPasswordDlgParams::New(::google::protobuf::Arena* arena) const {
  EnableInputMeetingPasswordDlgParams* n = new EnableInputMeetingPasswordDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableInputMeetingPasswordDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableInputMeetingPasswordDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  return false;
#undef DO_
}

void EnableInputMeetingPasswordDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
}

size_t EnableInputMeetingPasswordDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableInputMeetingPasswordDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableInputMeetingPasswordDlgParams*>(&from));
}

void EnableInputMeetingPasswordDlgParams::MergeFrom(const EnableInputMeetingPasswordDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableInputMeetingPasswordDlgParams::CopyFrom(const EnableInputMeetingPasswordDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableInputMeetingPasswordDlgParams::IsInitialized() const {
  return true;
}

void EnableInputMeetingPasswordDlgParams::Swap(EnableInputMeetingPasswordDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableInputMeetingPasswordDlgParams::InternalSwap(EnableInputMeetingPasswordDlgParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableInputMeetingPasswordDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableInputMeetingPasswordDlgParams

// optional bool bEnable = 1;
bool EnableInputMeetingPasswordDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableInputMeetingPasswordDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableInputMeetingPasswordDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableInputMeetingPasswordDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableInputMeetingPasswordDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams.bEnable)
  return benable_;
}
void EnableInputMeetingPasswordDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInputMeetingPasswordDlgParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableInputMeetingScreenNameDlgParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableInputMeetingScreenNameDlgParams::EnableInputMeetingScreenNameDlgParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
}
EnableInputMeetingScreenNameDlgParams::EnableInputMeetingScreenNameDlgParams(const EnableInputMeetingScreenNameDlgParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
}

void EnableInputMeetingScreenNameDlgParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableInputMeetingScreenNameDlgParams::~EnableInputMeetingScreenNameDlgParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  SharedDtor();
}

void EnableInputMeetingScreenNameDlgParams::SharedDtor() {
}

void EnableInputMeetingScreenNameDlgParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableInputMeetingScreenNameDlgParams& EnableInputMeetingScreenNameDlgParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableInputMeetingScreenNameDlgParams* EnableInputMeetingScreenNameDlgParams::New(::google::protobuf::Arena* arena) const {
  EnableInputMeetingScreenNameDlgParams* n = new EnableInputMeetingScreenNameDlgParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableInputMeetingScreenNameDlgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableInputMeetingScreenNameDlgParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  return false;
#undef DO_
}

void EnableInputMeetingScreenNameDlgParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
}

size_t EnableInputMeetingScreenNameDlgParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableInputMeetingScreenNameDlgParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableInputMeetingScreenNameDlgParams*>(&from));
}

void EnableInputMeetingScreenNameDlgParams::MergeFrom(const EnableInputMeetingScreenNameDlgParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableInputMeetingScreenNameDlgParams::CopyFrom(const EnableInputMeetingScreenNameDlgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableInputMeetingScreenNameDlgParams::IsInitialized() const {
  return true;
}

void EnableInputMeetingScreenNameDlgParams::Swap(EnableInputMeetingScreenNameDlgParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableInputMeetingScreenNameDlgParams::InternalSwap(EnableInputMeetingScreenNameDlgParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableInputMeetingScreenNameDlgParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableInputMeetingScreenNameDlgParams

// optional bool bEnable = 1;
bool EnableInputMeetingScreenNameDlgParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableInputMeetingScreenNameDlgParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableInputMeetingScreenNameDlgParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableInputMeetingScreenNameDlgParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableInputMeetingScreenNameDlgParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams.bEnable)
  return benable_;
}
void EnableInputMeetingScreenNameDlgParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableInputMeetingScreenNameDlgParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectWebinarNeedRegisterParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectWebinarNeedRegisterParams::RedirectWebinarNeedRegisterParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
}
RedirectWebinarNeedRegisterParams::RedirectWebinarNeedRegisterParams(const RedirectWebinarNeedRegisterParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
}

void RedirectWebinarNeedRegisterParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectWebinarNeedRegisterParams::~RedirectWebinarNeedRegisterParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  SharedDtor();
}

void RedirectWebinarNeedRegisterParams::SharedDtor() {
}

void RedirectWebinarNeedRegisterParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectWebinarNeedRegisterParams& RedirectWebinarNeedRegisterParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectWebinarNeedRegisterParams* RedirectWebinarNeedRegisterParams::New(::google::protobuf::Arena* arena) const {
  RedirectWebinarNeedRegisterParams* n = new RedirectWebinarNeedRegisterParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectWebinarNeedRegisterParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectWebinarNeedRegisterParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  return false;
#undef DO_
}

void RedirectWebinarNeedRegisterParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
}

size_t RedirectWebinarNeedRegisterParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectWebinarNeedRegisterParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectWebinarNeedRegisterParams*>(&from));
}

void RedirectWebinarNeedRegisterParams::MergeFrom(const RedirectWebinarNeedRegisterParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectWebinarNeedRegisterParams::CopyFrom(const RedirectWebinarNeedRegisterParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectWebinarNeedRegisterParams::IsInitialized() const {
  return true;
}

void RedirectWebinarNeedRegisterParams::Swap(RedirectWebinarNeedRegisterParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectWebinarNeedRegisterParams::InternalSwap(RedirectWebinarNeedRegisterParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectWebinarNeedRegisterParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectWebinarNeedRegisterParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectWebinarNeedRegisterParams

// optional bool bRedirect = 1;
bool RedirectWebinarNeedRegisterParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectWebinarNeedRegisterParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectWebinarNeedRegisterParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectWebinarNeedRegisterParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectWebinarNeedRegisterParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams.bRedirect)
  return bredirect_;
}
void RedirectWebinarNeedRegisterParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectWebinarNeedRegisterParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectEndOtherMeetingParams::kBRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectEndOtherMeetingParams::RedirectEndOtherMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
}
RedirectEndOtherMeetingParams::RedirectEndOtherMeetingParams(const RedirectEndOtherMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bredirect_ = from.bredirect_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
}

void RedirectEndOtherMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  bredirect_ = false;
}

RedirectEndOtherMeetingParams::~RedirectEndOtherMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  SharedDtor();
}

void RedirectEndOtherMeetingParams::SharedDtor() {
}

void RedirectEndOtherMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RedirectEndOtherMeetingParams& RedirectEndOtherMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectEndOtherMeetingParams* RedirectEndOtherMeetingParams::New(::google::protobuf::Arena* arena) const {
  RedirectEndOtherMeetingParams* n = new RedirectEndOtherMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectEndOtherMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bredirect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectEndOtherMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bRedirect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  return false;
#undef DO_
}

void RedirectEndOtherMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bRedirect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bredirect(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
}

size_t RedirectEndOtherMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bRedirect = 1;
  if (has_bredirect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectEndOtherMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RedirectEndOtherMeetingParams*>(&from));
}

void RedirectEndOtherMeetingParams::MergeFrom(const RedirectEndOtherMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bredirect()) {
    set_bredirect(from.bredirect());
  }
}

void RedirectEndOtherMeetingParams::CopyFrom(const RedirectEndOtherMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RedirectEndOtherMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectEndOtherMeetingParams::IsInitialized() const {
  return true;
}

void RedirectEndOtherMeetingParams::Swap(RedirectEndOtherMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectEndOtherMeetingParams::InternalSwap(RedirectEndOtherMeetingParams* other) {
  using std::swap;
  swap(bredirect_, other->bredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RedirectEndOtherMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.RedirectEndOtherMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectEndOtherMeetingParams

// optional bool bRedirect = 1;
bool RedirectEndOtherMeetingParams::has_bredirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectEndOtherMeetingParams::set_has_bredirect() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectEndOtherMeetingParams::clear_has_bredirect() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectEndOtherMeetingParams::clear_bredirect() {
  bredirect_ = false;
  clear_has_bredirect();
}
bool RedirectEndOtherMeetingParams::bredirect() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RedirectEndOtherMeetingParams.bRedirect)
  return bredirect_;
}
void RedirectEndOtherMeetingParams::set_bredirect(bool value) {
  set_has_bredirect();
  bredirect_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RedirectEndOtherMeetingParams.bRedirect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableForceAutoStartMyVideoWhenJoinMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableForceAutoStartMyVideoWhenJoinMeetingParams::EnableForceAutoStartMyVideoWhenJoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
}
EnableForceAutoStartMyVideoWhenJoinMeetingParams::EnableForceAutoStartMyVideoWhenJoinMeetingParams(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableForceAutoStartMyVideoWhenJoinMeetingParams::~EnableForceAutoStartMyVideoWhenJoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  SharedDtor();
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::SharedDtor() {
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableForceAutoStartMyVideoWhenJoinMeetingParams& EnableForceAutoStartMyVideoWhenJoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableForceAutoStartMyVideoWhenJoinMeetingParams* EnableForceAutoStartMyVideoWhenJoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableForceAutoStartMyVideoWhenJoinMeetingParams* n = new EnableForceAutoStartMyVideoWhenJoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  return false;
#undef DO_
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
}

size_t EnableForceAutoStartMyVideoWhenJoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableForceAutoStartMyVideoWhenJoinMeetingParams*>(&from));
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::MergeFrom(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::CopyFrom(const EnableForceAutoStartMyVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::IsInitialized() const {
  return true;
}

void EnableForceAutoStartMyVideoWhenJoinMeetingParams::Swap(EnableForceAutoStartMyVideoWhenJoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableForceAutoStartMyVideoWhenJoinMeetingParams::InternalSwap(EnableForceAutoStartMyVideoWhenJoinMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableForceAutoStartMyVideoWhenJoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableForceAutoStartMyVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableForceAutoStartMyVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableForceAutoStartMyVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableForceAutoStartMyVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableForceAutoStartMyVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
void EnableForceAutoStartMyVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableForceAutoStartMyVideoWhenJoinMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableForceAutoStopMyVideoWhenJoinMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableForceAutoStopMyVideoWhenJoinMeetingParams::EnableForceAutoStopMyVideoWhenJoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
}
EnableForceAutoStopMyVideoWhenJoinMeetingParams::EnableForceAutoStopMyVideoWhenJoinMeetingParams(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableForceAutoStopMyVideoWhenJoinMeetingParams::~EnableForceAutoStopMyVideoWhenJoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  SharedDtor();
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::SharedDtor() {
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableForceAutoStopMyVideoWhenJoinMeetingParams& EnableForceAutoStopMyVideoWhenJoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableForceAutoStopMyVideoWhenJoinMeetingParams* EnableForceAutoStopMyVideoWhenJoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableForceAutoStopMyVideoWhenJoinMeetingParams* n = new EnableForceAutoStopMyVideoWhenJoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  return false;
#undef DO_
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
}

size_t EnableForceAutoStopMyVideoWhenJoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableForceAutoStopMyVideoWhenJoinMeetingParams*>(&from));
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::MergeFrom(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::CopyFrom(const EnableForceAutoStopMyVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::IsInitialized() const {
  return true;
}

void EnableForceAutoStopMyVideoWhenJoinMeetingParams::Swap(EnableForceAutoStopMyVideoWhenJoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableForceAutoStopMyVideoWhenJoinMeetingParams::InternalSwap(EnableForceAutoStopMyVideoWhenJoinMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableForceAutoStopMyVideoWhenJoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableForceAutoStopMyVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableForceAutoStopMyVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableForceAutoStopMyVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableForceAutoStopMyVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableForceAutoStopMyVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
void EnableForceAutoStopMyVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableForceAutoStopMyVideoWhenJoinMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
}
DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::~DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  SharedDtor();
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::SharedDtor() {
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* n = new DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  return false;
#undef DO_
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
}

size_t DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams*>(&from));
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::MergeFrom(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::CopyFrom(const DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::IsInitialized() const {
  return true;
}

void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::Swap(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::InternalSwap(DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams

// optional bool bDisable = 1;
bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams.bDisable)
  return bdisable_;
}
void DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAutoShowSelectJoinAudioDlgWhenJoinMeetingParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableShowJoinMeetingWndParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableShowJoinMeetingWndParams::DisableShowJoinMeetingWndParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
}
DisableShowJoinMeetingWndParams::DisableShowJoinMeetingWndParams(const DisableShowJoinMeetingWndParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
}

void DisableShowJoinMeetingWndParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableShowJoinMeetingWndParams::~DisableShowJoinMeetingWndParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  SharedDtor();
}

void DisableShowJoinMeetingWndParams::SharedDtor() {
}

void DisableShowJoinMeetingWndParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableShowJoinMeetingWndParams& DisableShowJoinMeetingWndParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableShowJoinMeetingWndParams* DisableShowJoinMeetingWndParams::New(::google::protobuf::Arena* arena) const {
  DisableShowJoinMeetingWndParams* n = new DisableShowJoinMeetingWndParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableShowJoinMeetingWndParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableShowJoinMeetingWndParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  return false;
#undef DO_
}

void DisableShowJoinMeetingWndParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
}

size_t DisableShowJoinMeetingWndParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableShowJoinMeetingWndParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableShowJoinMeetingWndParams*>(&from));
}

void DisableShowJoinMeetingWndParams::MergeFrom(const DisableShowJoinMeetingWndParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableShowJoinMeetingWndParams::CopyFrom(const DisableShowJoinMeetingWndParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableShowJoinMeetingWndParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableShowJoinMeetingWndParams::IsInitialized() const {
  return true;
}

void DisableShowJoinMeetingWndParams::Swap(DisableShowJoinMeetingWndParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableShowJoinMeetingWndParams::InternalSwap(DisableShowJoinMeetingWndParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableShowJoinMeetingWndParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableShowJoinMeetingWndParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableShowJoinMeetingWndParams

// optional bool bDisable = 1;
bool DisableShowJoinMeetingWndParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableShowJoinMeetingWndParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableShowJoinMeetingWndParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableShowJoinMeetingWndParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableShowJoinMeetingWndParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableShowJoinMeetingWndParams.bDisable)
  return bdisable_;
}
void DisableShowJoinMeetingWndParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableShowJoinMeetingWndParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableConfidentialWatermarkParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableConfidentialWatermarkParams::DisableConfidentialWatermarkParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
}
DisableConfidentialWatermarkParams::DisableConfidentialWatermarkParams(const DisableConfidentialWatermarkParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
}

void DisableConfidentialWatermarkParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableConfidentialWatermarkParams::~DisableConfidentialWatermarkParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  SharedDtor();
}

void DisableConfidentialWatermarkParams::SharedDtor() {
}

void DisableConfidentialWatermarkParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableConfidentialWatermarkParams& DisableConfidentialWatermarkParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableConfidentialWatermarkParams* DisableConfidentialWatermarkParams::New(::google::protobuf::Arena* arena) const {
  DisableConfidentialWatermarkParams* n = new DisableConfidentialWatermarkParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableConfidentialWatermarkParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableConfidentialWatermarkParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  return false;
#undef DO_
}

void DisableConfidentialWatermarkParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
}

size_t DisableConfidentialWatermarkParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableConfidentialWatermarkParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableConfidentialWatermarkParams*>(&from));
}

void DisableConfidentialWatermarkParams::MergeFrom(const DisableConfidentialWatermarkParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableConfidentialWatermarkParams::CopyFrom(const DisableConfidentialWatermarkParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableConfidentialWatermarkParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableConfidentialWatermarkParams::IsInitialized() const {
  return true;
}

void DisableConfidentialWatermarkParams::Swap(DisableConfidentialWatermarkParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableConfidentialWatermarkParams::InternalSwap(DisableConfidentialWatermarkParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableConfidentialWatermarkParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableConfidentialWatermarkParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableConfidentialWatermarkParams

// optional bool bDisable = 1;
bool DisableConfidentialWatermarkParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableConfidentialWatermarkParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableConfidentialWatermarkParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableConfidentialWatermarkParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableConfidentialWatermarkParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableConfidentialWatermarkParams.bDisable)
  return bdisable_;
}
void DisableConfidentialWatermarkParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableConfidentialWatermarkParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableRemoteCtrlCopyPasteFeatureParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableRemoteCtrlCopyPasteFeatureParams::DisableRemoteCtrlCopyPasteFeatureParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
}
DisableRemoteCtrlCopyPasteFeatureParams::DisableRemoteCtrlCopyPasteFeatureParams(const DisableRemoteCtrlCopyPasteFeatureParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
}

void DisableRemoteCtrlCopyPasteFeatureParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableRemoteCtrlCopyPasteFeatureParams::~DisableRemoteCtrlCopyPasteFeatureParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  SharedDtor();
}

void DisableRemoteCtrlCopyPasteFeatureParams::SharedDtor() {
}

void DisableRemoteCtrlCopyPasteFeatureParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableRemoteCtrlCopyPasteFeatureParams& DisableRemoteCtrlCopyPasteFeatureParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableRemoteCtrlCopyPasteFeatureParams* DisableRemoteCtrlCopyPasteFeatureParams::New(::google::protobuf::Arena* arena) const {
  DisableRemoteCtrlCopyPasteFeatureParams* n = new DisableRemoteCtrlCopyPasteFeatureParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableRemoteCtrlCopyPasteFeatureParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableRemoteCtrlCopyPasteFeatureParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  return false;
#undef DO_
}

void DisableRemoteCtrlCopyPasteFeatureParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
}

size_t DisableRemoteCtrlCopyPasteFeatureParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableRemoteCtrlCopyPasteFeatureParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableRemoteCtrlCopyPasteFeatureParams*>(&from));
}

void DisableRemoteCtrlCopyPasteFeatureParams::MergeFrom(const DisableRemoteCtrlCopyPasteFeatureParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableRemoteCtrlCopyPasteFeatureParams::CopyFrom(const DisableRemoteCtrlCopyPasteFeatureParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableRemoteCtrlCopyPasteFeatureParams::IsInitialized() const {
  return true;
}

void DisableRemoteCtrlCopyPasteFeatureParams::Swap(DisableRemoteCtrlCopyPasteFeatureParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableRemoteCtrlCopyPasteFeatureParams::InternalSwap(DisableRemoteCtrlCopyPasteFeatureParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableRemoteCtrlCopyPasteFeatureParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableRemoteCtrlCopyPasteFeatureParams

// optional bool bDisable = 1;
bool DisableRemoteCtrlCopyPasteFeatureParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableRemoteCtrlCopyPasteFeatureParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableRemoteCtrlCopyPasteFeatureParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableRemoteCtrlCopyPasteFeatureParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableRemoteCtrlCopyPasteFeatureParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams.bDisable)
  return bdisable_;
}
void DisableRemoteCtrlCopyPasteFeatureParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableRemoteCtrlCopyPasteFeatureParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableToolbarInviteButtonClickOriginActionParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableToolbarInviteButtonClickOriginActionParams::DisableToolbarInviteButtonClickOriginActionParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
}
DisableToolbarInviteButtonClickOriginActionParams::DisableToolbarInviteButtonClickOriginActionParams(const DisableToolbarInviteButtonClickOriginActionParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
}

void DisableToolbarInviteButtonClickOriginActionParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableToolbarInviteButtonClickOriginActionParams::~DisableToolbarInviteButtonClickOriginActionParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  SharedDtor();
}

void DisableToolbarInviteButtonClickOriginActionParams::SharedDtor() {
}

void DisableToolbarInviteButtonClickOriginActionParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableToolbarInviteButtonClickOriginActionParams& DisableToolbarInviteButtonClickOriginActionParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableToolbarInviteButtonClickOriginActionParams* DisableToolbarInviteButtonClickOriginActionParams::New(::google::protobuf::Arena* arena) const {
  DisableToolbarInviteButtonClickOriginActionParams* n = new DisableToolbarInviteButtonClickOriginActionParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableToolbarInviteButtonClickOriginActionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableToolbarInviteButtonClickOriginActionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  return false;
#undef DO_
}

void DisableToolbarInviteButtonClickOriginActionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
}

size_t DisableToolbarInviteButtonClickOriginActionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableToolbarInviteButtonClickOriginActionParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableToolbarInviteButtonClickOriginActionParams*>(&from));
}

void DisableToolbarInviteButtonClickOriginActionParams::MergeFrom(const DisableToolbarInviteButtonClickOriginActionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableToolbarInviteButtonClickOriginActionParams::CopyFrom(const DisableToolbarInviteButtonClickOriginActionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableToolbarInviteButtonClickOriginActionParams::IsInitialized() const {
  return true;
}

void DisableToolbarInviteButtonClickOriginActionParams::Swap(DisableToolbarInviteButtonClickOriginActionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableToolbarInviteButtonClickOriginActionParams::InternalSwap(DisableToolbarInviteButtonClickOriginActionParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableToolbarInviteButtonClickOriginActionParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableToolbarInviteButtonClickOriginActionParams

// optional bool bDisable = 1;
bool DisableToolbarInviteButtonClickOriginActionParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableToolbarInviteButtonClickOriginActionParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableToolbarInviteButtonClickOriginActionParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableToolbarInviteButtonClickOriginActionParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableToolbarInviteButtonClickOriginActionParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams.bDisable)
  return bdisable_;
}
void DisableToolbarInviteButtonClickOriginActionParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableToolbarInviteButtonClickOriginActionParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShowVideoOptimizeChkboxParams::kBShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShowVideoOptimizeChkboxParams::SetShowVideoOptimizeChkboxParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
}
SetShowVideoOptimizeChkboxParams::SetShowVideoOptimizeChkboxParams(const SetShowVideoOptimizeChkboxParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bshow_ = from.bshow_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
}

void SetShowVideoOptimizeChkboxParams::SharedCtor() {
  _cached_size_ = 0;
  bshow_ = false;
}

SetShowVideoOptimizeChkboxParams::~SetShowVideoOptimizeChkboxParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  SharedDtor();
}

void SetShowVideoOptimizeChkboxParams::SharedDtor() {
}

void SetShowVideoOptimizeChkboxParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetShowVideoOptimizeChkboxParams& SetShowVideoOptimizeChkboxParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetShowVideoOptimizeChkboxParams* SetShowVideoOptimizeChkboxParams::New(::google::protobuf::Arena* arena) const {
  SetShowVideoOptimizeChkboxParams* n = new SetShowVideoOptimizeChkboxParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShowVideoOptimizeChkboxParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bshow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetShowVideoOptimizeChkboxParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  return false;
#undef DO_
}

void SetShowVideoOptimizeChkboxParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bShow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bshow(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
}

size_t SetShowVideoOptimizeChkboxParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bShow = 1;
  if (has_bshow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShowVideoOptimizeChkboxParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetShowVideoOptimizeChkboxParams*>(&from));
}

void SetShowVideoOptimizeChkboxParams::MergeFrom(const SetShowVideoOptimizeChkboxParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bshow()) {
    set_bshow(from.bshow());
  }
}

void SetShowVideoOptimizeChkboxParams::CopyFrom(const SetShowVideoOptimizeChkboxParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowVideoOptimizeChkboxParams::IsInitialized() const {
  return true;
}

void SetShowVideoOptimizeChkboxParams::Swap(SetShowVideoOptimizeChkboxParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShowVideoOptimizeChkboxParams::InternalSwap(SetShowVideoOptimizeChkboxParams* other) {
  using std::swap;
  swap(bshow_, other->bshow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetShowVideoOptimizeChkboxParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetShowVideoOptimizeChkboxParams

// optional bool bShow = 1;
bool SetShowVideoOptimizeChkboxParams::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetShowVideoOptimizeChkboxParams::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
void SetShowVideoOptimizeChkboxParams::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetShowVideoOptimizeChkboxParams::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
bool SetShowVideoOptimizeChkboxParams::bshow() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams.bShow)
  return bshow_;
}
void SetShowVideoOptimizeChkboxParams::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetShowVideoOptimizeChkboxParams.bShow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputMeetingPasswordAndScreenNameParams::kPswFieldNumber;
const int InputMeetingPasswordAndScreenNameParams::kScreenNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputMeetingPasswordAndScreenNameParams::InputMeetingPasswordAndScreenNameParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
}
InputMeetingPasswordAndScreenNameParams::InputMeetingPasswordAndScreenNameParams(const InputMeetingPasswordAndScreenNameParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psw()) {
    psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
  }
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenname()) {
    screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
}

void InputMeetingPasswordAndScreenNameParams::SharedCtor() {
  _cached_size_ = 0;
  psw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputMeetingPasswordAndScreenNameParams::~InputMeetingPasswordAndScreenNameParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  SharedDtor();
}

void InputMeetingPasswordAndScreenNameParams::SharedDtor() {
  psw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputMeetingPasswordAndScreenNameParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InputMeetingPasswordAndScreenNameParams& InputMeetingPasswordAndScreenNameParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputMeetingPasswordAndScreenNameParams* InputMeetingPasswordAndScreenNameParams::New(::google::protobuf::Arena* arena) const {
  InputMeetingPasswordAndScreenNameParams* n = new InputMeetingPasswordAndScreenNameParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputMeetingPasswordAndScreenNameParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!psw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*psw_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!screenname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*screenname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputMeetingPasswordAndScreenNameParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string psw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string screenName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  return false;
#undef DO_
}

void InputMeetingPasswordAndScreenNameParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string psw = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->psw(), output);
  }

  // optional string screenName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->screenname(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
}

size_t InputMeetingPasswordAndScreenNameParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string psw = 1;
    if (has_psw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psw());
    }

    // optional string screenName = 2;
    if (has_screenname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputMeetingPasswordAndScreenNameParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InputMeetingPasswordAndScreenNameParams*>(&from));
}

void InputMeetingPasswordAndScreenNameParams::MergeFrom(const InputMeetingPasswordAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_psw();
      psw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psw_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_screenname();
      screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
    }
  }
}

void InputMeetingPasswordAndScreenNameParams::CopyFrom(const InputMeetingPasswordAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMeetingPasswordAndScreenNameParams::IsInitialized() const {
  return true;
}

void InputMeetingPasswordAndScreenNameParams::Swap(InputMeetingPasswordAndScreenNameParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputMeetingPasswordAndScreenNameParams::InternalSwap(InputMeetingPasswordAndScreenNameParams* other) {
  using std::swap;
  psw_.Swap(&other->psw_);
  screenname_.Swap(&other->screenname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string InputMeetingPasswordAndScreenNameParams::GetTypeName() const {
  return "com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputMeetingPasswordAndScreenNameParams

// optional string psw = 1;
bool InputMeetingPasswordAndScreenNameParams::has_psw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputMeetingPasswordAndScreenNameParams::set_has_psw() {
  _has_bits_[0] |= 0x00000001u;
}
void InputMeetingPasswordAndScreenNameParams::clear_has_psw() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputMeetingPasswordAndScreenNameParams::clear_psw() {
  psw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psw();
}
const ::std::string& InputMeetingPasswordAndScreenNameParams::psw() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  return psw_.GetNoArena();
}
void InputMeetingPasswordAndScreenNameParams::set_psw(const ::std::string& value) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
#if LANG_CXX11
void InputMeetingPasswordAndScreenNameParams::set_psw(::std::string&& value) {
  set_has_psw();
  psw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
#endif
void InputMeetingPasswordAndScreenNameParams::set_psw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
void InputMeetingPasswordAndScreenNameParams::set_psw(const char* value, size_t size) {
  set_has_psw();
  psw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}
::std::string* InputMeetingPasswordAndScreenNameParams::mutable_psw() {
  set_has_psw();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  return psw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputMeetingPasswordAndScreenNameParams::release_psw() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
  clear_has_psw();
  return psw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputMeetingPasswordAndScreenNameParams::set_allocated_psw(::std::string* psw) {
  if (psw != NULL) {
    set_has_psw();
  } else {
    clear_has_psw();
  }
  psw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psw);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.psw)
}

// optional string screenName = 2;
bool InputMeetingPasswordAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputMeetingPasswordAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
void InputMeetingPasswordAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputMeetingPasswordAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
const ::std::string& InputMeetingPasswordAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
void InputMeetingPasswordAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
#if LANG_CXX11
void InputMeetingPasswordAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
#endif
void InputMeetingPasswordAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
void InputMeetingPasswordAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}
::std::string* InputMeetingPasswordAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputMeetingPasswordAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputMeetingPasswordAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingPasswordAndScreenNameParams.screenName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputMeetingIDAndScreenNameParams::kMeetingIDFieldNumber;
const int InputMeetingIDAndScreenNameParams::kScreenNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputMeetingIDAndScreenNameParams::InputMeetingIDAndScreenNameParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
}
InputMeetingIDAndScreenNameParams::InputMeetingIDAndScreenNameParams(const InputMeetingIDAndScreenNameParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meetingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_meetingid()) {
    meetingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meetingid_);
  }
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenname()) {
    screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
}

void InputMeetingIDAndScreenNameParams::SharedCtor() {
  _cached_size_ = 0;
  meetingid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputMeetingIDAndScreenNameParams::~InputMeetingIDAndScreenNameParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  SharedDtor();
}

void InputMeetingIDAndScreenNameParams::SharedDtor() {
  meetingid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputMeetingIDAndScreenNameParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InputMeetingIDAndScreenNameParams& InputMeetingIDAndScreenNameParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputMeetingIDAndScreenNameParams* InputMeetingIDAndScreenNameParams::New(::google::protobuf::Arena* arena) const {
  InputMeetingIDAndScreenNameParams* n = new InputMeetingIDAndScreenNameParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputMeetingIDAndScreenNameParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!meetingid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*meetingid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!screenname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*screenname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputMeetingIDAndScreenNameParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string meetingID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meetingid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string screenName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  return false;
#undef DO_
}

void InputMeetingIDAndScreenNameParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string meetingID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->meetingid(), output);
  }

  // optional string screenName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->screenname(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
}

size_t InputMeetingIDAndScreenNameParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string meetingID = 1;
    if (has_meetingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->meetingid());
    }

    // optional string screenName = 2;
    if (has_screenname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputMeetingIDAndScreenNameParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InputMeetingIDAndScreenNameParams*>(&from));
}

void InputMeetingIDAndScreenNameParams::MergeFrom(const InputMeetingIDAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_meetingid();
      meetingid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meetingid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_screenname();
      screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
    }
  }
}

void InputMeetingIDAndScreenNameParams::CopyFrom(const InputMeetingIDAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMeetingIDAndScreenNameParams::IsInitialized() const {
  return true;
}

void InputMeetingIDAndScreenNameParams::Swap(InputMeetingIDAndScreenNameParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputMeetingIDAndScreenNameParams::InternalSwap(InputMeetingIDAndScreenNameParams* other) {
  using std::swap;
  meetingid_.Swap(&other->meetingid_);
  screenname_.Swap(&other->screenname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string InputMeetingIDAndScreenNameParams::GetTypeName() const {
  return "com.electron.sdk.proto.InputMeetingIDAndScreenNameParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputMeetingIDAndScreenNameParams

// optional string meetingID = 1;
bool InputMeetingIDAndScreenNameParams::has_meetingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputMeetingIDAndScreenNameParams::set_has_meetingid() {
  _has_bits_[0] |= 0x00000001u;
}
void InputMeetingIDAndScreenNameParams::clear_has_meetingid() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputMeetingIDAndScreenNameParams::clear_meetingid() {
  meetingid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_meetingid();
}
const ::std::string& InputMeetingIDAndScreenNameParams::meetingid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  return meetingid_.GetNoArena();
}
void InputMeetingIDAndScreenNameParams::set_meetingid(const ::std::string& value) {
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
#if LANG_CXX11
void InputMeetingIDAndScreenNameParams::set_meetingid(::std::string&& value) {
  set_has_meetingid();
  meetingid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
#endif
void InputMeetingIDAndScreenNameParams::set_meetingid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
void InputMeetingIDAndScreenNameParams::set_meetingid(const char* value, size_t size) {
  set_has_meetingid();
  meetingid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}
::std::string* InputMeetingIDAndScreenNameParams::mutable_meetingid() {
  set_has_meetingid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  return meetingid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputMeetingIDAndScreenNameParams::release_meetingid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
  clear_has_meetingid();
  return meetingid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputMeetingIDAndScreenNameParams::set_allocated_meetingid(::std::string* meetingid) {
  if (meetingid != NULL) {
    set_has_meetingid();
  } else {
    clear_has_meetingid();
  }
  meetingid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meetingid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.meetingID)
}

// optional string screenName = 2;
bool InputMeetingIDAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputMeetingIDAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
void InputMeetingIDAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputMeetingIDAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
const ::std::string& InputMeetingIDAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
void InputMeetingIDAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
#if LANG_CXX11
void InputMeetingIDAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
#endif
void InputMeetingIDAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
void InputMeetingIDAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}
::std::string* InputMeetingIDAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputMeetingIDAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputMeetingIDAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingIDAndScreenNameParams.screenName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputMeetingScreenNameParams::kScreenNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputMeetingScreenNameParams::InputMeetingScreenNameParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.InputMeetingScreenNameParams)
}
InputMeetingScreenNameParams::InputMeetingScreenNameParams(const InputMeetingScreenNameParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenname()) {
    screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.InputMeetingScreenNameParams)
}

void InputMeetingScreenNameParams::SharedCtor() {
  _cached_size_ = 0;
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputMeetingScreenNameParams::~InputMeetingScreenNameParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.InputMeetingScreenNameParams)
  SharedDtor();
}

void InputMeetingScreenNameParams::SharedDtor() {
  screenname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputMeetingScreenNameParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InputMeetingScreenNameParams& InputMeetingScreenNameParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputMeetingScreenNameParams* InputMeetingScreenNameParams::New(::google::protobuf::Arena* arena) const {
  InputMeetingScreenNameParams* n = new InputMeetingScreenNameParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputMeetingScreenNameParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_screenname()) {
    GOOGLE_DCHECK(!screenname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*screenname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputMeetingScreenNameParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string screenName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.InputMeetingScreenNameParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.InputMeetingScreenNameParams)
  return false;
#undef DO_
}

void InputMeetingScreenNameParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string screenName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->screenname(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.InputMeetingScreenNameParams)
}

size_t InputMeetingScreenNameParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string screenName = 1;
  if (has_screenname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->screenname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputMeetingScreenNameParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InputMeetingScreenNameParams*>(&from));
}

void InputMeetingScreenNameParams::MergeFrom(const InputMeetingScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_screenname()) {
    set_has_screenname();
    screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
  }
}

void InputMeetingScreenNameParams::CopyFrom(const InputMeetingScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.InputMeetingScreenNameParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMeetingScreenNameParams::IsInitialized() const {
  return true;
}

void InputMeetingScreenNameParams::Swap(InputMeetingScreenNameParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputMeetingScreenNameParams::InternalSwap(InputMeetingScreenNameParams* other) {
  using std::swap;
  screenname_.Swap(&other->screenname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string InputMeetingScreenNameParams::GetTypeName() const {
  return "com.electron.sdk.proto.InputMeetingScreenNameParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputMeetingScreenNameParams

// optional string screenName = 1;
bool InputMeetingScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputMeetingScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000001u;
}
void InputMeetingScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputMeetingScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
const ::std::string& InputMeetingScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
void InputMeetingScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
#if LANG_CXX11
void InputMeetingScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
#endif
void InputMeetingScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
void InputMeetingScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}
::std::string* InputMeetingScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputMeetingScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputMeetingScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputMeetingScreenNameParams.screenName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputWebinarRegisterEmailAndScreenNameParams::kEmailFieldNumber;
const int InputWebinarRegisterEmailAndScreenNameParams::kScreenNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputWebinarRegisterEmailAndScreenNameParams::InputWebinarRegisterEmailAndScreenNameParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
}
InputWebinarRegisterEmailAndScreenNameParams::InputWebinarRegisterEmailAndScreenNameParams(const InputWebinarRegisterEmailAndScreenNameParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenname()) {
    screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
}

void InputWebinarRegisterEmailAndScreenNameParams::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputWebinarRegisterEmailAndScreenNameParams::~InputWebinarRegisterEmailAndScreenNameParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  SharedDtor();
}

void InputWebinarRegisterEmailAndScreenNameParams::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputWebinarRegisterEmailAndScreenNameParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InputWebinarRegisterEmailAndScreenNameParams& InputWebinarRegisterEmailAndScreenNameParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputWebinarRegisterEmailAndScreenNameParams* InputWebinarRegisterEmailAndScreenNameParams::New(::google::protobuf::Arena* arena) const {
  InputWebinarRegisterEmailAndScreenNameParams* n = new InputWebinarRegisterEmailAndScreenNameParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputWebinarRegisterEmailAndScreenNameParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!screenname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*screenname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputWebinarRegisterEmailAndScreenNameParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string screenName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  return false;
#undef DO_
}

void InputWebinarRegisterEmailAndScreenNameParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // optional string screenName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->screenname(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
}

size_t InputWebinarRegisterEmailAndScreenNameParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string email = 1;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string screenName = 2;
    if (has_screenname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputWebinarRegisterEmailAndScreenNameParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InputWebinarRegisterEmailAndScreenNameParams*>(&from));
}

void InputWebinarRegisterEmailAndScreenNameParams::MergeFrom(const InputWebinarRegisterEmailAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_screenname();
      screenname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenname_);
    }
  }
}

void InputWebinarRegisterEmailAndScreenNameParams::CopyFrom(const InputWebinarRegisterEmailAndScreenNameParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputWebinarRegisterEmailAndScreenNameParams::IsInitialized() const {
  return true;
}

void InputWebinarRegisterEmailAndScreenNameParams::Swap(InputWebinarRegisterEmailAndScreenNameParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputWebinarRegisterEmailAndScreenNameParams::InternalSwap(InputWebinarRegisterEmailAndScreenNameParams* other) {
  using std::swap;
  email_.Swap(&other->email_);
  screenname_.Swap(&other->screenname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string InputWebinarRegisterEmailAndScreenNameParams::GetTypeName() const {
  return "com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputWebinarRegisterEmailAndScreenNameParams

// optional string email = 1;
bool InputWebinarRegisterEmailAndScreenNameParams::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputWebinarRegisterEmailAndScreenNameParams::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
void InputWebinarRegisterEmailAndScreenNameParams::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputWebinarRegisterEmailAndScreenNameParams::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& InputWebinarRegisterEmailAndScreenNameParams::email() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  return email_.GetNoArena();
}
void InputWebinarRegisterEmailAndScreenNameParams::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
#if LANG_CXX11
void InputWebinarRegisterEmailAndScreenNameParams::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
#endif
void InputWebinarRegisterEmailAndScreenNameParams::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
void InputWebinarRegisterEmailAndScreenNameParams::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}
::std::string* InputWebinarRegisterEmailAndScreenNameParams::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputWebinarRegisterEmailAndScreenNameParams::release_email() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputWebinarRegisterEmailAndScreenNameParams::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.email)
}

// optional string screenName = 2;
bool InputWebinarRegisterEmailAndScreenNameParams::has_screenname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputWebinarRegisterEmailAndScreenNameParams::set_has_screenname() {
  _has_bits_[0] |= 0x00000002u;
}
void InputWebinarRegisterEmailAndScreenNameParams::clear_has_screenname() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputWebinarRegisterEmailAndScreenNameParams::clear_screenname() {
  screenname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenname();
}
const ::std::string& InputWebinarRegisterEmailAndScreenNameParams::screenname() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  return screenname_.GetNoArena();
}
void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const ::std::string& value) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
#if LANG_CXX11
void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(::std::string&& value) {
  set_has_screenname();
  screenname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
#endif
void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
void InputWebinarRegisterEmailAndScreenNameParams::set_screenname(const char* value, size_t size) {
  set_has_screenname();
  screenname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}
::std::string* InputWebinarRegisterEmailAndScreenNameParams::mutable_screenname() {
  set_has_screenname();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  return screenname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputWebinarRegisterEmailAndScreenNameParams::release_screenname() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
  clear_has_screenname();
  return screenname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputWebinarRegisterEmailAndScreenNameParams::set_allocated_screenname(::std::string* screenname) {
  if (screenname != NULL) {
    set_has_screenname();
  } else {
    clear_has_screenname();
  }
  screenname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenname);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.InputWebinarRegisterEmailAndScreenNameParams.screenName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallOutH323Params::kDeviceNameFieldNumber;
const int CallOutH323Params::kDeviceIPFieldNumber;
const int CallOutH323Params::kDeviceE164NumFieldNumber;
const int CallOutH323Params::kH323DeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallOutH323Params::CallOutH323Params()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.CallOutH323Params)
}
CallOutH323Params::CallOutH323Params(const CallOutH323Params& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devicename()) {
    devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
  }
  deviceip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceip()) {
    deviceip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceip_);
  }
  devicee164num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devicee164num()) {
    devicee164num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicee164num_);
  }
  h323devicetype_ = from.h323devicetype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.CallOutH323Params)
}

void CallOutH323Params::SharedCtor() {
  _cached_size_ = 0;
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicee164num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h323devicetype_ = 0;
}

CallOutH323Params::~CallOutH323Params() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.CallOutH323Params)
  SharedDtor();
}

void CallOutH323Params::SharedDtor() {
  devicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicee164num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallOutH323Params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CallOutH323Params& CallOutH323Params::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallOutH323Params* CallOutH323Params::New(::google::protobuf::Arena* arena) const {
  CallOutH323Params* n = new CallOutH323Params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallOutH323Params::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.CallOutH323Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!devicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devicename_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!deviceip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deviceip_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!devicee164num_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devicee164num_.UnsafeRawStringPointer())->clear();
    }
  }
  h323devicetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallOutH323Params::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.CallOutH323Params)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deviceIP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deviceE164num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicee164num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 h323DeviceType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_h323devicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &h323devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.CallOutH323Params)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.CallOutH323Params)
  return false;
#undef DO_
}

void CallOutH323Params::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.CallOutH323Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string deviceName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->devicename(), output);
  }

  // optional string deviceIP = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceip(), output);
  }

  // optional string deviceE164num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->devicee164num(), output);
  }

  // optional int32 h323DeviceType = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->h323devicetype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.CallOutH323Params)
}

size_t CallOutH323Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.CallOutH323Params)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional string deviceName = 1;
    if (has_devicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicename());
    }

    // optional string deviceIP = 2;
    if (has_deviceip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceip());
    }

    // optional string deviceE164num = 3;
    if (has_devicee164num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicee164num());
    }

    // optional int32 h323DeviceType = 4;
    if (has_h323devicetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->h323devicetype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallOutH323Params::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CallOutH323Params*>(&from));
}

void CallOutH323Params::MergeFrom(const CallOutH323Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.CallOutH323Params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_devicename();
      devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_deviceip();
      deviceip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceip_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_devicee164num();
      devicee164num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicee164num_);
    }
    if (cached_has_bits & 0x00000008u) {
      h323devicetype_ = from.h323devicetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallOutH323Params::CopyFrom(const CallOutH323Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.CallOutH323Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallOutH323Params::IsInitialized() const {
  return true;
}

void CallOutH323Params::Swap(CallOutH323Params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallOutH323Params::InternalSwap(CallOutH323Params* other) {
  using std::swap;
  devicename_.Swap(&other->devicename_);
  deviceip_.Swap(&other->deviceip_);
  devicee164num_.Swap(&other->devicee164num_);
  swap(h323devicetype_, other->h323devicetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CallOutH323Params::GetTypeName() const {
  return "com.electron.sdk.proto.CallOutH323Params";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallOutH323Params

// optional string deviceName = 1;
bool CallOutH323Params::has_devicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallOutH323Params::set_has_devicename() {
  _has_bits_[0] |= 0x00000001u;
}
void CallOutH323Params::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallOutH323Params::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
const ::std::string& CallOutH323Params::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceName)
  return devicename_.GetNoArena();
}
void CallOutH323Params::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
#if LANG_CXX11
void CallOutH323Params::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
#endif
void CallOutH323Params::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
void CallOutH323Params::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceName)
}
::std::string* CallOutH323Params::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallOutH323Params::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallOutH323Params::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceName)
}

// optional string deviceIP = 2;
bool CallOutH323Params::has_deviceip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallOutH323Params::set_has_deviceip() {
  _has_bits_[0] |= 0x00000002u;
}
void CallOutH323Params::clear_has_deviceip() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallOutH323Params::clear_deviceip() {
  deviceip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceip();
}
const ::std::string& CallOutH323Params::deviceip() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  return deviceip_.GetNoArena();
}
void CallOutH323Params::set_deviceip(const ::std::string& value) {
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
#if LANG_CXX11
void CallOutH323Params::set_deviceip(::std::string&& value) {
  set_has_deviceip();
  deviceip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
#endif
void CallOutH323Params::set_deviceip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
void CallOutH323Params::set_deviceip(const char* value, size_t size) {
  set_has_deviceip();
  deviceip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}
::std::string* CallOutH323Params::mutable_deviceip() {
  set_has_deviceip();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  return deviceip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallOutH323Params::release_deviceip() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceIP)
  clear_has_deviceip();
  return deviceip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallOutH323Params::set_allocated_deviceip(::std::string* deviceip) {
  if (deviceip != NULL) {
    set_has_deviceip();
  } else {
    clear_has_deviceip();
  }
  deviceip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceip);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceIP)
}

// optional string deviceE164num = 3;
bool CallOutH323Params::has_devicee164num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CallOutH323Params::set_has_devicee164num() {
  _has_bits_[0] |= 0x00000004u;
}
void CallOutH323Params::clear_has_devicee164num() {
  _has_bits_[0] &= ~0x00000004u;
}
void CallOutH323Params::clear_devicee164num() {
  devicee164num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicee164num();
}
const ::std::string& CallOutH323Params::devicee164num() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  return devicee164num_.GetNoArena();
}
void CallOutH323Params::set_devicee164num(const ::std::string& value) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
#if LANG_CXX11
void CallOutH323Params::set_devicee164num(::std::string&& value) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
#endif
void CallOutH323Params::set_devicee164num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
void CallOutH323Params::set_devicee164num(const char* value, size_t size) {
  set_has_devicee164num();
  devicee164num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}
::std::string* CallOutH323Params::mutable_devicee164num() {
  set_has_devicee164num();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  return devicee164num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallOutH323Params::release_devicee164num() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
  clear_has_devicee164num();
  return devicee164num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallOutH323Params::set_allocated_devicee164num(::std::string* devicee164num) {
  if (devicee164num != NULL) {
    set_has_devicee164num();
  } else {
    clear_has_devicee164num();
  }
  devicee164num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicee164num);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.CallOutH323Params.deviceE164num)
}

// optional int32 h323DeviceType = 4;
bool CallOutH323Params::has_h323devicetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CallOutH323Params::set_has_h323devicetype() {
  _has_bits_[0] |= 0x00000008u;
}
void CallOutH323Params::clear_has_h323devicetype() {
  _has_bits_[0] &= ~0x00000008u;
}
void CallOutH323Params::clear_h323devicetype() {
  h323devicetype_ = 0;
  clear_has_h323devicetype();
}
::google::protobuf::int32 CallOutH323Params::h323devicetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CallOutH323Params.h323DeviceType)
  return h323devicetype_;
}
void CallOutH323Params::set_h323devicetype(::google::protobuf::int32 value) {
  set_has_h323devicetype();
  h323devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CallOutH323Params.h323DeviceType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoByUserIDParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoByUserIDParams::GetUserInfoByUserIDParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.GetUserInfoByUserIDParams)
}
GetUserInfoByUserIDParams::GetUserInfoByUserIDParams(const GetUserInfoByUserIDParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.GetUserInfoByUserIDParams)
}

void GetUserInfoByUserIDParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
}

GetUserInfoByUserIDParams::~GetUserInfoByUserIDParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  SharedDtor();
}

void GetUserInfoByUserIDParams::SharedDtor() {
}

void GetUserInfoByUserIDParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetUserInfoByUserIDParams& GetUserInfoByUserIDParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserInfoByUserIDParams* GetUserInfoByUserIDParams::New(::google::protobuf::Arena* arena) const {
  GetUserInfoByUserIDParams* n = new GetUserInfoByUserIDParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoByUserIDParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserInfoByUserIDParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  return false;
#undef DO_
}

void GetUserInfoByUserIDParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.GetUserInfoByUserIDParams)
}

size_t GetUserInfoByUserIDParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoByUserIDParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetUserInfoByUserIDParams*>(&from));
}

void GetUserInfoByUserIDParams::MergeFrom(const GetUserInfoByUserIDParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void GetUserInfoByUserIDParams::CopyFrom(const GetUserInfoByUserIDParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.GetUserInfoByUserIDParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoByUserIDParams::IsInitialized() const {
  return true;
}

void GetUserInfoByUserIDParams::Swap(GetUserInfoByUserIDParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoByUserIDParams::InternalSwap(GetUserInfoByUserIDParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GetUserInfoByUserIDParams::GetTypeName() const {
  return "com.electron.sdk.proto.GetUserInfoByUserIDParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoByUserIDParams

// optional uint32 userID = 1;
bool GetUserInfoByUserIDParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetUserInfoByUserIDParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetUserInfoByUserIDParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetUserInfoByUserIDParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 GetUserInfoByUserIDParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetUserInfoByUserIDParams.userID)
  return userid_;
}
void GetUserInfoByUserIDParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetUserInfoByUserIDParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartRecordingParams::kRecPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartRecordingParams::StartRecordingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartRecordingParams)
}
StartRecordingParams::StartRecordingParams(const StartRecordingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recpath()) {
    recpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recpath_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartRecordingParams)
}

void StartRecordingParams::SharedCtor() {
  _cached_size_ = 0;
  recpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartRecordingParams::~StartRecordingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartRecordingParams)
  SharedDtor();
}

void StartRecordingParams::SharedDtor() {
  recpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartRecordingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartRecordingParams& StartRecordingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartRecordingParams* StartRecordingParams::New(::google::protobuf::Arena* arena) const {
  StartRecordingParams* n = new StartRecordingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartRecordingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_recpath()) {
    GOOGLE_DCHECK(!recpath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*recpath_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartRecordingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartRecordingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string recPath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartRecordingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartRecordingParams)
  return false;
#undef DO_
}

void StartRecordingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string recPath = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->recpath(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartRecordingParams)
}

size_t StartRecordingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartRecordingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string recPath = 1;
  if (has_recpath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recpath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartRecordingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartRecordingParams*>(&from));
}

void StartRecordingParams::MergeFrom(const StartRecordingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartRecordingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recpath()) {
    set_has_recpath();
    recpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recpath_);
  }
}

void StartRecordingParams::CopyFrom(const StartRecordingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartRecordingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartRecordingParams::IsInitialized() const {
  return true;
}

void StartRecordingParams::Swap(StartRecordingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartRecordingParams::InternalSwap(StartRecordingParams* other) {
  using std::swap;
  recpath_.Swap(&other->recpath_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartRecordingParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartRecordingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartRecordingParams

// optional string recPath = 1;
bool StartRecordingParams::has_recpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartRecordingParams::set_has_recpath() {
  _has_bits_[0] |= 0x00000001u;
}
void StartRecordingParams::clear_has_recpath() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartRecordingParams::clear_recpath() {
  recpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recpath();
}
const ::std::string& StartRecordingParams::recpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartRecordingParams.recPath)
  return recpath_.GetNoArena();
}
void StartRecordingParams::set_recpath(const ::std::string& value) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartRecordingParams.recPath)
}
#if LANG_CXX11
void StartRecordingParams::set_recpath(::std::string&& value) {
  set_has_recpath();
  recpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartRecordingParams.recPath)
}
#endif
void StartRecordingParams::set_recpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartRecordingParams.recPath)
}
void StartRecordingParams::set_recpath(const char* value, size_t size) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartRecordingParams.recPath)
}
::std::string* StartRecordingParams::mutable_recpath() {
  set_has_recpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartRecordingParams.recPath)
  return recpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartRecordingParams::release_recpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartRecordingParams.recPath)
  clear_has_recpath();
  return recpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartRecordingParams::set_allocated_recpath(::std::string* recpath) {
  if (recpath != NULL) {
    set_has_recpath();
  } else {
    clear_has_recpath();
  }
  recpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartRecordingParams.recPath)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanStartRecordingParams::kBCloudRecordingFieldNumber;
const int CanStartRecordingParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanStartRecordingParams::CanStartRecordingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.CanStartRecordingParams)
}
CanStartRecordingParams::CanStartRecordingParams(const CanStartRecordingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bcloudrecording_, &from.bcloudrecording_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&bcloudrecording_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.CanStartRecordingParams)
}

void CanStartRecordingParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bcloudrecording_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&bcloudrecording_)) + sizeof(userid_));
}

CanStartRecordingParams::~CanStartRecordingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.CanStartRecordingParams)
  SharedDtor();
}

void CanStartRecordingParams::SharedDtor() {
}

void CanStartRecordingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CanStartRecordingParams& CanStartRecordingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanStartRecordingParams* CanStartRecordingParams::New(::google::protobuf::Arena* arena) const {
  CanStartRecordingParams* n = new CanStartRecordingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanStartRecordingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.CanStartRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bcloudrecording_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&bcloudrecording_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CanStartRecordingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.CanStartRecordingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bCloudRecording = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bcloudrecording();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcloudrecording_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.CanStartRecordingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.CanStartRecordingParams)
  return false;
#undef DO_
}

void CanStartRecordingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.CanStartRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bCloudRecording = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bcloudrecording(), output);
  }

  // optional uint32 userID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.CanStartRecordingParams)
}

size_t CanStartRecordingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.CanStartRecordingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bCloudRecording = 1;
    if (has_bcloudrecording()) {
      total_size += 1 + 1;
    }

    // optional uint32 userID = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanStartRecordingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CanStartRecordingParams*>(&from));
}

void CanStartRecordingParams::MergeFrom(const CanStartRecordingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.CanStartRecordingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bcloudrecording_ = from.bcloudrecording_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CanStartRecordingParams::CopyFrom(const CanStartRecordingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.CanStartRecordingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanStartRecordingParams::IsInitialized() const {
  return true;
}

void CanStartRecordingParams::Swap(CanStartRecordingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanStartRecordingParams::InternalSwap(CanStartRecordingParams* other) {
  using std::swap;
  swap(bcloudrecording_, other->bcloudrecording_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CanStartRecordingParams::GetTypeName() const {
  return "com.electron.sdk.proto.CanStartRecordingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanStartRecordingParams

// optional bool bCloudRecording = 1;
bool CanStartRecordingParams::has_bcloudrecording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CanStartRecordingParams::set_has_bcloudrecording() {
  _has_bits_[0] |= 0x00000001u;
}
void CanStartRecordingParams::clear_has_bcloudrecording() {
  _has_bits_[0] &= ~0x00000001u;
}
void CanStartRecordingParams::clear_bcloudrecording() {
  bcloudrecording_ = false;
  clear_has_bcloudrecording();
}
bool CanStartRecordingParams::bcloudrecording() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CanStartRecordingParams.bCloudRecording)
  return bcloudrecording_;
}
void CanStartRecordingParams::set_bcloudrecording(bool value) {
  set_has_bcloudrecording();
  bcloudrecording_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CanStartRecordingParams.bCloudRecording)
}

// optional uint32 userID = 2;
bool CanStartRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CanStartRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void CanStartRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CanStartRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 CanStartRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CanStartRecordingParams.userID)
  return userid_;
}
void CanStartRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CanStartRecordingParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsSupportLocalRecordingParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsSupportLocalRecordingParams::IsSupportLocalRecordingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.IsSupportLocalRecordingParams)
}
IsSupportLocalRecordingParams::IsSupportLocalRecordingParams(const IsSupportLocalRecordingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.IsSupportLocalRecordingParams)
}

void IsSupportLocalRecordingParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
}

IsSupportLocalRecordingParams::~IsSupportLocalRecordingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  SharedDtor();
}

void IsSupportLocalRecordingParams::SharedDtor() {
}

void IsSupportLocalRecordingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IsSupportLocalRecordingParams& IsSupportLocalRecordingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

IsSupportLocalRecordingParams* IsSupportLocalRecordingParams::New(::google::protobuf::Arena* arena) const {
  IsSupportLocalRecordingParams* n = new IsSupportLocalRecordingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsSupportLocalRecordingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IsSupportLocalRecordingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  return false;
#undef DO_
}

void IsSupportLocalRecordingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.IsSupportLocalRecordingParams)
}

size_t IsSupportLocalRecordingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsSupportLocalRecordingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IsSupportLocalRecordingParams*>(&from));
}

void IsSupportLocalRecordingParams::MergeFrom(const IsSupportLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void IsSupportLocalRecordingParams::CopyFrom(const IsSupportLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.IsSupportLocalRecordingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsSupportLocalRecordingParams::IsInitialized() const {
  return true;
}

void IsSupportLocalRecordingParams::Swap(IsSupportLocalRecordingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsSupportLocalRecordingParams::InternalSwap(IsSupportLocalRecordingParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string IsSupportLocalRecordingParams::GetTypeName() const {
  return "com.electron.sdk.proto.IsSupportLocalRecordingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsSupportLocalRecordingParams

// optional uint32 userID = 1;
bool IsSupportLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IsSupportLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void IsSupportLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void IsSupportLocalRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 IsSupportLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.IsSupportLocalRecordingParams.userID)
  return userid_;
}
void IsSupportLocalRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.IsSupportLocalRecordingParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllowLocalRecordingParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllowLocalRecordingParams::AllowLocalRecordingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.AllowLocalRecordingParams)
}
AllowLocalRecordingParams::AllowLocalRecordingParams(const AllowLocalRecordingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.AllowLocalRecordingParams)
}

void AllowLocalRecordingParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0;
}

AllowLocalRecordingParams::~AllowLocalRecordingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.AllowLocalRecordingParams)
  SharedDtor();
}

void AllowLocalRecordingParams::SharedDtor() {
}

void AllowLocalRecordingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AllowLocalRecordingParams& AllowLocalRecordingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllowLocalRecordingParams* AllowLocalRecordingParams::New(::google::protobuf::Arena* arena) const {
  AllowLocalRecordingParams* n = new AllowLocalRecordingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllowLocalRecordingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllowLocalRecordingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.AllowLocalRecordingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.AllowLocalRecordingParams)
  return false;
#undef DO_
}

void AllowLocalRecordingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.AllowLocalRecordingParams)
}

size_t AllowLocalRecordingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllowLocalRecordingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AllowLocalRecordingParams*>(&from));
}

void AllowLocalRecordingParams::MergeFrom(const AllowLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void AllowLocalRecordingParams::CopyFrom(const AllowLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.AllowLocalRecordingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowLocalRecordingParams::IsInitialized() const {
  return true;
}

void AllowLocalRecordingParams::Swap(AllowLocalRecordingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllowLocalRecordingParams::InternalSwap(AllowLocalRecordingParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AllowLocalRecordingParams::GetTypeName() const {
  return "com.electron.sdk.proto.AllowLocalRecordingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllowLocalRecordingParams

// optional int32 userID = 1;
bool AllowLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AllowLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void AllowLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AllowLocalRecordingParams::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 AllowLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.AllowLocalRecordingParams.userID)
  return userid_;
}
void AllowLocalRecordingParams::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.AllowLocalRecordingParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisAllowLocalRecordingParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisAllowLocalRecordingParams::DisAllowLocalRecordingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisAllowLocalRecordingParams)
}
DisAllowLocalRecordingParams::DisAllowLocalRecordingParams(const DisAllowLocalRecordingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisAllowLocalRecordingParams)
}

void DisAllowLocalRecordingParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
}

DisAllowLocalRecordingParams::~DisAllowLocalRecordingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  SharedDtor();
}

void DisAllowLocalRecordingParams::SharedDtor() {
}

void DisAllowLocalRecordingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisAllowLocalRecordingParams& DisAllowLocalRecordingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisAllowLocalRecordingParams* DisAllowLocalRecordingParams::New(::google::protobuf::Arena* arena) const {
  DisAllowLocalRecordingParams* n = new DisAllowLocalRecordingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisAllowLocalRecordingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisAllowLocalRecordingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  return false;
#undef DO_
}

void DisAllowLocalRecordingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisAllowLocalRecordingParams)
}

size_t DisAllowLocalRecordingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisAllowLocalRecordingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisAllowLocalRecordingParams*>(&from));
}

void DisAllowLocalRecordingParams::MergeFrom(const DisAllowLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void DisAllowLocalRecordingParams::CopyFrom(const DisAllowLocalRecordingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisAllowLocalRecordingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisAllowLocalRecordingParams::IsInitialized() const {
  return true;
}

void DisAllowLocalRecordingParams::Swap(DisAllowLocalRecordingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisAllowLocalRecordingParams::InternalSwap(DisAllowLocalRecordingParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisAllowLocalRecordingParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisAllowLocalRecordingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisAllowLocalRecordingParams

// optional uint32 userID = 1;
bool DisAllowLocalRecordingParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisAllowLocalRecordingParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void DisAllowLocalRecordingParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisAllowLocalRecordingParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 DisAllowLocalRecordingParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisAllowLocalRecordingParams.userID)
  return userid_;
}
void DisAllowLocalRecordingParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisAllowLocalRecordingParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartAppShareParams::kHShareAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartAppShareParams::StartAppShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartAppShareParams)
}
StartAppShareParams::StartAppShareParams(const StartAppShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hshareapp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hshareapp()) {
    hshareapp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hshareapp_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartAppShareParams)
}

void StartAppShareParams::SharedCtor() {
  _cached_size_ = 0;
  hshareapp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartAppShareParams::~StartAppShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartAppShareParams)
  SharedDtor();
}

void StartAppShareParams::SharedDtor() {
  hshareapp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartAppShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartAppShareParams& StartAppShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartAppShareParams* StartAppShareParams::New(::google::protobuf::Arena* arena) const {
  StartAppShareParams* n = new StartAppShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartAppShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartAppShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_hshareapp()) {
    GOOGLE_DCHECK(!hshareapp_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*hshareapp_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartAppShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartAppShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hShareApp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hshareapp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartAppShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartAppShareParams)
  return false;
#undef DO_
}

void StartAppShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartAppShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string hShareApp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hshareapp(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartAppShareParams)
}

size_t StartAppShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartAppShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string hShareApp = 1;
  if (has_hshareapp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hshareapp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartAppShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartAppShareParams*>(&from));
}

void StartAppShareParams::MergeFrom(const StartAppShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartAppShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hshareapp()) {
    set_has_hshareapp();
    hshareapp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hshareapp_);
  }
}

void StartAppShareParams::CopyFrom(const StartAppShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartAppShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartAppShareParams::IsInitialized() const {
  return true;
}

void StartAppShareParams::Swap(StartAppShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartAppShareParams::InternalSwap(StartAppShareParams* other) {
  using std::swap;
  hshareapp_.Swap(&other->hshareapp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartAppShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartAppShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartAppShareParams

// optional string hShareApp = 1;
bool StartAppShareParams::has_hshareapp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartAppShareParams::set_has_hshareapp() {
  _has_bits_[0] |= 0x00000001u;
}
void StartAppShareParams::clear_has_hshareapp() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartAppShareParams::clear_hshareapp() {
  hshareapp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hshareapp();
}
const ::std::string& StartAppShareParams::hshareapp() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  return hshareapp_.GetNoArena();
}
void StartAppShareParams::set_hshareapp(const ::std::string& value) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
#if LANG_CXX11
void StartAppShareParams::set_hshareapp(::std::string&& value) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
#endif
void StartAppShareParams::set_hshareapp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
void StartAppShareParams::set_hshareapp(const char* value, size_t size) {
  set_has_hshareapp();
  hshareapp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}
::std::string* StartAppShareParams::mutable_hshareapp() {
  set_has_hshareapp();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  return hshareapp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartAppShareParams::release_hshareapp() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartAppShareParams.hShareApp)
  clear_has_hshareapp();
  return hshareapp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartAppShareParams::set_allocated_hshareapp(::std::string* hshareapp) {
  if (hshareapp != NULL) {
    set_has_hshareapp();
  } else {
    clear_has_hshareapp();
  }
  hshareapp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hshareapp);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartAppShareParams.hShareApp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartMonitorShareParams::kMonitorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartMonitorShareParams::StartMonitorShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.StartMonitorShareParams)
}
StartMonitorShareParams::StartMonitorShareParams(const StartMonitorShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monitorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_monitorid()) {
    monitorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitorid_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.StartMonitorShareParams)
}

void StartMonitorShareParams::SharedCtor() {
  _cached_size_ = 0;
  monitorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartMonitorShareParams::~StartMonitorShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.StartMonitorShareParams)
  SharedDtor();
}

void StartMonitorShareParams::SharedDtor() {
  monitorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartMonitorShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StartMonitorShareParams& StartMonitorShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartMonitorShareParams* StartMonitorShareParams::New(::google::protobuf::Arena* arena) const {
  StartMonitorShareParams* n = new StartMonitorShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartMonitorShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.StartMonitorShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_monitorid()) {
    GOOGLE_DCHECK(!monitorid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*monitorid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartMonitorShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.StartMonitorShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string monitorID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_monitorid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.StartMonitorShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.StartMonitorShareParams)
  return false;
#undef DO_
}

void StartMonitorShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.StartMonitorShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string monitorID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->monitorid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.StartMonitorShareParams)
}

size_t StartMonitorShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.StartMonitorShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string monitorID = 1;
  if (has_monitorid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->monitorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartMonitorShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StartMonitorShareParams*>(&from));
}

void StartMonitorShareParams::MergeFrom(const StartMonitorShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.StartMonitorShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monitorid()) {
    set_has_monitorid();
    monitorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.monitorid_);
  }
}

void StartMonitorShareParams::CopyFrom(const StartMonitorShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.StartMonitorShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMonitorShareParams::IsInitialized() const {
  return true;
}

void StartMonitorShareParams::Swap(StartMonitorShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartMonitorShareParams::InternalSwap(StartMonitorShareParams* other) {
  using std::swap;
  monitorid_.Swap(&other->monitorid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StartMonitorShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.StartMonitorShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartMonitorShareParams

// optional string monitorID = 1;
bool StartMonitorShareParams::has_monitorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartMonitorShareParams::set_has_monitorid() {
  _has_bits_[0] |= 0x00000001u;
}
void StartMonitorShareParams::clear_has_monitorid() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartMonitorShareParams::clear_monitorid() {
  monitorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_monitorid();
}
const ::std::string& StartMonitorShareParams::monitorid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  return monitorid_.GetNoArena();
}
void StartMonitorShareParams::set_monitorid(const ::std::string& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
#if LANG_CXX11
void StartMonitorShareParams::set_monitorid(::std::string&& value) {
  set_has_monitorid();
  monitorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
#endif
void StartMonitorShareParams::set_monitorid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
void StartMonitorShareParams::set_monitorid(const char* value, size_t size) {
  set_has_monitorid();
  monitorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}
::std::string* StartMonitorShareParams::mutable_monitorid() {
  set_has_monitorid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  return monitorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StartMonitorShareParams::release_monitorid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
  clear_has_monitorid();
  return monitorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StartMonitorShareParams::set_allocated_monitorid(::std::string* monitorid) {
  if (monitorid != NULL) {
    set_has_monitorid();
  } else {
    clear_has_monitorid();
  }
  monitorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitorid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.StartMonitorShareParams.monitorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MuteVideoParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MuteVideoParams::MuteVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.MuteVideoParams)
}
MuteVideoParams::MuteVideoParams(const MuteVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.MuteVideoParams)
}

void MuteVideoParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
}

MuteVideoParams::~MuteVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.MuteVideoParams)
  SharedDtor();
}

void MuteVideoParams::SharedDtor() {
}

void MuteVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MuteVideoParams& MuteVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

MuteVideoParams* MuteVideoParams::New(::google::protobuf::Arena* arena) const {
  MuteVideoParams* n = new MuteVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MuteVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.MuteVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MuteVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.MuteVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.MuteVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.MuteVideoParams)
  return false;
#undef DO_
}

void MuteVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.MuteVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.MuteVideoParams)
}

size_t MuteVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.MuteVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MuteVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MuteVideoParams*>(&from));
}

void MuteVideoParams::MergeFrom(const MuteVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.MuteVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void MuteVideoParams::CopyFrom(const MuteVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.MuteVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MuteVideoParams::IsInitialized() const {
  return true;
}

void MuteVideoParams::Swap(MuteVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MuteVideoParams::InternalSwap(MuteVideoParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string MuteVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.MuteVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MuteVideoParams

// optional uint32 userID = 1;
bool MuteVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MuteVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void MuteVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MuteVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 MuteVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.MuteVideoParams.userID)
  return userid_;
}
void MuteVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.MuteVideoParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnMuteVideoParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnMuteVideoParams::UnMuteVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.UnMuteVideoParams)
}
UnMuteVideoParams::UnMuteVideoParams(const UnMuteVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.UnMuteVideoParams)
}

void UnMuteVideoParams::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
}

UnMuteVideoParams::~UnMuteVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.UnMuteVideoParams)
  SharedDtor();
}

void UnMuteVideoParams::SharedDtor() {
}

void UnMuteVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UnMuteVideoParams& UnMuteVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnMuteVideoParams* UnMuteVideoParams::New(::google::protobuf::Arena* arena) const {
  UnMuteVideoParams* n = new UnMuteVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnMuteVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.UnMuteVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnMuteVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.UnMuteVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.UnMuteVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.UnMuteVideoParams)
  return false;
#undef DO_
}

void UnMuteVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.UnMuteVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.UnMuteVideoParams)
}

size_t UnMuteVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.UnMuteVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint32 userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnMuteVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UnMuteVideoParams*>(&from));
}

void UnMuteVideoParams::MergeFrom(const UnMuteVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.UnMuteVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void UnMuteVideoParams::CopyFrom(const UnMuteVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.UnMuteVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnMuteVideoParams::IsInitialized() const {
  return true;
}

void UnMuteVideoParams::Swap(UnMuteVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnMuteVideoParams::InternalSwap(UnMuteVideoParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string UnMuteVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.UnMuteVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnMuteVideoParams

// optional uint32 userID = 1;
bool UnMuteVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnMuteVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void UnMuteVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnMuteVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 UnMuteVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnMuteVideoParams.userID)
  return userid_;
}
void UnMuteVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnMuteVideoParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PinVideoParams::kBPinFieldNumber;
const int PinVideoParams::kBFirstViewFieldNumber;
const int PinVideoParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PinVideoParams::PinVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.PinVideoParams)
}
PinVideoParams::PinVideoParams(const PinVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bpin_, &from.bpin_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&bpin_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.PinVideoParams)
}

void PinVideoParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bpin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&bpin_)) + sizeof(userid_));
}

PinVideoParams::~PinVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.PinVideoParams)
  SharedDtor();
}

void PinVideoParams::SharedDtor() {
}

void PinVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PinVideoParams& PinVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

PinVideoParams* PinVideoParams::New(::google::protobuf::Arena* arena) const {
  PinVideoParams* n = new PinVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PinVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.PinVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&bpin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&bpin_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PinVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.PinVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bPin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bpin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bpin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bFirstView = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bfirstview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bfirstview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 userID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.PinVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.PinVideoParams)
  return false;
#undef DO_
}

void PinVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.PinVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bPin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bpin(), output);
  }

  // optional bool bFirstView = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bfirstview(), output);
  }

  // optional uint32 userID = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.PinVideoParams)
}

size_t PinVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.PinVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool bPin = 1;
    if (has_bpin()) {
      total_size += 1 + 1;
    }

    // optional bool bFirstView = 2;
    if (has_bfirstview()) {
      total_size += 1 + 1;
    }

    // optional uint32 userID = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PinVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PinVideoParams*>(&from));
}

void PinVideoParams::MergeFrom(const PinVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.PinVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bpin_ = from.bpin_;
    }
    if (cached_has_bits & 0x00000002u) {
      bfirstview_ = from.bfirstview_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PinVideoParams::CopyFrom(const PinVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.PinVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinVideoParams::IsInitialized() const {
  return true;
}

void PinVideoParams::Swap(PinVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PinVideoParams::InternalSwap(PinVideoParams* other) {
  using std::swap;
  swap(bpin_, other->bpin_);
  swap(bfirstview_, other->bfirstview_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string PinVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.PinVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PinVideoParams

// optional bool bPin = 1;
bool PinVideoParams::has_bpin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PinVideoParams::set_has_bpin() {
  _has_bits_[0] |= 0x00000001u;
}
void PinVideoParams::clear_has_bpin() {
  _has_bits_[0] &= ~0x00000001u;
}
void PinVideoParams::clear_bpin() {
  bpin_ = false;
  clear_has_bpin();
}
bool PinVideoParams::bpin() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.bPin)
  return bpin_;
}
void PinVideoParams::set_bpin(bool value) {
  set_has_bpin();
  bpin_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.bPin)
}

// optional bool bFirstView = 2;
bool PinVideoParams::has_bfirstview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PinVideoParams::set_has_bfirstview() {
  _has_bits_[0] |= 0x00000002u;
}
void PinVideoParams::clear_has_bfirstview() {
  _has_bits_[0] &= ~0x00000002u;
}
void PinVideoParams::clear_bfirstview() {
  bfirstview_ = false;
  clear_has_bfirstview();
}
bool PinVideoParams::bfirstview() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.bFirstView)
  return bfirstview_;
}
void PinVideoParams::set_bfirstview(bool value) {
  set_has_bfirstview();
  bfirstview_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.bFirstView)
}

// optional uint32 userID = 3;
bool PinVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PinVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void PinVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void PinVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 PinVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.PinVideoParams.userID)
  return userid_;
}
void PinVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.PinVideoParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpotlightVideoParams::kBSpotlightFieldNumber;
const int SpotlightVideoParams::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpotlightVideoParams::SpotlightVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SpotlightVideoParams)
}
SpotlightVideoParams::SpotlightVideoParams(const SpotlightVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bspotlight_, &from.bspotlight_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&bspotlight_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SpotlightVideoParams)
}

void SpotlightVideoParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bspotlight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&bspotlight_)) + sizeof(userid_));
}

SpotlightVideoParams::~SpotlightVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SpotlightVideoParams)
  SharedDtor();
}

void SpotlightVideoParams::SharedDtor() {
}

void SpotlightVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SpotlightVideoParams& SpotlightVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpotlightVideoParams* SpotlightVideoParams::New(::google::protobuf::Arena* arena) const {
  SpotlightVideoParams* n = new SpotlightVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpotlightVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SpotlightVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bspotlight_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&bspotlight_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SpotlightVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SpotlightVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bSpotlight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bspotlight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bspotlight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SpotlightVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SpotlightVideoParams)
  return false;
#undef DO_
}

void SpotlightVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SpotlightVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bSpotlight = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bspotlight(), output);
  }

  // optional uint32 userID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SpotlightVideoParams)
}

size_t SpotlightVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SpotlightVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bSpotlight = 1;
    if (has_bspotlight()) {
      total_size += 1 + 1;
    }

    // optional uint32 userID = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpotlightVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SpotlightVideoParams*>(&from));
}

void SpotlightVideoParams::MergeFrom(const SpotlightVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SpotlightVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bspotlight_ = from.bspotlight_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpotlightVideoParams::CopyFrom(const SpotlightVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SpotlightVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpotlightVideoParams::IsInitialized() const {
  return true;
}

void SpotlightVideoParams::Swap(SpotlightVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpotlightVideoParams::InternalSwap(SpotlightVideoParams* other) {
  using std::swap;
  swap(bspotlight_, other->bspotlight_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SpotlightVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.SpotlightVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpotlightVideoParams

// optional bool bSpotlight = 1;
bool SpotlightVideoParams::has_bspotlight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpotlightVideoParams::set_has_bspotlight() {
  _has_bits_[0] |= 0x00000001u;
}
void SpotlightVideoParams::clear_has_bspotlight() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpotlightVideoParams::clear_bspotlight() {
  bspotlight_ = false;
  clear_has_bspotlight();
}
bool SpotlightVideoParams::bspotlight() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SpotlightVideoParams.bSpotlight)
  return bspotlight_;
}
void SpotlightVideoParams::set_bspotlight(bool value) {
  set_has_bspotlight();
  bspotlight_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SpotlightVideoParams.bSpotlight)
}

// optional uint32 userID = 2;
bool SpotlightVideoParams::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SpotlightVideoParams::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void SpotlightVideoParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SpotlightVideoParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 SpotlightVideoParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SpotlightVideoParams.userID)
  return userid_;
}
void SpotlightVideoParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SpotlightVideoParams.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideOrShowNoVideoUserOnVideoWallParams::kBHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideOrShowNoVideoUserOnVideoWallParams::HideOrShowNoVideoUserOnVideoWallParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
}
HideOrShowNoVideoUserOnVideoWallParams::HideOrShowNoVideoUserOnVideoWallParams(const HideOrShowNoVideoUserOnVideoWallParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bhide_ = from.bhide_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
}

void HideOrShowNoVideoUserOnVideoWallParams::SharedCtor() {
  _cached_size_ = 0;
  bhide_ = false;
}

HideOrShowNoVideoUserOnVideoWallParams::~HideOrShowNoVideoUserOnVideoWallParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  SharedDtor();
}

void HideOrShowNoVideoUserOnVideoWallParams::SharedDtor() {
}

void HideOrShowNoVideoUserOnVideoWallParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HideOrShowNoVideoUserOnVideoWallParams& HideOrShowNoVideoUserOnVideoWallParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideOrShowNoVideoUserOnVideoWallParams* HideOrShowNoVideoUserOnVideoWallParams::New(::google::protobuf::Arena* arena) const {
  HideOrShowNoVideoUserOnVideoWallParams* n = new HideOrShowNoVideoUserOnVideoWallParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideOrShowNoVideoUserOnVideoWallParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhide_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HideOrShowNoVideoUserOnVideoWallParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bHide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bhide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  return false;
#undef DO_
}

void HideOrShowNoVideoUserOnVideoWallParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bHide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bhide(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
}

size_t HideOrShowNoVideoUserOnVideoWallParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bHide = 1;
  if (has_bhide()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideOrShowNoVideoUserOnVideoWallParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HideOrShowNoVideoUserOnVideoWallParams*>(&from));
}

void HideOrShowNoVideoUserOnVideoWallParams::MergeFrom(const HideOrShowNoVideoUserOnVideoWallParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bhide()) {
    set_bhide(from.bhide());
  }
}

void HideOrShowNoVideoUserOnVideoWallParams::CopyFrom(const HideOrShowNoVideoUserOnVideoWallParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideOrShowNoVideoUserOnVideoWallParams::IsInitialized() const {
  return true;
}

void HideOrShowNoVideoUserOnVideoWallParams::Swap(HideOrShowNoVideoUserOnVideoWallParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideOrShowNoVideoUserOnVideoWallParams::InternalSwap(HideOrShowNoVideoUserOnVideoWallParams* other) {
  using std::swap;
  swap(bhide_, other->bhide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string HideOrShowNoVideoUserOnVideoWallParams::GetTypeName() const {
  return "com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideOrShowNoVideoUserOnVideoWallParams

// optional bool bHide = 1;
bool HideOrShowNoVideoUserOnVideoWallParams::has_bhide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HideOrShowNoVideoUserOnVideoWallParams::set_has_bhide() {
  _has_bits_[0] |= 0x00000001u;
}
void HideOrShowNoVideoUserOnVideoWallParams::clear_has_bhide() {
  _has_bits_[0] &= ~0x00000001u;
}
void HideOrShowNoVideoUserOnVideoWallParams::clear_bhide() {
  bhide_ = false;
  clear_has_bhide();
}
bool HideOrShowNoVideoUserOnVideoWallParams::bhide() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams.bHide)
  return bhide_;
}
void HideOrShowNoVideoUserOnVideoWallParams::set_bhide(bool value) {
  set_has_bhide();
  bhide_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.HideOrShowNoVideoUserOnVideoWallParams.bHide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRendererParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRendererParams::CreateRendererParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.CreateRendererParams)
}
CreateRendererParams::CreateRendererParams(const CreateRendererParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.CreateRendererParams)
}

void CreateRendererParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

CreateRendererParams::~CreateRendererParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.CreateRendererParams)
  SharedDtor();
}

void CreateRendererParams::SharedDtor() {
}

void CreateRendererParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CreateRendererParams& CreateRendererParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRendererParams* CreateRendererParams::New(::google::protobuf::Arena* arena) const {
  CreateRendererParams* n = new CreateRendererParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRendererParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.CreateRendererParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRendererParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.CreateRendererParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.CreateRendererParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.CreateRendererParams)
  return false;
#undef DO_
}

void CreateRendererParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.CreateRendererParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.CreateRendererParams)
}

size_t CreateRendererParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.CreateRendererParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRendererParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateRendererParams*>(&from));
}

void CreateRendererParams::MergeFrom(const CreateRendererParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.CreateRendererParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void CreateRendererParams::CopyFrom(const CreateRendererParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.CreateRendererParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRendererParams::IsInitialized() const {
  return true;
}

void CreateRendererParams::Swap(CreateRendererParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRendererParams::InternalSwap(CreateRendererParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string CreateRendererParams::GetTypeName() const {
  return "com.electron.sdk.proto.CreateRendererParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRendererParams

// optional uint64 recvHandle = 1;
bool CreateRendererParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRendererParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRendererParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRendererParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 CreateRendererParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.CreateRendererParams.recvHandle)
  return recvhandle_;
}
void CreateRendererParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.CreateRendererParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyRendererParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyRendererParams::DestroyRendererParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DestroyRendererParams)
}
DestroyRendererParams::DestroyRendererParams(const DestroyRendererParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DestroyRendererParams)
}

void DestroyRendererParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

DestroyRendererParams::~DestroyRendererParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DestroyRendererParams)
  SharedDtor();
}

void DestroyRendererParams::SharedDtor() {
}

void DestroyRendererParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DestroyRendererParams& DestroyRendererParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DestroyRendererParams* DestroyRendererParams::New(::google::protobuf::Arena* arena) const {
  DestroyRendererParams* n = new DestroyRendererParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyRendererParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DestroyRendererParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DestroyRendererParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DestroyRendererParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DestroyRendererParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DestroyRendererParams)
  return false;
#undef DO_
}

void DestroyRendererParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DestroyRendererParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DestroyRendererParams)
}

size_t DestroyRendererParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DestroyRendererParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyRendererParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DestroyRendererParams*>(&from));
}

void DestroyRendererParams::MergeFrom(const DestroyRendererParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DestroyRendererParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void DestroyRendererParams::CopyFrom(const DestroyRendererParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DestroyRendererParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyRendererParams::IsInitialized() const {
  return true;
}

void DestroyRendererParams::Swap(DestroyRendererParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyRendererParams::InternalSwap(DestroyRendererParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DestroyRendererParams::GetTypeName() const {
  return "com.electron.sdk.proto.DestroyRendererParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyRendererParams

// optional uint64 recvHandle = 1;
bool DestroyRendererParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DestroyRendererParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void DestroyRendererParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void DestroyRendererParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 DestroyRendererParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DestroyRendererParams.recvHandle)
  return recvhandle_;
}
void DestroyRendererParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DestroyRendererParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeParams::kUserIDFieldNumber;
const int SubscribeParams::kRawDataTypeFieldNumber;
const int SubscribeParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeParams::SubscribeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SubscribeParams)
}
SubscribeParams::SubscribeParams(const SubscribeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&recvhandle_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(recvhandle_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SubscribeParams)
}

void SubscribeParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recvhandle_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(recvhandle_));
}

SubscribeParams::~SubscribeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SubscribeParams)
  SharedDtor();
}

void SubscribeParams::SharedDtor() {
}

void SubscribeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SubscribeParams& SubscribeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscribeParams* SubscribeParams::New(::google::protobuf::Arena* arena) const {
  SubscribeParams* n = new SubscribeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SubscribeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&recvhandle_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(recvhandle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubscribeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SubscribeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rawDataType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rawdatatype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rawdatatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 recvHandle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SubscribeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SubscribeParams)
  return false;
#undef DO_
}

void SubscribeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SubscribeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 userID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional int32 rawDataType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rawdatatype(), output);
  }

  // optional uint64 recvHandle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SubscribeParams)
}

size_t SubscribeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SubscribeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 userID = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userid());
    }

    // optional int32 rawDataType = 2;
    if (has_rawdatatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rawdatatype());
    }

    // optional uint64 recvHandle = 3;
    if (has_recvhandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->recvhandle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SubscribeParams*>(&from));
}

void SubscribeParams::MergeFrom(const SubscribeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SubscribeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      rawdatatype_ = from.rawdatatype_;
    }
    if (cached_has_bits & 0x00000004u) {
      recvhandle_ = from.recvhandle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SubscribeParams::CopyFrom(const SubscribeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SubscribeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeParams::IsInitialized() const {
  return true;
}

void SubscribeParams::Swap(SubscribeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeParams::InternalSwap(SubscribeParams* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(rawdatatype_, other->rawdatatype_);
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SubscribeParams::GetTypeName() const {
  return "com.electron.sdk.proto.SubscribeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribeParams

// optional uint32 userID = 1;
bool SubscribeParams::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubscribeParams::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void SubscribeParams::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubscribeParams::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 SubscribeParams::userid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.userID)
  return userid_;
}
void SubscribeParams::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.userID)
}

// optional int32 rawDataType = 2;
bool SubscribeParams::has_rawdatatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubscribeParams::set_has_rawdatatype() {
  _has_bits_[0] |= 0x00000002u;
}
void SubscribeParams::clear_has_rawdatatype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubscribeParams::clear_rawdatatype() {
  rawdatatype_ = 0;
  clear_has_rawdatatype();
}
::google::protobuf::int32 SubscribeParams::rawdatatype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.rawDataType)
  return rawdatatype_;
}
void SubscribeParams::set_rawdatatype(::google::protobuf::int32 value) {
  set_has_rawdatatype();
  rawdatatype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.rawDataType)
}

// optional uint64 recvHandle = 3;
bool SubscribeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SubscribeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000004u;
}
void SubscribeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000004u;
}
void SubscribeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 SubscribeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SubscribeParams.recvHandle)
  return recvhandle_;
}
void SubscribeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SubscribeParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnSubscribeParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnSubscribeParams::UnSubscribeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.UnSubscribeParams)
}
UnSubscribeParams::UnSubscribeParams(const UnSubscribeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.UnSubscribeParams)
}

void UnSubscribeParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

UnSubscribeParams::~UnSubscribeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.UnSubscribeParams)
  SharedDtor();
}

void UnSubscribeParams::SharedDtor() {
}

void UnSubscribeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UnSubscribeParams& UnSubscribeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnSubscribeParams* UnSubscribeParams::New(::google::protobuf::Arena* arena) const {
  UnSubscribeParams* n = new UnSubscribeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnSubscribeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.UnSubscribeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnSubscribeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.UnSubscribeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.UnSubscribeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.UnSubscribeParams)
  return false;
#undef DO_
}

void UnSubscribeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.UnSubscribeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.UnSubscribeParams)
}

size_t UnSubscribeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.UnSubscribeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnSubscribeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UnSubscribeParams*>(&from));
}

void UnSubscribeParams::MergeFrom(const UnSubscribeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.UnSubscribeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void UnSubscribeParams::CopyFrom(const UnSubscribeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.UnSubscribeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnSubscribeParams::IsInitialized() const {
  return true;
}

void UnSubscribeParams::Swap(UnSubscribeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnSubscribeParams::InternalSwap(UnSubscribeParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string UnSubscribeParams::GetTypeName() const {
  return "com.electron.sdk.proto.UnSubscribeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnSubscribeParams

// optional uint64 recvHandle = 1;
bool UnSubscribeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnSubscribeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void UnSubscribeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnSubscribeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 UnSubscribeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.UnSubscribeParams.recvHandle)
  return recvhandle_;
}
void UnSubscribeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.UnSubscribeParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRawDataResolutionParams::kResolutionFieldNumber;
const int SetRawDataResolutionParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRawDataResolutionParams::SetRawDataResolutionParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetRawDataResolutionParams)
}
SetRawDataResolutionParams::SetRawDataResolutionParams(const SetRawDataResolutionParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recvhandle_, &from.recvhandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&resolution_) -
    reinterpret_cast<char*>(&recvhandle_)) + sizeof(resolution_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetRawDataResolutionParams)
}

void SetRawDataResolutionParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&recvhandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resolution_) -
      reinterpret_cast<char*>(&recvhandle_)) + sizeof(resolution_));
}

SetRawDataResolutionParams::~SetRawDataResolutionParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetRawDataResolutionParams)
  SharedDtor();
}

void SetRawDataResolutionParams::SharedDtor() {
}

void SetRawDataResolutionParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetRawDataResolutionParams& SetRawDataResolutionParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetRawDataResolutionParams* SetRawDataResolutionParams::New(::google::protobuf::Arena* arena) const {
  SetRawDataResolutionParams* n = new SetRawDataResolutionParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetRawDataResolutionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&recvhandle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&resolution_) -
        reinterpret_cast<char*>(&recvhandle_)) + sizeof(resolution_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetRawDataResolutionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 resolution = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 recvHandle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetRawDataResolutionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetRawDataResolutionParams)
  return false;
#undef DO_
}

void SetRawDataResolutionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 resolution = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resolution(), output);
  }

  // optional uint64 recvHandle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetRawDataResolutionParams)
}

size_t SetRawDataResolutionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 recvHandle = 2;
    if (has_recvhandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->recvhandle());
    }

    // optional int32 resolution = 1;
    if (has_resolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resolution());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetRawDataResolutionParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetRawDataResolutionParams*>(&from));
}

void SetRawDataResolutionParams::MergeFrom(const SetRawDataResolutionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      recvhandle_ = from.recvhandle_;
    }
    if (cached_has_bits & 0x00000002u) {
      resolution_ = from.resolution_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetRawDataResolutionParams::CopyFrom(const SetRawDataResolutionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetRawDataResolutionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRawDataResolutionParams::IsInitialized() const {
  return true;
}

void SetRawDataResolutionParams::Swap(SetRawDataResolutionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRawDataResolutionParams::InternalSwap(SetRawDataResolutionParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(resolution_, other->resolution_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetRawDataResolutionParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetRawDataResolutionParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetRawDataResolutionParams

// optional int32 resolution = 1;
bool SetRawDataResolutionParams::has_resolution() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetRawDataResolutionParams::set_has_resolution() {
  _has_bits_[0] |= 0x00000002u;
}
void SetRawDataResolutionParams::clear_has_resolution() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetRawDataResolutionParams::clear_resolution() {
  resolution_ = 0;
  clear_has_resolution();
}
::google::protobuf::int32 SetRawDataResolutionParams::resolution() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRawDataResolutionParams.resolution)
  return resolution_;
}
void SetRawDataResolutionParams::set_resolution(::google::protobuf::int32 value) {
  set_has_resolution();
  resolution_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRawDataResolutionParams.resolution)
}

// optional uint64 recvHandle = 2;
bool SetRawDataResolutionParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetRawDataResolutionParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void SetRawDataResolutionParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetRawDataResolutionParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 SetRawDataResolutionParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRawDataResolutionParams.recvHandle)
  return recvhandle_;
}
void SetRawDataResolutionParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRawDataResolutionParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResolutionParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResolutionParams::GetResolutionParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.GetResolutionParams)
}
GetResolutionParams::GetResolutionParams(const GetResolutionParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.GetResolutionParams)
}

void GetResolutionParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

GetResolutionParams::~GetResolutionParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.GetResolutionParams)
  SharedDtor();
}

void GetResolutionParams::SharedDtor() {
}

void GetResolutionParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetResolutionParams& GetResolutionParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetResolutionParams* GetResolutionParams::New(::google::protobuf::Arena* arena) const {
  GetResolutionParams* n = new GetResolutionParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResolutionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.GetResolutionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetResolutionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.GetResolutionParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.GetResolutionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.GetResolutionParams)
  return false;
#undef DO_
}

void GetResolutionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.GetResolutionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.GetResolutionParams)
}

size_t GetResolutionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.GetResolutionParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResolutionParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetResolutionParams*>(&from));
}

void GetResolutionParams::MergeFrom(const GetResolutionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.GetResolutionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void GetResolutionParams::CopyFrom(const GetResolutionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.GetResolutionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResolutionParams::IsInitialized() const {
  return true;
}

void GetResolutionParams::Swap(GetResolutionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResolutionParams::InternalSwap(GetResolutionParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GetResolutionParams::GetTypeName() const {
  return "com.electron.sdk.proto.GetResolutionParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResolutionParams

// optional uint64 recvHandle = 1;
bool GetResolutionParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetResolutionParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void GetResolutionParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetResolutionParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 GetResolutionParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetResolutionParams.recvHandle)
  return recvhandle_;
}
void GetResolutionParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetResolutionParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRawDataTypeParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRawDataTypeParams::GetRawDataTypeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.GetRawDataTypeParams)
}
GetRawDataTypeParams::GetRawDataTypeParams(const GetRawDataTypeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.GetRawDataTypeParams)
}

void GetRawDataTypeParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

GetRawDataTypeParams::~GetRawDataTypeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.GetRawDataTypeParams)
  SharedDtor();
}

void GetRawDataTypeParams::SharedDtor() {
}

void GetRawDataTypeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetRawDataTypeParams& GetRawDataTypeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRawDataTypeParams* GetRawDataTypeParams::New(::google::protobuf::Arena* arena) const {
  GetRawDataTypeParams* n = new GetRawDataTypeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRawDataTypeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.GetRawDataTypeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRawDataTypeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.GetRawDataTypeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.GetRawDataTypeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.GetRawDataTypeParams)
  return false;
#undef DO_
}

void GetRawDataTypeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.GetRawDataTypeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.GetRawDataTypeParams)
}

size_t GetRawDataTypeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.GetRawDataTypeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRawDataTypeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetRawDataTypeParams*>(&from));
}

void GetRawDataTypeParams::MergeFrom(const GetRawDataTypeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.GetRawDataTypeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void GetRawDataTypeParams::CopyFrom(const GetRawDataTypeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.GetRawDataTypeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRawDataTypeParams::IsInitialized() const {
  return true;
}

void GetRawDataTypeParams::Swap(GetRawDataTypeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRawDataTypeParams::InternalSwap(GetRawDataTypeParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GetRawDataTypeParams::GetTypeName() const {
  return "com.electron.sdk.proto.GetRawDataTypeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRawDataTypeParams

// optional uint64 recvHandle = 1;
bool GetRawDataTypeParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRawDataTypeParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRawDataTypeParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRawDataTypeParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 GetRawDataTypeParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetRawDataTypeParams.recvHandle)
  return recvhandle_;
}
void GetRawDataTypeParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetRawDataTypeParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserIdParams::kRecvHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserIdParams::GetUserIdParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.GetUserIdParams)
}
GetUserIdParams::GetUserIdParams(const GetUserIdParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvhandle_ = from.recvhandle_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.GetUserIdParams)
}

void GetUserIdParams::SharedCtor() {
  _cached_size_ = 0;
  recvhandle_ = GOOGLE_ULONGLONG(0);
}

GetUserIdParams::~GetUserIdParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.GetUserIdParams)
  SharedDtor();
}

void GetUserIdParams::SharedDtor() {
}

void GetUserIdParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetUserIdParams& GetUserIdParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserIdParams* GetUserIdParams::New(::google::protobuf::Arena* arena) const {
  GetUserIdParams* n = new GetUserIdParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserIdParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.GetUserIdParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvhandle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserIdParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.GetUserIdParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 recvHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recvhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.GetUserIdParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.GetUserIdParams)
  return false;
#undef DO_
}

void GetUserIdParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.GetUserIdParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 recvHandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->recvhandle(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.GetUserIdParams)
}

size_t GetUserIdParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.GetUserIdParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 recvHandle = 1;
  if (has_recvhandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvhandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserIdParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GetUserIdParams*>(&from));
}

void GetUserIdParams::MergeFrom(const GetUserIdParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.GetUserIdParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recvhandle()) {
    set_recvhandle(from.recvhandle());
  }
}

void GetUserIdParams::CopyFrom(const GetUserIdParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.GetUserIdParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserIdParams::IsInitialized() const {
  return true;
}

void GetUserIdParams::Swap(GetUserIdParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserIdParams::InternalSwap(GetUserIdParams* other) {
  using std::swap;
  swap(recvhandle_, other->recvhandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GetUserIdParams::GetTypeName() const {
  return "com.electron.sdk.proto.GetUserIdParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserIdParams

// optional uint64 recvHandle = 1;
bool GetUserIdParams::has_recvhandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetUserIdParams::set_has_recvhandle() {
  _has_bits_[0] |= 0x00000001u;
}
void GetUserIdParams::clear_has_recvhandle() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetUserIdParams::clear_recvhandle() {
  recvhandle_ = GOOGLE_ULONGLONG(0);
  clear_has_recvhandle();
}
::google::protobuf::uint64 GetUserIdParams::recvhandle() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.GetUserIdParams.recvHandle)
  return recvhandle_;
}
void GetUserIdParams::set_recvhandle(::google::protobuf::uint64 value) {
  set_has_recvhandle();
  recvhandle_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.GetUserIdParams.recvHandle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableZoomAuthRealNameMeetingUIShownParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableZoomAuthRealNameMeetingUIShownParams::EnableZoomAuthRealNameMeetingUIShownParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
}
EnableZoomAuthRealNameMeetingUIShownParams::EnableZoomAuthRealNameMeetingUIShownParams(const EnableZoomAuthRealNameMeetingUIShownParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
}

void EnableZoomAuthRealNameMeetingUIShownParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableZoomAuthRealNameMeetingUIShownParams::~EnableZoomAuthRealNameMeetingUIShownParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  SharedDtor();
}

void EnableZoomAuthRealNameMeetingUIShownParams::SharedDtor() {
}

void EnableZoomAuthRealNameMeetingUIShownParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableZoomAuthRealNameMeetingUIShownParams& EnableZoomAuthRealNameMeetingUIShownParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableZoomAuthRealNameMeetingUIShownParams* EnableZoomAuthRealNameMeetingUIShownParams::New(::google::protobuf::Arena* arena) const {
  EnableZoomAuthRealNameMeetingUIShownParams* n = new EnableZoomAuthRealNameMeetingUIShownParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableZoomAuthRealNameMeetingUIShownParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableZoomAuthRealNameMeetingUIShownParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  return false;
#undef DO_
}

void EnableZoomAuthRealNameMeetingUIShownParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
}

size_t EnableZoomAuthRealNameMeetingUIShownParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableZoomAuthRealNameMeetingUIShownParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableZoomAuthRealNameMeetingUIShownParams*>(&from));
}

void EnableZoomAuthRealNameMeetingUIShownParams::MergeFrom(const EnableZoomAuthRealNameMeetingUIShownParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableZoomAuthRealNameMeetingUIShownParams::CopyFrom(const EnableZoomAuthRealNameMeetingUIShownParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableZoomAuthRealNameMeetingUIShownParams::IsInitialized() const {
  return true;
}

void EnableZoomAuthRealNameMeetingUIShownParams::Swap(EnableZoomAuthRealNameMeetingUIShownParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableZoomAuthRealNameMeetingUIShownParams::InternalSwap(EnableZoomAuthRealNameMeetingUIShownParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableZoomAuthRealNameMeetingUIShownParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableZoomAuthRealNameMeetingUIShownParams

// optional bool bEnable = 1;
bool EnableZoomAuthRealNameMeetingUIShownParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableZoomAuthRealNameMeetingUIShownParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableZoomAuthRealNameMeetingUIShownParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableZoomAuthRealNameMeetingUIShownParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableZoomAuthRealNameMeetingUIShownParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams.bEnable)
  return benable_;
}
void EnableZoomAuthRealNameMeetingUIShownParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableZoomAuthRealNameMeetingUIShownParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrieveParams::kCountryCodeFieldNumber;
const int RetrieveParams::kPhoneNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrieveParams::RetrieveParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.RetrieveParams)
}
RetrieveParams::RetrieveParams(const RetrieveParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_countrycode()) {
    countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.RetrieveParams)
}

void RetrieveParams::SharedCtor() {
  _cached_size_ = 0;
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RetrieveParams::~RetrieveParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.RetrieveParams)
  SharedDtor();
}

void RetrieveParams::SharedDtor() {
  countrycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RetrieveParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RetrieveParams& RetrieveParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

RetrieveParams* RetrieveParams::New(::google::protobuf::Arena* arena) const {
  RetrieveParams* n = new RetrieveParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrieveParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.RetrieveParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!countrycode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*countrycode_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!phonenum_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phonenum_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RetrieveParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.RetrieveParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string countryCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countrycode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phoneNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.RetrieveParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.RetrieveParams)
  return false;
#undef DO_
}

void RetrieveParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.RetrieveParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string countryCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->countrycode(), output);
  }

  // optional string phoneNum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenum(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.RetrieveParams)
}

size_t RetrieveParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.RetrieveParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string countryCode = 1;
    if (has_countrycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countrycode());
    }

    // optional string phoneNum = 2;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrieveParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RetrieveParams*>(&from));
}

void RetrieveParams::MergeFrom(const RetrieveParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.RetrieveParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_countrycode();
      countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
  }
}

void RetrieveParams::CopyFrom(const RetrieveParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.RetrieveParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrieveParams::IsInitialized() const {
  return true;
}

void RetrieveParams::Swap(RetrieveParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrieveParams::InternalSwap(RetrieveParams* other) {
  using std::swap;
  countrycode_.Swap(&other->countrycode_);
  phonenum_.Swap(&other->phonenum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RetrieveParams::GetTypeName() const {
  return "com.electron.sdk.proto.RetrieveParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrieveParams

// optional string countryCode = 1;
bool RetrieveParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RetrieveParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
void RetrieveParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
void RetrieveParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
const ::std::string& RetrieveParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RetrieveParams.countryCode)
  return countrycode_.GetNoArena();
}
void RetrieveParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RetrieveParams.countryCode)
}
#if LANG_CXX11
void RetrieveParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.RetrieveParams.countryCode)
}
#endif
void RetrieveParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.RetrieveParams.countryCode)
}
void RetrieveParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.RetrieveParams.countryCode)
}
::std::string* RetrieveParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.RetrieveParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrieveParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.RetrieveParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrieveParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.RetrieveParams.countryCode)
}

// optional string phoneNum = 2;
bool RetrieveParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RetrieveParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
void RetrieveParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
void RetrieveParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
const ::std::string& RetrieveParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.RetrieveParams.phoneNum)
  return phonenum_.GetNoArena();
}
void RetrieveParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
#if LANG_CXX11
void RetrieveParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
#endif
void RetrieveParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
void RetrieveParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.RetrieveParams.phoneNum)
}
::std::string* RetrieveParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.RetrieveParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrieveParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.RetrieveParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrieveParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.RetrieveParams.phoneNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyParams::kCountryCodeFieldNumber;
const int VerifyParams::kPhoneNumFieldNumber;
const int VerifyParams::kVerificationCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyParams::VerifyParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.VerifyParams)
}
VerifyParams::VerifyParams(const VerifyParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_countrycode()) {
    countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  verificationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verificationcode()) {
    verificationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verificationcode_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.VerifyParams)
}

void VerifyParams::SharedCtor() {
  _cached_size_ = 0;
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verificationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyParams::~VerifyParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.VerifyParams)
  SharedDtor();
}

void VerifyParams::SharedDtor() {
  countrycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verificationcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VerifyParams& VerifyParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyParams* VerifyParams::New(::google::protobuf::Arena* arena) const {
  VerifyParams* n = new VerifyParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.VerifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!countrycode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*countrycode_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!phonenum_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phonenum_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!verificationcode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verificationcode_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.VerifyParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string countryCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countrycode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phoneNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string verificationCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verificationcode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.VerifyParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.VerifyParams)
  return false;
#undef DO_
}

void VerifyParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.VerifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string countryCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->countrycode(), output);
  }

  // optional string phoneNum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenum(), output);
  }

  // optional string verificationCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verificationcode(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.VerifyParams)
}

size_t VerifyParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.VerifyParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 7u) {
    // optional string countryCode = 1;
    if (has_countrycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countrycode());
    }

    // optional string phoneNum = 2;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string verificationCode = 3;
    if (has_verificationcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verificationcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VerifyParams*>(&from));
}

void VerifyParams::MergeFrom(const VerifyParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.VerifyParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_countrycode();
      countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_verificationcode();
      verificationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verificationcode_);
    }
  }
}

void VerifyParams::CopyFrom(const VerifyParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.VerifyParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyParams::IsInitialized() const {
  return true;
}

void VerifyParams::Swap(VerifyParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyParams::InternalSwap(VerifyParams* other) {
  using std::swap;
  countrycode_.Swap(&other->countrycode_);
  phonenum_.Swap(&other->phonenum_);
  verificationcode_.Swap(&other->verificationcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VerifyParams::GetTypeName() const {
  return "com.electron.sdk.proto.VerifyParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyParams

// optional string countryCode = 1;
bool VerifyParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
const ::std::string& VerifyParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.countryCode)
  return countrycode_.GetNoArena();
}
void VerifyParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.countryCode)
}
#if LANG_CXX11
void VerifyParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.countryCode)
}
#endif
void VerifyParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.countryCode)
}
void VerifyParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.countryCode)
}
::std::string* VerifyParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.countryCode)
}

// optional string phoneNum = 2;
bool VerifyParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
const ::std::string& VerifyParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.phoneNum)
  return phonenum_.GetNoArena();
}
void VerifyParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.phoneNum)
}
#if LANG_CXX11
void VerifyParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.phoneNum)
}
#endif
void VerifyParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.phoneNum)
}
void VerifyParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.phoneNum)
}
::std::string* VerifyParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.phoneNum)
}

// optional string verificationCode = 3;
bool VerifyParams::has_verificationcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyParams::set_has_verificationcode() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyParams::clear_has_verificationcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyParams::clear_verificationcode() {
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verificationcode();
}
const ::std::string& VerifyParams::verificationcode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.VerifyParams.verificationCode)
  return verificationcode_.GetNoArena();
}
void VerifyParams::set_verificationcode(const ::std::string& value) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.VerifyParams.verificationCode)
}
#if LANG_CXX11
void VerifyParams::set_verificationcode(::std::string&& value) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.VerifyParams.verificationCode)
}
#endif
void VerifyParams::set_verificationcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.VerifyParams.verificationCode)
}
void VerifyParams::set_verificationcode(const char* value, size_t size) {
  set_has_verificationcode();
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.VerifyParams.verificationCode)
}
::std::string* VerifyParams::mutable_verificationcode() {
  set_has_verificationcode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.VerifyParams.verificationCode)
  return verificationcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyParams::release_verificationcode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.VerifyParams.verificationCode)
  clear_has_verificationcode();
  return verificationcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyParams::set_allocated_verificationcode(::std::string* verificationcode) {
  if (verificationcode != NULL) {
    set_has_verificationcode();
  } else {
    clear_has_verificationcode();
  }
  verificationcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verificationcode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.VerifyParams.verificationCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDefaultCellPhoneInfoParams::kCountryCodeFieldNumber;
const int SetDefaultCellPhoneInfoParams::kPhoneNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDefaultCellPhoneInfoParams::SetDefaultCellPhoneInfoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
}
SetDefaultCellPhoneInfoParams::SetDefaultCellPhoneInfoParams(const SetDefaultCellPhoneInfoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_countrycode()) {
    countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
}

void SetDefaultCellPhoneInfoParams::SharedCtor() {
  _cached_size_ = 0;
  countrycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetDefaultCellPhoneInfoParams::~SetDefaultCellPhoneInfoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  SharedDtor();
}

void SetDefaultCellPhoneInfoParams::SharedDtor() {
  countrycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetDefaultCellPhoneInfoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetDefaultCellPhoneInfoParams& SetDefaultCellPhoneInfoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDefaultCellPhoneInfoParams* SetDefaultCellPhoneInfoParams::New(::google::protobuf::Arena* arena) const {
  SetDefaultCellPhoneInfoParams* n = new SetDefaultCellPhoneInfoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDefaultCellPhoneInfoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!countrycode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*countrycode_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!phonenum_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phonenum_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetDefaultCellPhoneInfoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string countryCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countrycode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phoneNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  return false;
#undef DO_
}

void SetDefaultCellPhoneInfoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string countryCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->countrycode(), output);
  }

  // optional string phoneNum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenum(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
}

size_t SetDefaultCellPhoneInfoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string countryCode = 1;
    if (has_countrycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countrycode());
    }

    // optional string phoneNum = 2;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDefaultCellPhoneInfoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetDefaultCellPhoneInfoParams*>(&from));
}

void SetDefaultCellPhoneInfoParams::MergeFrom(const SetDefaultCellPhoneInfoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_countrycode();
      countrycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countrycode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
  }
}

void SetDefaultCellPhoneInfoParams::CopyFrom(const SetDefaultCellPhoneInfoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDefaultCellPhoneInfoParams::IsInitialized() const {
  return true;
}

void SetDefaultCellPhoneInfoParams::Swap(SetDefaultCellPhoneInfoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDefaultCellPhoneInfoParams::InternalSwap(SetDefaultCellPhoneInfoParams* other) {
  using std::swap;
  countrycode_.Swap(&other->countrycode_);
  phonenum_.Swap(&other->phonenum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetDefaultCellPhoneInfoParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetDefaultCellPhoneInfoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDefaultCellPhoneInfoParams

// optional string countryCode = 1;
bool SetDefaultCellPhoneInfoParams::has_countrycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetDefaultCellPhoneInfoParams::set_has_countrycode() {
  _has_bits_[0] |= 0x00000001u;
}
void SetDefaultCellPhoneInfoParams::clear_has_countrycode() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetDefaultCellPhoneInfoParams::clear_countrycode() {
  countrycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_countrycode();
}
const ::std::string& SetDefaultCellPhoneInfoParams::countrycode() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  return countrycode_.GetNoArena();
}
void SetDefaultCellPhoneInfoParams::set_countrycode(const ::std::string& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
#if LANG_CXX11
void SetDefaultCellPhoneInfoParams::set_countrycode(::std::string&& value) {
  set_has_countrycode();
  countrycode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
#endif
void SetDefaultCellPhoneInfoParams::set_countrycode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
void SetDefaultCellPhoneInfoParams::set_countrycode(const char* value, size_t size) {
  set_has_countrycode();
  countrycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}
::std::string* SetDefaultCellPhoneInfoParams::mutable_countrycode() {
  set_has_countrycode();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  return countrycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDefaultCellPhoneInfoParams::release_countrycode() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
  clear_has_countrycode();
  return countrycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDefaultCellPhoneInfoParams::set_allocated_countrycode(::std::string* countrycode) {
  if (countrycode != NULL) {
    set_has_countrycode();
  } else {
    clear_has_countrycode();
  }
  countrycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countrycode);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.countryCode)
}

// optional string phoneNum = 2;
bool SetDefaultCellPhoneInfoParams::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetDefaultCellPhoneInfoParams::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
void SetDefaultCellPhoneInfoParams::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetDefaultCellPhoneInfoParams::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
const ::std::string& SetDefaultCellPhoneInfoParams::phonenum() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  return phonenum_.GetNoArena();
}
void SetDefaultCellPhoneInfoParams::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
#if LANG_CXX11
void SetDefaultCellPhoneInfoParams::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
#endif
void SetDefaultCellPhoneInfoParams::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
void SetDefaultCellPhoneInfoParams::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}
::std::string* SetDefaultCellPhoneInfoParams::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDefaultCellPhoneInfoParams::release_phonenum() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
  clear_has_phonenum();
  return phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDefaultCellPhoneInfoParams::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetDefaultCellPhoneInfoParams.phoneNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAlwaysShowMeetingControlsParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAlwaysShowMeetingControlsParams::EnableAlwaysShowMeetingControlsParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
}
EnableAlwaysShowMeetingControlsParams::EnableAlwaysShowMeetingControlsParams(const EnableAlwaysShowMeetingControlsParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
}

void EnableAlwaysShowMeetingControlsParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAlwaysShowMeetingControlsParams::~EnableAlwaysShowMeetingControlsParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  SharedDtor();
}

void EnableAlwaysShowMeetingControlsParams::SharedDtor() {
}

void EnableAlwaysShowMeetingControlsParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAlwaysShowMeetingControlsParams& EnableAlwaysShowMeetingControlsParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAlwaysShowMeetingControlsParams* EnableAlwaysShowMeetingControlsParams::New(::google::protobuf::Arena* arena) const {
  EnableAlwaysShowMeetingControlsParams* n = new EnableAlwaysShowMeetingControlsParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAlwaysShowMeetingControlsParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAlwaysShowMeetingControlsParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  return false;
#undef DO_
}

void EnableAlwaysShowMeetingControlsParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
}

size_t EnableAlwaysShowMeetingControlsParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAlwaysShowMeetingControlsParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAlwaysShowMeetingControlsParams*>(&from));
}

void EnableAlwaysShowMeetingControlsParams::MergeFrom(const EnableAlwaysShowMeetingControlsParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAlwaysShowMeetingControlsParams::CopyFrom(const EnableAlwaysShowMeetingControlsParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAlwaysShowMeetingControlsParams::IsInitialized() const {
  return true;
}

void EnableAlwaysShowMeetingControlsParams::Swap(EnableAlwaysShowMeetingControlsParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAlwaysShowMeetingControlsParams::InternalSwap(EnableAlwaysShowMeetingControlsParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAlwaysShowMeetingControlsParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAlwaysShowMeetingControlsParams

// optional bool bEnable = 1;
bool EnableAlwaysShowMeetingControlsParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAlwaysShowMeetingControlsParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAlwaysShowMeetingControlsParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAlwaysShowMeetingControlsParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAlwaysShowMeetingControlsParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams.bEnable)
  return benable_;
}
void EnableAlwaysShowMeetingControlsParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysShowMeetingControlsParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectMicParams::kDeviceIDFieldNumber;
const int SelectMicParams::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectMicParams::SelectMicParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SelectMicParams)
}
SelectMicParams::SelectMicParams(const SelectMicParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceid()) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devicename()) {
    devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SelectMicParams)
}

void SelectMicParams::SharedCtor() {
  _cached_size_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SelectMicParams::~SelectMicParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SelectMicParams)
  SharedDtor();
}

void SelectMicParams::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectMicParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SelectMicParams& SelectMicParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectMicParams* SelectMicParams::New(::google::protobuf::Arena* arena) const {
  SelectMicParams* n = new SelectMicParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectMicParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SelectMicParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!deviceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deviceid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!devicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devicename_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectMicParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SelectMicParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deviceName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SelectMicParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SelectMicParams)
  return false;
#undef DO_
}

void SelectMicParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SelectMicParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string deviceID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // optional string deviceName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devicename(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SelectMicParams)
}

size_t SelectMicParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SelectMicParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string deviceID = 1;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceid());
    }

    // optional string deviceName = 2;
    if (has_devicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicename());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectMicParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SelectMicParams*>(&from));
}

void SelectMicParams::MergeFrom(const SelectMicParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SelectMicParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deviceid();
      deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_devicename();
      devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
    }
  }
}

void SelectMicParams::CopyFrom(const SelectMicParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SelectMicParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectMicParams::IsInitialized() const {
  return true;
}

void SelectMicParams::Swap(SelectMicParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectMicParams::InternalSwap(SelectMicParams* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  devicename_.Swap(&other->devicename_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SelectMicParams::GetTypeName() const {
  return "com.electron.sdk.proto.SelectMicParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectMicParams

// optional string deviceID = 1;
bool SelectMicParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectMicParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectMicParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectMicParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
const ::std::string& SelectMicParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectMicParams.deviceID)
  return deviceid_.GetNoArena();
}
void SelectMicParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectMicParams.deviceID)
}
#if LANG_CXX11
void SelectMicParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectMicParams.deviceID)
}
#endif
void SelectMicParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectMicParams.deviceID)
}
void SelectMicParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectMicParams.deviceID)
}
::std::string* SelectMicParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectMicParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectMicParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectMicParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectMicParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectMicParams.deviceID)
}

// optional string deviceName = 2;
bool SelectMicParams::has_devicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SelectMicParams::set_has_devicename() {
  _has_bits_[0] |= 0x00000002u;
}
void SelectMicParams::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000002u;
}
void SelectMicParams::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
const ::std::string& SelectMicParams::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectMicParams.deviceName)
  return devicename_.GetNoArena();
}
void SelectMicParams::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectMicParams.deviceName)
}
#if LANG_CXX11
void SelectMicParams::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectMicParams.deviceName)
}
#endif
void SelectMicParams::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectMicParams.deviceName)
}
void SelectMicParams::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectMicParams.deviceName)
}
::std::string* SelectMicParams::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectMicParams.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectMicParams::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectMicParams.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectMicParams::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectMicParams.deviceName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectSpeakerParams::kDeviceIDFieldNumber;
const int SelectSpeakerParams::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectSpeakerParams::SelectSpeakerParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SelectSpeakerParams)
}
SelectSpeakerParams::SelectSpeakerParams(const SelectSpeakerParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceid()) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devicename()) {
    devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SelectSpeakerParams)
}

void SelectSpeakerParams::SharedCtor() {
  _cached_size_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SelectSpeakerParams::~SelectSpeakerParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SelectSpeakerParams)
  SharedDtor();
}

void SelectSpeakerParams::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectSpeakerParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SelectSpeakerParams& SelectSpeakerParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectSpeakerParams* SelectSpeakerParams::New(::google::protobuf::Arena* arena) const {
  SelectSpeakerParams* n = new SelectSpeakerParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectSpeakerParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SelectSpeakerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!deviceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deviceid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!devicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devicename_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectSpeakerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SelectSpeakerParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deviceName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SelectSpeakerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SelectSpeakerParams)
  return false;
#undef DO_
}

void SelectSpeakerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SelectSpeakerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string deviceID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // optional string deviceName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devicename(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SelectSpeakerParams)
}

size_t SelectSpeakerParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SelectSpeakerParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string deviceID = 1;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceid());
    }

    // optional string deviceName = 2;
    if (has_devicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicename());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectSpeakerParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SelectSpeakerParams*>(&from));
}

void SelectSpeakerParams::MergeFrom(const SelectSpeakerParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SelectSpeakerParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deviceid();
      deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_devicename();
      devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
    }
  }
}

void SelectSpeakerParams::CopyFrom(const SelectSpeakerParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SelectSpeakerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectSpeakerParams::IsInitialized() const {
  return true;
}

void SelectSpeakerParams::Swap(SelectSpeakerParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectSpeakerParams::InternalSwap(SelectSpeakerParams* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  devicename_.Swap(&other->devicename_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SelectSpeakerParams::GetTypeName() const {
  return "com.electron.sdk.proto.SelectSpeakerParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectSpeakerParams

// optional string deviceID = 1;
bool SelectSpeakerParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectSpeakerParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectSpeakerParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectSpeakerParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
const ::std::string& SelectSpeakerParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  return deviceid_.GetNoArena();
}
void SelectSpeakerParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
#if LANG_CXX11
void SelectSpeakerParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
#endif
void SelectSpeakerParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
void SelectSpeakerParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}
::std::string* SelectSpeakerParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectSpeakerParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectSpeakerParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectSpeakerParams.deviceID)
}

// optional string deviceName = 2;
bool SelectSpeakerParams::has_devicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SelectSpeakerParams::set_has_devicename() {
  _has_bits_[0] |= 0x00000002u;
}
void SelectSpeakerParams::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000002u;
}
void SelectSpeakerParams::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
const ::std::string& SelectSpeakerParams::devicename() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  return devicename_.GetNoArena();
}
void SelectSpeakerParams::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
#if LANG_CXX11
void SelectSpeakerParams::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
#endif
void SelectSpeakerParams::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
void SelectSpeakerParams::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}
::std::string* SelectSpeakerParams::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectSpeakerParams::release_devicename() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectSpeakerParams::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectSpeakerParams.deviceName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoJoinAudioParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoJoinAudioParams::EnableAutoJoinAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoJoinAudioParams)
}
EnableAutoJoinAudioParams::EnableAutoJoinAudioParams(const EnableAutoJoinAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoJoinAudioParams)
}

void EnableAutoJoinAudioParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoJoinAudioParams::~EnableAutoJoinAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  SharedDtor();
}

void EnableAutoJoinAudioParams::SharedDtor() {
}

void EnableAutoJoinAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoJoinAudioParams& EnableAutoJoinAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoJoinAudioParams* EnableAutoJoinAudioParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoJoinAudioParams* n = new EnableAutoJoinAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoJoinAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoJoinAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  return false;
#undef DO_
}

void EnableAutoJoinAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoJoinAudioParams)
}

size_t EnableAutoJoinAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoJoinAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoJoinAudioParams*>(&from));
}

void EnableAutoJoinAudioParams::MergeFrom(const EnableAutoJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoJoinAudioParams::CopyFrom(const EnableAutoJoinAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoJoinAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoJoinAudioParams::IsInitialized() const {
  return true;
}

void EnableAutoJoinAudioParams::Swap(EnableAutoJoinAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoJoinAudioParams::InternalSwap(EnableAutoJoinAudioParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoJoinAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoJoinAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoJoinAudioParams

// optional bool bEnable = 1;
bool EnableAutoJoinAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoJoinAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoJoinAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoJoinAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoJoinAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoJoinAudioParams.bEnable)
  return benable_;
}
void EnableAutoJoinAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoJoinAudioParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoAdjustMicParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoAdjustMicParams::EnableAutoAdjustMicParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoAdjustMicParams)
}
EnableAutoAdjustMicParams::EnableAutoAdjustMicParams(const EnableAutoAdjustMicParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoAdjustMicParams)
}

void EnableAutoAdjustMicParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoAdjustMicParams::~EnableAutoAdjustMicParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  SharedDtor();
}

void EnableAutoAdjustMicParams::SharedDtor() {
}

void EnableAutoAdjustMicParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoAdjustMicParams& EnableAutoAdjustMicParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoAdjustMicParams* EnableAutoAdjustMicParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoAdjustMicParams* n = new EnableAutoAdjustMicParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoAdjustMicParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoAdjustMicParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  return false;
#undef DO_
}

void EnableAutoAdjustMicParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoAdjustMicParams)
}

size_t EnableAutoAdjustMicParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoAdjustMicParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoAdjustMicParams*>(&from));
}

void EnableAutoAdjustMicParams::MergeFrom(const EnableAutoAdjustMicParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoAdjustMicParams::CopyFrom(const EnableAutoAdjustMicParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoAdjustMicParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoAdjustMicParams::IsInitialized() const {
  return true;
}

void EnableAutoAdjustMicParams::Swap(EnableAutoAdjustMicParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoAdjustMicParams::InternalSwap(EnableAutoAdjustMicParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoAdjustMicParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoAdjustMicParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoAdjustMicParams

// optional bool bEnable = 1;
bool EnableAutoAdjustMicParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoAdjustMicParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoAdjustMicParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoAdjustMicParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoAdjustMicParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoAdjustMicParams.bEnable)
  return benable_;
}
void EnableAutoAdjustMicParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoAdjustMicParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableStereoAudioParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableStereoAudioParams::EnableStereoAudioParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableStereoAudioParams)
}
EnableStereoAudioParams::EnableStereoAudioParams(const EnableStereoAudioParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableStereoAudioParams)
}

void EnableStereoAudioParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableStereoAudioParams::~EnableStereoAudioParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableStereoAudioParams)
  SharedDtor();
}

void EnableStereoAudioParams::SharedDtor() {
}

void EnableStereoAudioParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableStereoAudioParams& EnableStereoAudioParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableStereoAudioParams* EnableStereoAudioParams::New(::google::protobuf::Arena* arena) const {
  EnableStereoAudioParams* n = new EnableStereoAudioParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableStereoAudioParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableStereoAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableStereoAudioParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableStereoAudioParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableStereoAudioParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableStereoAudioParams)
  return false;
#undef DO_
}

void EnableStereoAudioParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableStereoAudioParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableStereoAudioParams)
}

size_t EnableStereoAudioParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableStereoAudioParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableStereoAudioParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableStereoAudioParams*>(&from));
}

void EnableStereoAudioParams::MergeFrom(const EnableStereoAudioParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableStereoAudioParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableStereoAudioParams::CopyFrom(const EnableStereoAudioParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableStereoAudioParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableStereoAudioParams::IsInitialized() const {
  return true;
}

void EnableStereoAudioParams::Swap(EnableStereoAudioParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableStereoAudioParams::InternalSwap(EnableStereoAudioParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableStereoAudioParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableStereoAudioParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableStereoAudioParams

// optional bool bEnable = 1;
bool EnableStereoAudioParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableStereoAudioParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableStereoAudioParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableStereoAudioParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableStereoAudioParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableStereoAudioParams.bEnable)
  return benable_;
}
void EnableStereoAudioParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableStereoAudioParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableMicOriginalInputParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableMicOriginalInputParams::EnableMicOriginalInputParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableMicOriginalInputParams)
}
EnableMicOriginalInputParams::EnableMicOriginalInputParams(const EnableMicOriginalInputParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableMicOriginalInputParams)
}

void EnableMicOriginalInputParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableMicOriginalInputParams::~EnableMicOriginalInputParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableMicOriginalInputParams)
  SharedDtor();
}

void EnableMicOriginalInputParams::SharedDtor() {
}

void EnableMicOriginalInputParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableMicOriginalInputParams& EnableMicOriginalInputParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableMicOriginalInputParams* EnableMicOriginalInputParams::New(::google::protobuf::Arena* arena) const {
  EnableMicOriginalInputParams* n = new EnableMicOriginalInputParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableMicOriginalInputParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableMicOriginalInputParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableMicOriginalInputParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableMicOriginalInputParams)
  return false;
#undef DO_
}

void EnableMicOriginalInputParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableMicOriginalInputParams)
}

size_t EnableMicOriginalInputParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableMicOriginalInputParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableMicOriginalInputParams*>(&from));
}

void EnableMicOriginalInputParams::MergeFrom(const EnableMicOriginalInputParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableMicOriginalInputParams::CopyFrom(const EnableMicOriginalInputParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableMicOriginalInputParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableMicOriginalInputParams::IsInitialized() const {
  return true;
}

void EnableMicOriginalInputParams::Swap(EnableMicOriginalInputParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableMicOriginalInputParams::InternalSwap(EnableMicOriginalInputParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableMicOriginalInputParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableMicOriginalInputParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableMicOriginalInputParams

// optional bool bEnable = 1;
bool EnableMicOriginalInputParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableMicOriginalInputParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableMicOriginalInputParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableMicOriginalInputParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableMicOriginalInputParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableMicOriginalInputParams.bEnable)
  return benable_;
}
void EnableMicOriginalInputParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableMicOriginalInputParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableHoldSpaceKeyToSpeakParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableHoldSpaceKeyToSpeakParams::EnableHoldSpaceKeyToSpeakParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
}
EnableHoldSpaceKeyToSpeakParams::EnableHoldSpaceKeyToSpeakParams(const EnableHoldSpaceKeyToSpeakParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
}

void EnableHoldSpaceKeyToSpeakParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableHoldSpaceKeyToSpeakParams::~EnableHoldSpaceKeyToSpeakParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  SharedDtor();
}

void EnableHoldSpaceKeyToSpeakParams::SharedDtor() {
}

void EnableHoldSpaceKeyToSpeakParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableHoldSpaceKeyToSpeakParams& EnableHoldSpaceKeyToSpeakParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableHoldSpaceKeyToSpeakParams* EnableHoldSpaceKeyToSpeakParams::New(::google::protobuf::Arena* arena) const {
  EnableHoldSpaceKeyToSpeakParams* n = new EnableHoldSpaceKeyToSpeakParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableHoldSpaceKeyToSpeakParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableHoldSpaceKeyToSpeakParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  return false;
#undef DO_
}

void EnableHoldSpaceKeyToSpeakParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
}

size_t EnableHoldSpaceKeyToSpeakParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableHoldSpaceKeyToSpeakParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableHoldSpaceKeyToSpeakParams*>(&from));
}

void EnableHoldSpaceKeyToSpeakParams::MergeFrom(const EnableHoldSpaceKeyToSpeakParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableHoldSpaceKeyToSpeakParams::CopyFrom(const EnableHoldSpaceKeyToSpeakParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableHoldSpaceKeyToSpeakParams::IsInitialized() const {
  return true;
}

void EnableHoldSpaceKeyToSpeakParams::Swap(EnableHoldSpaceKeyToSpeakParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableHoldSpaceKeyToSpeakParams::InternalSwap(EnableHoldSpaceKeyToSpeakParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableHoldSpaceKeyToSpeakParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableHoldSpaceKeyToSpeakParams

// optional bool bEnable = 1;
bool EnableHoldSpaceKeyToSpeakParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableHoldSpaceKeyToSpeakParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableHoldSpaceKeyToSpeakParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableHoldSpaceKeyToSpeakParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableHoldSpaceKeyToSpeakParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams.bEnable)
  return benable_;
}
void EnableHoldSpaceKeyToSpeakParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHoldSpaceKeyToSpeakParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAlwaysMuteMicWhenJoinVoipParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAlwaysMuteMicWhenJoinVoipParams::EnableAlwaysMuteMicWhenJoinVoipParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
}
EnableAlwaysMuteMicWhenJoinVoipParams::EnableAlwaysMuteMicWhenJoinVoipParams(const EnableAlwaysMuteMicWhenJoinVoipParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
}

void EnableAlwaysMuteMicWhenJoinVoipParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAlwaysMuteMicWhenJoinVoipParams::~EnableAlwaysMuteMicWhenJoinVoipParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  SharedDtor();
}

void EnableAlwaysMuteMicWhenJoinVoipParams::SharedDtor() {
}

void EnableAlwaysMuteMicWhenJoinVoipParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAlwaysMuteMicWhenJoinVoipParams& EnableAlwaysMuteMicWhenJoinVoipParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAlwaysMuteMicWhenJoinVoipParams* EnableAlwaysMuteMicWhenJoinVoipParams::New(::google::protobuf::Arena* arena) const {
  EnableAlwaysMuteMicWhenJoinVoipParams* n = new EnableAlwaysMuteMicWhenJoinVoipParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAlwaysMuteMicWhenJoinVoipParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAlwaysMuteMicWhenJoinVoipParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  return false;
#undef DO_
}

void EnableAlwaysMuteMicWhenJoinVoipParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
}

size_t EnableAlwaysMuteMicWhenJoinVoipParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAlwaysMuteMicWhenJoinVoipParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAlwaysMuteMicWhenJoinVoipParams*>(&from));
}

void EnableAlwaysMuteMicWhenJoinVoipParams::MergeFrom(const EnableAlwaysMuteMicWhenJoinVoipParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAlwaysMuteMicWhenJoinVoipParams::CopyFrom(const EnableAlwaysMuteMicWhenJoinVoipParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAlwaysMuteMicWhenJoinVoipParams::IsInitialized() const {
  return true;
}

void EnableAlwaysMuteMicWhenJoinVoipParams::Swap(EnableAlwaysMuteMicWhenJoinVoipParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAlwaysMuteMicWhenJoinVoipParams::InternalSwap(EnableAlwaysMuteMicWhenJoinVoipParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAlwaysMuteMicWhenJoinVoipParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAlwaysMuteMicWhenJoinVoipParams

// optional bool bEnable = 1;
bool EnableAlwaysMuteMicWhenJoinVoipParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAlwaysMuteMicWhenJoinVoipParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAlwaysMuteMicWhenJoinVoipParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAlwaysMuteMicWhenJoinVoipParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAlwaysMuteMicWhenJoinVoipParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams.bEnable)
  return benable_;
}
void EnableAlwaysMuteMicWhenJoinVoipParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysMuteMicWhenJoinVoipParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableSuppressAudioNotifyParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableSuppressAudioNotifyParams::EnableSuppressAudioNotifyParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
}
EnableSuppressAudioNotifyParams::EnableSuppressAudioNotifyParams(const EnableSuppressAudioNotifyParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
}

void EnableSuppressAudioNotifyParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableSuppressAudioNotifyParams::~EnableSuppressAudioNotifyParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  SharedDtor();
}

void EnableSuppressAudioNotifyParams::SharedDtor() {
}

void EnableSuppressAudioNotifyParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableSuppressAudioNotifyParams& EnableSuppressAudioNotifyParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableSuppressAudioNotifyParams* EnableSuppressAudioNotifyParams::New(::google::protobuf::Arena* arena) const {
  EnableSuppressAudioNotifyParams* n = new EnableSuppressAudioNotifyParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableSuppressAudioNotifyParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableSuppressAudioNotifyParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  return false;
#undef DO_
}

void EnableSuppressAudioNotifyParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
}

size_t EnableSuppressAudioNotifyParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableSuppressAudioNotifyParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableSuppressAudioNotifyParams*>(&from));
}

void EnableSuppressAudioNotifyParams::MergeFrom(const EnableSuppressAudioNotifyParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableSuppressAudioNotifyParams::CopyFrom(const EnableSuppressAudioNotifyParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableSuppressAudioNotifyParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableSuppressAudioNotifyParams::IsInitialized() const {
  return true;
}

void EnableSuppressAudioNotifyParams::Swap(EnableSuppressAudioNotifyParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableSuppressAudioNotifyParams::InternalSwap(EnableSuppressAudioNotifyParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableSuppressAudioNotifyParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableSuppressAudioNotifyParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableSuppressAudioNotifyParams

// optional bool bEnable = 1;
bool EnableSuppressAudioNotifyParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableSuppressAudioNotifyParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableSuppressAudioNotifyParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableSuppressAudioNotifyParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableSuppressAudioNotifyParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSuppressAudioNotifyParams.bEnable)
  return benable_;
}
void EnableSuppressAudioNotifyParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSuppressAudioNotifyParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEchoCancellationLevelParams::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEchoCancellationLevelParams::SetEchoCancellationLevelParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetEchoCancellationLevelParams)
}
SetEchoCancellationLevelParams::SetEchoCancellationLevelParams(const SetEchoCancellationLevelParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetEchoCancellationLevelParams)
}

void SetEchoCancellationLevelParams::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
}

SetEchoCancellationLevelParams::~SetEchoCancellationLevelParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  SharedDtor();
}

void SetEchoCancellationLevelParams::SharedDtor() {
}

void SetEchoCancellationLevelParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetEchoCancellationLevelParams& SetEchoCancellationLevelParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetEchoCancellationLevelParams* SetEchoCancellationLevelParams::New(::google::protobuf::Arena* arena) const {
  SetEchoCancellationLevelParams* n = new SetEchoCancellationLevelParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetEchoCancellationLevelParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetEchoCancellationLevelParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  return false;
#undef DO_
}

void SetEchoCancellationLevelParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetEchoCancellationLevelParams)
}

size_t SetEchoCancellationLevelParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 level = 1;
  if (has_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetEchoCancellationLevelParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetEchoCancellationLevelParams*>(&from));
}

void SetEchoCancellationLevelParams::MergeFrom(const SetEchoCancellationLevelParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_level()) {
    set_level(from.level());
  }
}

void SetEchoCancellationLevelParams::CopyFrom(const SetEchoCancellationLevelParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetEchoCancellationLevelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEchoCancellationLevelParams::IsInitialized() const {
  return true;
}

void SetEchoCancellationLevelParams::Swap(SetEchoCancellationLevelParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEchoCancellationLevelParams::InternalSwap(SetEchoCancellationLevelParams* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetEchoCancellationLevelParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetEchoCancellationLevelParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetEchoCancellationLevelParams

// optional int32 level = 1;
bool SetEchoCancellationLevelParams::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetEchoCancellationLevelParams::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
void SetEchoCancellationLevelParams::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetEchoCancellationLevelParams::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 SetEchoCancellationLevelParams::level() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetEchoCancellationLevelParams.level)
  return level_;
}
void SetEchoCancellationLevelParams::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetEchoCancellationLevelParams.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMicVolParams::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMicVolParams::SetMicVolParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetMicVolParams)
}
SetMicVolParams::SetMicVolParams(const SetMicVolParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetMicVolParams)
}

void SetMicVolParams::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
}

SetMicVolParams::~SetMicVolParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetMicVolParams)
  SharedDtor();
}

void SetMicVolParams::SharedDtor() {
}

void SetMicVolParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetMicVolParams& SetMicVolParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMicVolParams* SetMicVolParams::New(::google::protobuf::Arena* arena) const {
  SetMicVolParams* n = new SetMicVolParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMicVolParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetMicVolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetMicVolParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetMicVolParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetMicVolParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetMicVolParams)
  return false;
#undef DO_
}

void SetMicVolParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetMicVolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetMicVolParams)
}

size_t SetMicVolParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetMicVolParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional float value = 1;
  if (has_value()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMicVolParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetMicVolParams*>(&from));
}

void SetMicVolParams::MergeFrom(const SetMicVolParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetMicVolParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void SetMicVolParams::CopyFrom(const SetMicVolParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetMicVolParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMicVolParams::IsInitialized() const {
  return true;
}

void SetMicVolParams::Swap(SetMicVolParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMicVolParams::InternalSwap(SetMicVolParams* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetMicVolParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetMicVolParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMicVolParams

// optional float value = 1;
bool SetMicVolParams::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetMicVolParams::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void SetMicVolParams::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetMicVolParams::clear_value() {
  value_ = 0;
  clear_has_value();
}
float SetMicVolParams::value() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetMicVolParams.value)
  return value_;
}
void SetMicVolParams::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetMicVolParams.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSpeakerVolParams::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSpeakerVolParams::SetSpeakerVolParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetSpeakerVolParams)
}
SetSpeakerVolParams::SetSpeakerVolParams(const SetSpeakerVolParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetSpeakerVolParams)
}

void SetSpeakerVolParams::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
}

SetSpeakerVolParams::~SetSpeakerVolParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetSpeakerVolParams)
  SharedDtor();
}

void SetSpeakerVolParams::SharedDtor() {
}

void SetSpeakerVolParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetSpeakerVolParams& SetSpeakerVolParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSpeakerVolParams* SetSpeakerVolParams::New(::google::protobuf::Arena* arena) const {
  SetSpeakerVolParams* n = new SetSpeakerVolParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSpeakerVolParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetSpeakerVolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetSpeakerVolParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetSpeakerVolParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetSpeakerVolParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetSpeakerVolParams)
  return false;
#undef DO_
}

void SetSpeakerVolParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetSpeakerVolParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetSpeakerVolParams)
}

size_t SetSpeakerVolParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetSpeakerVolParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional float value = 1;
  if (has_value()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSpeakerVolParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetSpeakerVolParams*>(&from));
}

void SetSpeakerVolParams::MergeFrom(const SetSpeakerVolParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetSpeakerVolParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void SetSpeakerVolParams::CopyFrom(const SetSpeakerVolParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetSpeakerVolParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSpeakerVolParams::IsInitialized() const {
  return true;
}

void SetSpeakerVolParams::Swap(SetSpeakerVolParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSpeakerVolParams::InternalSwap(SetSpeakerVolParams* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetSpeakerVolParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetSpeakerVolParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSpeakerVolParams

// optional float value = 1;
bool SetSpeakerVolParams::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetSpeakerVolParams::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void SetSpeakerVolParams::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetSpeakerVolParams::clear_value() {
  value_ = 0;
  clear_has_value();
}
float SetSpeakerVolParams::value() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetSpeakerVolParams.value)
  return value_;
}
void SetSpeakerVolParams::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetSpeakerVolParams.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableDualScreenModeParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableDualScreenModeParams::EnableDualScreenModeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableDualScreenModeParams)
}
EnableDualScreenModeParams::EnableDualScreenModeParams(const EnableDualScreenModeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableDualScreenModeParams)
}

void EnableDualScreenModeParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableDualScreenModeParams::~EnableDualScreenModeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableDualScreenModeParams)
  SharedDtor();
}

void EnableDualScreenModeParams::SharedDtor() {
}

void EnableDualScreenModeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableDualScreenModeParams& EnableDualScreenModeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableDualScreenModeParams* EnableDualScreenModeParams::New(::google::protobuf::Arena* arena) const {
  EnableDualScreenModeParams* n = new EnableDualScreenModeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableDualScreenModeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableDualScreenModeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableDualScreenModeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableDualScreenModeParams)
  return false;
#undef DO_
}

void EnableDualScreenModeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableDualScreenModeParams)
}

size_t EnableDualScreenModeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableDualScreenModeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableDualScreenModeParams*>(&from));
}

void EnableDualScreenModeParams::MergeFrom(const EnableDualScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableDualScreenModeParams::CopyFrom(const EnableDualScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableDualScreenModeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableDualScreenModeParams::IsInitialized() const {
  return true;
}

void EnableDualScreenModeParams::Swap(EnableDualScreenModeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableDualScreenModeParams::InternalSwap(EnableDualScreenModeParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableDualScreenModeParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableDualScreenModeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableDualScreenModeParams

// optional bool bEnable = 1;
bool EnableDualScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableDualScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableDualScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableDualScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableDualScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDualScreenModeParams.bEnable)
  return benable_;
}
void EnableDualScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDualScreenModeParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TurnOffAeroModeInSharingParams::kBTurnOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TurnOffAeroModeInSharingParams::TurnOffAeroModeInSharingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
}
TurnOffAeroModeInSharingParams::TurnOffAeroModeInSharingParams(const TurnOffAeroModeInSharingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bturnoff_ = from.bturnoff_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
}

void TurnOffAeroModeInSharingParams::SharedCtor() {
  _cached_size_ = 0;
  bturnoff_ = false;
}

TurnOffAeroModeInSharingParams::~TurnOffAeroModeInSharingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  SharedDtor();
}

void TurnOffAeroModeInSharingParams::SharedDtor() {
}

void TurnOffAeroModeInSharingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TurnOffAeroModeInSharingParams& TurnOffAeroModeInSharingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

TurnOffAeroModeInSharingParams* TurnOffAeroModeInSharingParams::New(::google::protobuf::Arena* arena) const {
  TurnOffAeroModeInSharingParams* n = new TurnOffAeroModeInSharingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TurnOffAeroModeInSharingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bturnoff_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TurnOffAeroModeInSharingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bTurnOff = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bturnoff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bturnoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  return false;
#undef DO_
}

void TurnOffAeroModeInSharingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bTurnOff = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bturnoff(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
}

size_t TurnOffAeroModeInSharingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bTurnOff = 1;
  if (has_bturnoff()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TurnOffAeroModeInSharingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TurnOffAeroModeInSharingParams*>(&from));
}

void TurnOffAeroModeInSharingParams::MergeFrom(const TurnOffAeroModeInSharingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bturnoff()) {
    set_bturnoff(from.bturnoff());
  }
}

void TurnOffAeroModeInSharingParams::CopyFrom(const TurnOffAeroModeInSharingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.TurnOffAeroModeInSharingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnOffAeroModeInSharingParams::IsInitialized() const {
  return true;
}

void TurnOffAeroModeInSharingParams::Swap(TurnOffAeroModeInSharingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TurnOffAeroModeInSharingParams::InternalSwap(TurnOffAeroModeInSharingParams* other) {
  using std::swap;
  swap(bturnoff_, other->bturnoff_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TurnOffAeroModeInSharingParams::GetTypeName() const {
  return "com.electron.sdk.proto.TurnOffAeroModeInSharingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TurnOffAeroModeInSharingParams

// optional bool bTurnOff = 1;
bool TurnOffAeroModeInSharingParams::has_bturnoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TurnOffAeroModeInSharingParams::set_has_bturnoff() {
  _has_bits_[0] |= 0x00000001u;
}
void TurnOffAeroModeInSharingParams::clear_has_bturnoff() {
  _has_bits_[0] &= ~0x00000001u;
}
void TurnOffAeroModeInSharingParams::clear_bturnoff() {
  bturnoff_ = false;
  clear_has_bturnoff();
}
bool TurnOffAeroModeInSharingParams::bturnoff() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.TurnOffAeroModeInSharingParams.bTurnOff)
  return bturnoff_;
}
void TurnOffAeroModeInSharingParams::set_bturnoff(bool value) {
  set_has_bturnoff();
  bturnoff_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.TurnOffAeroModeInSharingParams.bTurnOff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoFitToWindowWhenViewSharingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoFitToWindowWhenViewSharingParams::EnableAutoFitToWindowWhenViewSharingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
}
EnableAutoFitToWindowWhenViewSharingParams::EnableAutoFitToWindowWhenViewSharingParams(const EnableAutoFitToWindowWhenViewSharingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
}

void EnableAutoFitToWindowWhenViewSharingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoFitToWindowWhenViewSharingParams::~EnableAutoFitToWindowWhenViewSharingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  SharedDtor();
}

void EnableAutoFitToWindowWhenViewSharingParams::SharedDtor() {
}

void EnableAutoFitToWindowWhenViewSharingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoFitToWindowWhenViewSharingParams& EnableAutoFitToWindowWhenViewSharingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoFitToWindowWhenViewSharingParams* EnableAutoFitToWindowWhenViewSharingParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoFitToWindowWhenViewSharingParams* n = new EnableAutoFitToWindowWhenViewSharingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoFitToWindowWhenViewSharingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoFitToWindowWhenViewSharingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  return false;
#undef DO_
}

void EnableAutoFitToWindowWhenViewSharingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
}

size_t EnableAutoFitToWindowWhenViewSharingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoFitToWindowWhenViewSharingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoFitToWindowWhenViewSharingParams*>(&from));
}

void EnableAutoFitToWindowWhenViewSharingParams::MergeFrom(const EnableAutoFitToWindowWhenViewSharingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoFitToWindowWhenViewSharingParams::CopyFrom(const EnableAutoFitToWindowWhenViewSharingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoFitToWindowWhenViewSharingParams::IsInitialized() const {
  return true;
}

void EnableAutoFitToWindowWhenViewSharingParams::Swap(EnableAutoFitToWindowWhenViewSharingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoFitToWindowWhenViewSharingParams::InternalSwap(EnableAutoFitToWindowWhenViewSharingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoFitToWindowWhenViewSharingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoFitToWindowWhenViewSharingParams

// optional bool bEnable = 1;
bool EnableAutoFitToWindowWhenViewSharingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoFitToWindowWhenViewSharingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoFitToWindowWhenViewSharingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoFitToWindowWhenViewSharingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoFitToWindowWhenViewSharingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams.bEnable)
  return benable_;
}
void EnableAutoFitToWindowWhenViewSharingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFitToWindowWhenViewSharingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoFullScreenVideoWhenJoinMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoFullScreenVideoWhenJoinMeetingParams::EnableAutoFullScreenVideoWhenJoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
}
EnableAutoFullScreenVideoWhenJoinMeetingParams::EnableAutoFullScreenVideoWhenJoinMeetingParams(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoFullScreenVideoWhenJoinMeetingParams::~EnableAutoFullScreenVideoWhenJoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  SharedDtor();
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::SharedDtor() {
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoFullScreenVideoWhenJoinMeetingParams& EnableAutoFullScreenVideoWhenJoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoFullScreenVideoWhenJoinMeetingParams* EnableAutoFullScreenVideoWhenJoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoFullScreenVideoWhenJoinMeetingParams* n = new EnableAutoFullScreenVideoWhenJoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoFullScreenVideoWhenJoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  return false;
#undef DO_
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
}

size_t EnableAutoFullScreenVideoWhenJoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoFullScreenVideoWhenJoinMeetingParams*>(&from));
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::MergeFrom(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::CopyFrom(const EnableAutoFullScreenVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoFullScreenVideoWhenJoinMeetingParams::IsInitialized() const {
  return true;
}

void EnableAutoFullScreenVideoWhenJoinMeetingParams::Swap(EnableAutoFullScreenVideoWhenJoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoFullScreenVideoWhenJoinMeetingParams::InternalSwap(EnableAutoFullScreenVideoWhenJoinMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoFullScreenVideoWhenJoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoFullScreenVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
bool EnableAutoFullScreenVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoFullScreenVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoFullScreenVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoFullScreenVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoFullScreenVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
void EnableAutoFullScreenVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenJoinMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableSplitScreenModeParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableSplitScreenModeParams::EnableSplitScreenModeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableSplitScreenModeParams)
}
EnableSplitScreenModeParams::EnableSplitScreenModeParams(const EnableSplitScreenModeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableSplitScreenModeParams)
}

void EnableSplitScreenModeParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableSplitScreenModeParams::~EnableSplitScreenModeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableSplitScreenModeParams)
  SharedDtor();
}

void EnableSplitScreenModeParams::SharedDtor() {
}

void EnableSplitScreenModeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableSplitScreenModeParams& EnableSplitScreenModeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableSplitScreenModeParams* EnableSplitScreenModeParams::New(::google::protobuf::Arena* arena) const {
  EnableSplitScreenModeParams* n = new EnableSplitScreenModeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableSplitScreenModeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableSplitScreenModeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableSplitScreenModeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableSplitScreenModeParams)
  return false;
#undef DO_
}

void EnableSplitScreenModeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableSplitScreenModeParams)
}

size_t EnableSplitScreenModeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableSplitScreenModeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableSplitScreenModeParams*>(&from));
}

void EnableSplitScreenModeParams::MergeFrom(const EnableSplitScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableSplitScreenModeParams::CopyFrom(const EnableSplitScreenModeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableSplitScreenModeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableSplitScreenModeParams::IsInitialized() const {
  return true;
}

void EnableSplitScreenModeParams::Swap(EnableSplitScreenModeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableSplitScreenModeParams::InternalSwap(EnableSplitScreenModeParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableSplitScreenModeParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableSplitScreenModeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableSplitScreenModeParams

// optional bool bEnable = 1;
bool EnableSplitScreenModeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableSplitScreenModeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableSplitScreenModeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableSplitScreenModeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableSplitScreenModeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSplitScreenModeParams.bEnable)
  return benable_;
}
void EnableSplitScreenModeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSplitScreenModeParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoFullScreenVideoWhenViewShareParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoFullScreenVideoWhenViewShareParams::EnableAutoFullScreenVideoWhenViewShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
}
EnableAutoFullScreenVideoWhenViewShareParams::EnableAutoFullScreenVideoWhenViewShareParams(const EnableAutoFullScreenVideoWhenViewShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
}

void EnableAutoFullScreenVideoWhenViewShareParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoFullScreenVideoWhenViewShareParams::~EnableAutoFullScreenVideoWhenViewShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  SharedDtor();
}

void EnableAutoFullScreenVideoWhenViewShareParams::SharedDtor() {
}

void EnableAutoFullScreenVideoWhenViewShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoFullScreenVideoWhenViewShareParams& EnableAutoFullScreenVideoWhenViewShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoFullScreenVideoWhenViewShareParams* EnableAutoFullScreenVideoWhenViewShareParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoFullScreenVideoWhenViewShareParams* n = new EnableAutoFullScreenVideoWhenViewShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoFullScreenVideoWhenViewShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoFullScreenVideoWhenViewShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  return false;
#undef DO_
}

void EnableAutoFullScreenVideoWhenViewShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
}

size_t EnableAutoFullScreenVideoWhenViewShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoFullScreenVideoWhenViewShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoFullScreenVideoWhenViewShareParams*>(&from));
}

void EnableAutoFullScreenVideoWhenViewShareParams::MergeFrom(const EnableAutoFullScreenVideoWhenViewShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoFullScreenVideoWhenViewShareParams::CopyFrom(const EnableAutoFullScreenVideoWhenViewShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoFullScreenVideoWhenViewShareParams::IsInitialized() const {
  return true;
}

void EnableAutoFullScreenVideoWhenViewShareParams::Swap(EnableAutoFullScreenVideoWhenViewShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoFullScreenVideoWhenViewShareParams::InternalSwap(EnableAutoFullScreenVideoWhenViewShareParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoFullScreenVideoWhenViewShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoFullScreenVideoWhenViewShareParams

// optional bool bEnable = 1;
bool EnableAutoFullScreenVideoWhenViewShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoFullScreenVideoWhenViewShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoFullScreenVideoWhenViewShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoFullScreenVideoWhenViewShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoFullScreenVideoWhenViewShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams.bEnable)
  return benable_;
}
void EnableAutoFullScreenVideoWhenViewShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoFullScreenVideoWhenViewShareParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableDisplayReminderWindowWhenExitParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableDisplayReminderWindowWhenExitParams::EnableDisplayReminderWindowWhenExitParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
}
EnableDisplayReminderWindowWhenExitParams::EnableDisplayReminderWindowWhenExitParams(const EnableDisplayReminderWindowWhenExitParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
}

void EnableDisplayReminderWindowWhenExitParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableDisplayReminderWindowWhenExitParams::~EnableDisplayReminderWindowWhenExitParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  SharedDtor();
}

void EnableDisplayReminderWindowWhenExitParams::SharedDtor() {
}

void EnableDisplayReminderWindowWhenExitParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableDisplayReminderWindowWhenExitParams& EnableDisplayReminderWindowWhenExitParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableDisplayReminderWindowWhenExitParams* EnableDisplayReminderWindowWhenExitParams::New(::google::protobuf::Arena* arena) const {
  EnableDisplayReminderWindowWhenExitParams* n = new EnableDisplayReminderWindowWhenExitParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableDisplayReminderWindowWhenExitParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableDisplayReminderWindowWhenExitParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  return false;
#undef DO_
}

void EnableDisplayReminderWindowWhenExitParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
}

size_t EnableDisplayReminderWindowWhenExitParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableDisplayReminderWindowWhenExitParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableDisplayReminderWindowWhenExitParams*>(&from));
}

void EnableDisplayReminderWindowWhenExitParams::MergeFrom(const EnableDisplayReminderWindowWhenExitParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableDisplayReminderWindowWhenExitParams::CopyFrom(const EnableDisplayReminderWindowWhenExitParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableDisplayReminderWindowWhenExitParams::IsInitialized() const {
  return true;
}

void EnableDisplayReminderWindowWhenExitParams::Swap(EnableDisplayReminderWindowWhenExitParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableDisplayReminderWindowWhenExitParams::InternalSwap(EnableDisplayReminderWindowWhenExitParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableDisplayReminderWindowWhenExitParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableDisplayReminderWindowWhenExitParams

// optional bool bEnable = 1;
bool EnableDisplayReminderWindowWhenExitParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableDisplayReminderWindowWhenExitParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableDisplayReminderWindowWhenExitParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableDisplayReminderWindowWhenExitParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableDisplayReminderWindowWhenExitParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams.bEnable)
  return benable_;
}
void EnableDisplayReminderWindowWhenExitParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableDisplayReminderWindowWhenExitParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableShowMyMeetingElapseTimeParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableShowMyMeetingElapseTimeParams::EnableShowMyMeetingElapseTimeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
}
EnableShowMyMeetingElapseTimeParams::EnableShowMyMeetingElapseTimeParams(const EnableShowMyMeetingElapseTimeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
}

void EnableShowMyMeetingElapseTimeParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableShowMyMeetingElapseTimeParams::~EnableShowMyMeetingElapseTimeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  SharedDtor();
}

void EnableShowMyMeetingElapseTimeParams::SharedDtor() {
}

void EnableShowMyMeetingElapseTimeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableShowMyMeetingElapseTimeParams& EnableShowMyMeetingElapseTimeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableShowMyMeetingElapseTimeParams* EnableShowMyMeetingElapseTimeParams::New(::google::protobuf::Arena* arena) const {
  EnableShowMyMeetingElapseTimeParams* n = new EnableShowMyMeetingElapseTimeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableShowMyMeetingElapseTimeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableShowMyMeetingElapseTimeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  return false;
#undef DO_
}

void EnableShowMyMeetingElapseTimeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
}

size_t EnableShowMyMeetingElapseTimeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableShowMyMeetingElapseTimeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableShowMyMeetingElapseTimeParams*>(&from));
}

void EnableShowMyMeetingElapseTimeParams::MergeFrom(const EnableShowMyMeetingElapseTimeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableShowMyMeetingElapseTimeParams::CopyFrom(const EnableShowMyMeetingElapseTimeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableShowMyMeetingElapseTimeParams::IsInitialized() const {
  return true;
}

void EnableShowMyMeetingElapseTimeParams::Swap(EnableShowMyMeetingElapseTimeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableShowMyMeetingElapseTimeParams::InternalSwap(EnableShowMyMeetingElapseTimeParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableShowMyMeetingElapseTimeParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableShowMyMeetingElapseTimeParams

// optional bool bEnable = 1;
bool EnableShowMyMeetingElapseTimeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableShowMyMeetingElapseTimeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableShowMyMeetingElapseTimeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableShowMyMeetingElapseTimeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableShowMyMeetingElapseTimeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams.bEnable)
  return benable_;
}
void EnableShowMyMeetingElapseTimeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowMyMeetingElapseTimeParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAccelerateGPUWhenShareParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAccelerateGPUWhenShareParams::EnableAccelerateGPUWhenShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
}
EnableAccelerateGPUWhenShareParams::EnableAccelerateGPUWhenShareParams(const EnableAccelerateGPUWhenShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
}

void EnableAccelerateGPUWhenShareParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAccelerateGPUWhenShareParams::~EnableAccelerateGPUWhenShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  SharedDtor();
}

void EnableAccelerateGPUWhenShareParams::SharedDtor() {
}

void EnableAccelerateGPUWhenShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAccelerateGPUWhenShareParams& EnableAccelerateGPUWhenShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAccelerateGPUWhenShareParams* EnableAccelerateGPUWhenShareParams::New(::google::protobuf::Arena* arena) const {
  EnableAccelerateGPUWhenShareParams* n = new EnableAccelerateGPUWhenShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAccelerateGPUWhenShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAccelerateGPUWhenShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  return false;
#undef DO_
}

void EnableAccelerateGPUWhenShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
}

size_t EnableAccelerateGPUWhenShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAccelerateGPUWhenShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAccelerateGPUWhenShareParams*>(&from));
}

void EnableAccelerateGPUWhenShareParams::MergeFrom(const EnableAccelerateGPUWhenShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAccelerateGPUWhenShareParams::CopyFrom(const EnableAccelerateGPUWhenShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAccelerateGPUWhenShareParams::IsInitialized() const {
  return true;
}

void EnableAccelerateGPUWhenShareParams::Swap(EnableAccelerateGPUWhenShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAccelerateGPUWhenShareParams::InternalSwap(EnableAccelerateGPUWhenShareParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAccelerateGPUWhenShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAccelerateGPUWhenShareParams

// optional bool bEnable = 1;
bool EnableAccelerateGPUWhenShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAccelerateGPUWhenShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAccelerateGPUWhenShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAccelerateGPUWhenShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAccelerateGPUWhenShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams.bEnable)
  return benable_;
}
void EnableAccelerateGPUWhenShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAccelerateGPUWhenShareParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableRemoteControlAllApplicationsParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableRemoteControlAllApplicationsParams::EnableRemoteControlAllApplicationsParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
}
EnableRemoteControlAllApplicationsParams::EnableRemoteControlAllApplicationsParams(const EnableRemoteControlAllApplicationsParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
}

void EnableRemoteControlAllApplicationsParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableRemoteControlAllApplicationsParams::~EnableRemoteControlAllApplicationsParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  SharedDtor();
}

void EnableRemoteControlAllApplicationsParams::SharedDtor() {
}

void EnableRemoteControlAllApplicationsParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableRemoteControlAllApplicationsParams& EnableRemoteControlAllApplicationsParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableRemoteControlAllApplicationsParams* EnableRemoteControlAllApplicationsParams::New(::google::protobuf::Arena* arena) const {
  EnableRemoteControlAllApplicationsParams* n = new EnableRemoteControlAllApplicationsParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableRemoteControlAllApplicationsParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableRemoteControlAllApplicationsParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  return false;
#undef DO_
}

void EnableRemoteControlAllApplicationsParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
}

size_t EnableRemoteControlAllApplicationsParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableRemoteControlAllApplicationsParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableRemoteControlAllApplicationsParams*>(&from));
}

void EnableRemoteControlAllApplicationsParams::MergeFrom(const EnableRemoteControlAllApplicationsParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableRemoteControlAllApplicationsParams::CopyFrom(const EnableRemoteControlAllApplicationsParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableRemoteControlAllApplicationsParams::IsInitialized() const {
  return true;
}

void EnableRemoteControlAllApplicationsParams::Swap(EnableRemoteControlAllApplicationsParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableRemoteControlAllApplicationsParams::InternalSwap(EnableRemoteControlAllApplicationsParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableRemoteControlAllApplicationsParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableRemoteControlAllApplicationsParams

// optional bool bEnable = 1;
bool EnableRemoteControlAllApplicationsParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableRemoteControlAllApplicationsParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableRemoteControlAllApplicationsParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableRemoteControlAllApplicationsParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableRemoteControlAllApplicationsParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams.bEnable)
  return benable_;
}
void EnableRemoteControlAllApplicationsParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableRemoteControlAllApplicationsParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRecordingPathParams::kRecPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRecordingPathParams::SetRecordingPathParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetRecordingPathParams)
}
SetRecordingPathParams::SetRecordingPathParams(const SetRecordingPathParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recpath()) {
    recpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recpath_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetRecordingPathParams)
}

void SetRecordingPathParams::SharedCtor() {
  _cached_size_ = 0;
  recpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetRecordingPathParams::~SetRecordingPathParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetRecordingPathParams)
  SharedDtor();
}

void SetRecordingPathParams::SharedDtor() {
  recpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetRecordingPathParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetRecordingPathParams& SetRecordingPathParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetRecordingPathParams* SetRecordingPathParams::New(::google::protobuf::Arena* arena) const {
  SetRecordingPathParams* n = new SetRecordingPathParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetRecordingPathParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetRecordingPathParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_recpath()) {
    GOOGLE_DCHECK(!recpath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*recpath_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetRecordingPathParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetRecordingPathParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string recPath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetRecordingPathParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetRecordingPathParams)
  return false;
#undef DO_
}

void SetRecordingPathParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetRecordingPathParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string recPath = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->recpath(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetRecordingPathParams)
}

size_t SetRecordingPathParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetRecordingPathParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string recPath = 1;
  if (has_recpath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recpath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetRecordingPathParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetRecordingPathParams*>(&from));
}

void SetRecordingPathParams::MergeFrom(const SetRecordingPathParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetRecordingPathParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recpath()) {
    set_has_recpath();
    recpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recpath_);
  }
}

void SetRecordingPathParams::CopyFrom(const SetRecordingPathParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetRecordingPathParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRecordingPathParams::IsInitialized() const {
  return true;
}

void SetRecordingPathParams::Swap(SetRecordingPathParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRecordingPathParams::InternalSwap(SetRecordingPathParams* other) {
  using std::swap;
  recpath_.Swap(&other->recpath_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetRecordingPathParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetRecordingPathParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetRecordingPathParams

// optional string recPath = 1;
bool SetRecordingPathParams::has_recpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetRecordingPathParams::set_has_recpath() {
  _has_bits_[0] |= 0x00000001u;
}
void SetRecordingPathParams::clear_has_recpath() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetRecordingPathParams::clear_recpath() {
  recpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recpath();
}
const ::std::string& SetRecordingPathParams::recpath() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  return recpath_.GetNoArena();
}
void SetRecordingPathParams::set_recpath(const ::std::string& value) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
#if LANG_CXX11
void SetRecordingPathParams::set_recpath(::std::string&& value) {
  set_has_recpath();
  recpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
#endif
void SetRecordingPathParams::set_recpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
void SetRecordingPathParams::set_recpath(const char* value, size_t size) {
  set_has_recpath();
  recpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}
::std::string* SetRecordingPathParams::mutable_recpath() {
  set_has_recpath();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  return recpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetRecordingPathParams::release_recpath() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetRecordingPathParams.recPath)
  clear_has_recpath();
  return recpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetRecordingPathParams::set_allocated_recpath(::std::string* recpath) {
  if (recpath != NULL) {
    set_has_recpath();
  } else {
    clear_has_recpath();
  }
  recpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recpath);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetRecordingPathParams.recPath)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableSelectRecordFileLocationAfterMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableSelectRecordFileLocationAfterMeetingParams::EnableSelectRecordFileLocationAfterMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
}
EnableSelectRecordFileLocationAfterMeetingParams::EnableSelectRecordFileLocationAfterMeetingParams(const EnableSelectRecordFileLocationAfterMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
}

void EnableSelectRecordFileLocationAfterMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableSelectRecordFileLocationAfterMeetingParams::~EnableSelectRecordFileLocationAfterMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  SharedDtor();
}

void EnableSelectRecordFileLocationAfterMeetingParams::SharedDtor() {
}

void EnableSelectRecordFileLocationAfterMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableSelectRecordFileLocationAfterMeetingParams& EnableSelectRecordFileLocationAfterMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableSelectRecordFileLocationAfterMeetingParams* EnableSelectRecordFileLocationAfterMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableSelectRecordFileLocationAfterMeetingParams* n = new EnableSelectRecordFileLocationAfterMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableSelectRecordFileLocationAfterMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableSelectRecordFileLocationAfterMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  return false;
#undef DO_
}

void EnableSelectRecordFileLocationAfterMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
}

size_t EnableSelectRecordFileLocationAfterMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableSelectRecordFileLocationAfterMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableSelectRecordFileLocationAfterMeetingParams*>(&from));
}

void EnableSelectRecordFileLocationAfterMeetingParams::MergeFrom(const EnableSelectRecordFileLocationAfterMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableSelectRecordFileLocationAfterMeetingParams::CopyFrom(const EnableSelectRecordFileLocationAfterMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableSelectRecordFileLocationAfterMeetingParams::IsInitialized() const {
  return true;
}

void EnableSelectRecordFileLocationAfterMeetingParams::Swap(EnableSelectRecordFileLocationAfterMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableSelectRecordFileLocationAfterMeetingParams::InternalSwap(EnableSelectRecordFileLocationAfterMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableSelectRecordFileLocationAfterMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableSelectRecordFileLocationAfterMeetingParams

// optional bool bEnable = 1;
bool EnableSelectRecordFileLocationAfterMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableSelectRecordFileLocationAfterMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableSelectRecordFileLocationAfterMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableSelectRecordFileLocationAfterMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableSelectRecordFileLocationAfterMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams.bEnable)
  return benable_;
}
void EnableSelectRecordFileLocationAfterMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSelectRecordFileLocationAfterMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableMultiAudioStreamRecordParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableMultiAudioStreamRecordParams::EnableMultiAudioStreamRecordParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
}
EnableMultiAudioStreamRecordParams::EnableMultiAudioStreamRecordParams(const EnableMultiAudioStreamRecordParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
}

void EnableMultiAudioStreamRecordParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableMultiAudioStreamRecordParams::~EnableMultiAudioStreamRecordParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  SharedDtor();
}

void EnableMultiAudioStreamRecordParams::SharedDtor() {
}

void EnableMultiAudioStreamRecordParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableMultiAudioStreamRecordParams& EnableMultiAudioStreamRecordParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableMultiAudioStreamRecordParams* EnableMultiAudioStreamRecordParams::New(::google::protobuf::Arena* arena) const {
  EnableMultiAudioStreamRecordParams* n = new EnableMultiAudioStreamRecordParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableMultiAudioStreamRecordParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableMultiAudioStreamRecordParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  return false;
#undef DO_
}

void EnableMultiAudioStreamRecordParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
}

size_t EnableMultiAudioStreamRecordParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableMultiAudioStreamRecordParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableMultiAudioStreamRecordParams*>(&from));
}

void EnableMultiAudioStreamRecordParams::MergeFrom(const EnableMultiAudioStreamRecordParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableMultiAudioStreamRecordParams::CopyFrom(const EnableMultiAudioStreamRecordParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableMultiAudioStreamRecordParams::IsInitialized() const {
  return true;
}

void EnableMultiAudioStreamRecordParams::Swap(EnableMultiAudioStreamRecordParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableMultiAudioStreamRecordParams::InternalSwap(EnableMultiAudioStreamRecordParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableMultiAudioStreamRecordParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableMultiAudioStreamRecordParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableMultiAudioStreamRecordParams

// optional bool bEnable = 1;
bool EnableMultiAudioStreamRecordParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableMultiAudioStreamRecordParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableMultiAudioStreamRecordParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableMultiAudioStreamRecordParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableMultiAudioStreamRecordParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams.bEnable)
  return benable_;
}
void EnableMultiAudioStreamRecordParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableMultiAudioStreamRecordParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAddTimestampWatermarkParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAddTimestampWatermarkParams::EnableAddTimestampWatermarkParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
}
EnableAddTimestampWatermarkParams::EnableAddTimestampWatermarkParams(const EnableAddTimestampWatermarkParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
}

void EnableAddTimestampWatermarkParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAddTimestampWatermarkParams::~EnableAddTimestampWatermarkParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  SharedDtor();
}

void EnableAddTimestampWatermarkParams::SharedDtor() {
}

void EnableAddTimestampWatermarkParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAddTimestampWatermarkParams& EnableAddTimestampWatermarkParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAddTimestampWatermarkParams* EnableAddTimestampWatermarkParams::New(::google::protobuf::Arena* arena) const {
  EnableAddTimestampWatermarkParams* n = new EnableAddTimestampWatermarkParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAddTimestampWatermarkParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAddTimestampWatermarkParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  return false;
#undef DO_
}

void EnableAddTimestampWatermarkParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
}

size_t EnableAddTimestampWatermarkParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAddTimestampWatermarkParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAddTimestampWatermarkParams*>(&from));
}

void EnableAddTimestampWatermarkParams::MergeFrom(const EnableAddTimestampWatermarkParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAddTimestampWatermarkParams::CopyFrom(const EnableAddTimestampWatermarkParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAddTimestampWatermarkParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAddTimestampWatermarkParams::IsInitialized() const {
  return true;
}

void EnableAddTimestampWatermarkParams::Swap(EnableAddTimestampWatermarkParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAddTimestampWatermarkParams::InternalSwap(EnableAddTimestampWatermarkParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAddTimestampWatermarkParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAddTimestampWatermarkParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAddTimestampWatermarkParams

// optional bool bEnable = 1;
bool EnableAddTimestampWatermarkParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAddTimestampWatermarkParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAddTimestampWatermarkParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAddTimestampWatermarkParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAddTimestampWatermarkParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAddTimestampWatermarkParams.bEnable)
  return benable_;
}
void EnableAddTimestampWatermarkParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAddTimestampWatermarkParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableOptimizeFor3rdPartyVideoEditorParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableOptimizeFor3rdPartyVideoEditorParams::EnableOptimizeFor3rdPartyVideoEditorParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
}
EnableOptimizeFor3rdPartyVideoEditorParams::EnableOptimizeFor3rdPartyVideoEditorParams(const EnableOptimizeFor3rdPartyVideoEditorParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
}

void EnableOptimizeFor3rdPartyVideoEditorParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableOptimizeFor3rdPartyVideoEditorParams::~EnableOptimizeFor3rdPartyVideoEditorParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  SharedDtor();
}

void EnableOptimizeFor3rdPartyVideoEditorParams::SharedDtor() {
}

void EnableOptimizeFor3rdPartyVideoEditorParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableOptimizeFor3rdPartyVideoEditorParams& EnableOptimizeFor3rdPartyVideoEditorParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableOptimizeFor3rdPartyVideoEditorParams* EnableOptimizeFor3rdPartyVideoEditorParams::New(::google::protobuf::Arena* arena) const {
  EnableOptimizeFor3rdPartyVideoEditorParams* n = new EnableOptimizeFor3rdPartyVideoEditorParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableOptimizeFor3rdPartyVideoEditorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableOptimizeFor3rdPartyVideoEditorParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  return false;
#undef DO_
}

void EnableOptimizeFor3rdPartyVideoEditorParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
}

size_t EnableOptimizeFor3rdPartyVideoEditorParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableOptimizeFor3rdPartyVideoEditorParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableOptimizeFor3rdPartyVideoEditorParams*>(&from));
}

void EnableOptimizeFor3rdPartyVideoEditorParams::MergeFrom(const EnableOptimizeFor3rdPartyVideoEditorParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableOptimizeFor3rdPartyVideoEditorParams::CopyFrom(const EnableOptimizeFor3rdPartyVideoEditorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableOptimizeFor3rdPartyVideoEditorParams::IsInitialized() const {
  return true;
}

void EnableOptimizeFor3rdPartyVideoEditorParams::Swap(EnableOptimizeFor3rdPartyVideoEditorParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableOptimizeFor3rdPartyVideoEditorParams::InternalSwap(EnableOptimizeFor3rdPartyVideoEditorParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableOptimizeFor3rdPartyVideoEditorParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableOptimizeFor3rdPartyVideoEditorParams

// optional bool bEnable = 1;
bool EnableOptimizeFor3rdPartyVideoEditorParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableOptimizeFor3rdPartyVideoEditorParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableOptimizeFor3rdPartyVideoEditorParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableOptimizeFor3rdPartyVideoEditorParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableOptimizeFor3rdPartyVideoEditorParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams.bEnable)
  return benable_;
}
void EnableOptimizeFor3rdPartyVideoEditorParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableOptimizeFor3rdPartyVideoEditorParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableShowVideoThumbnailWhenShareParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableShowVideoThumbnailWhenShareParams::EnableShowVideoThumbnailWhenShareParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
}
EnableShowVideoThumbnailWhenShareParams::EnableShowVideoThumbnailWhenShareParams(const EnableShowVideoThumbnailWhenShareParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
}

void EnableShowVideoThumbnailWhenShareParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableShowVideoThumbnailWhenShareParams::~EnableShowVideoThumbnailWhenShareParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  SharedDtor();
}

void EnableShowVideoThumbnailWhenShareParams::SharedDtor() {
}

void EnableShowVideoThumbnailWhenShareParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableShowVideoThumbnailWhenShareParams& EnableShowVideoThumbnailWhenShareParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableShowVideoThumbnailWhenShareParams* EnableShowVideoThumbnailWhenShareParams::New(::google::protobuf::Arena* arena) const {
  EnableShowVideoThumbnailWhenShareParams* n = new EnableShowVideoThumbnailWhenShareParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableShowVideoThumbnailWhenShareParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableShowVideoThumbnailWhenShareParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  return false;
#undef DO_
}

void EnableShowVideoThumbnailWhenShareParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
}

size_t EnableShowVideoThumbnailWhenShareParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableShowVideoThumbnailWhenShareParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableShowVideoThumbnailWhenShareParams*>(&from));
}

void EnableShowVideoThumbnailWhenShareParams::MergeFrom(const EnableShowVideoThumbnailWhenShareParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableShowVideoThumbnailWhenShareParams::CopyFrom(const EnableShowVideoThumbnailWhenShareParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableShowVideoThumbnailWhenShareParams::IsInitialized() const {
  return true;
}

void EnableShowVideoThumbnailWhenShareParams::Swap(EnableShowVideoThumbnailWhenShareParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableShowVideoThumbnailWhenShareParams::InternalSwap(EnableShowVideoThumbnailWhenShareParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableShowVideoThumbnailWhenShareParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableShowVideoThumbnailWhenShareParams

// optional bool bEnable = 1;
bool EnableShowVideoThumbnailWhenShareParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableShowVideoThumbnailWhenShareParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableShowVideoThumbnailWhenShareParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableShowVideoThumbnailWhenShareParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableShowVideoThumbnailWhenShareParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams.bEnable)
  return benable_;
}
void EnableShowVideoThumbnailWhenShareParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableShowVideoThumbnailWhenShareParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnablePlaceVideoNextToShareInRecordParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnablePlaceVideoNextToShareInRecordParams::EnablePlaceVideoNextToShareInRecordParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
}
EnablePlaceVideoNextToShareInRecordParams::EnablePlaceVideoNextToShareInRecordParams(const EnablePlaceVideoNextToShareInRecordParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
}

void EnablePlaceVideoNextToShareInRecordParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnablePlaceVideoNextToShareInRecordParams::~EnablePlaceVideoNextToShareInRecordParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  SharedDtor();
}

void EnablePlaceVideoNextToShareInRecordParams::SharedDtor() {
}

void EnablePlaceVideoNextToShareInRecordParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnablePlaceVideoNextToShareInRecordParams& EnablePlaceVideoNextToShareInRecordParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnablePlaceVideoNextToShareInRecordParams* EnablePlaceVideoNextToShareInRecordParams::New(::google::protobuf::Arena* arena) const {
  EnablePlaceVideoNextToShareInRecordParams* n = new EnablePlaceVideoNextToShareInRecordParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnablePlaceVideoNextToShareInRecordParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnablePlaceVideoNextToShareInRecordParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  return false;
#undef DO_
}

void EnablePlaceVideoNextToShareInRecordParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
}

size_t EnablePlaceVideoNextToShareInRecordParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnablePlaceVideoNextToShareInRecordParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnablePlaceVideoNextToShareInRecordParams*>(&from));
}

void EnablePlaceVideoNextToShareInRecordParams::MergeFrom(const EnablePlaceVideoNextToShareInRecordParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnablePlaceVideoNextToShareInRecordParams::CopyFrom(const EnablePlaceVideoNextToShareInRecordParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnablePlaceVideoNextToShareInRecordParams::IsInitialized() const {
  return true;
}

void EnablePlaceVideoNextToShareInRecordParams::Swap(EnablePlaceVideoNextToShareInRecordParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnablePlaceVideoNextToShareInRecordParams::InternalSwap(EnablePlaceVideoNextToShareInRecordParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnablePlaceVideoNextToShareInRecordParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnablePlaceVideoNextToShareInRecordParams

// optional bool bEnable = 1;
bool EnablePlaceVideoNextToShareInRecordParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnablePlaceVideoNextToShareInRecordParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnablePlaceVideoNextToShareInRecordParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnablePlaceVideoNextToShareInRecordParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnablePlaceVideoNextToShareInRecordParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams.bEnable)
  return benable_;
}
void EnablePlaceVideoNextToShareInRecordParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnablePlaceVideoNextToShareInRecordParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableAdvancedFeatures4GeneralSettingParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableAdvancedFeatures4GeneralSettingParams::DisableAdvancedFeatures4GeneralSettingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
}
DisableAdvancedFeatures4GeneralSettingParams::DisableAdvancedFeatures4GeneralSettingParams(const DisableAdvancedFeatures4GeneralSettingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
}

void DisableAdvancedFeatures4GeneralSettingParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableAdvancedFeatures4GeneralSettingParams::~DisableAdvancedFeatures4GeneralSettingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  SharedDtor();
}

void DisableAdvancedFeatures4GeneralSettingParams::SharedDtor() {
}

void DisableAdvancedFeatures4GeneralSettingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableAdvancedFeatures4GeneralSettingParams& DisableAdvancedFeatures4GeneralSettingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableAdvancedFeatures4GeneralSettingParams* DisableAdvancedFeatures4GeneralSettingParams::New(::google::protobuf::Arena* arena) const {
  DisableAdvancedFeatures4GeneralSettingParams* n = new DisableAdvancedFeatures4GeneralSettingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableAdvancedFeatures4GeneralSettingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableAdvancedFeatures4GeneralSettingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  return false;
#undef DO_
}

void DisableAdvancedFeatures4GeneralSettingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
}

size_t DisableAdvancedFeatures4GeneralSettingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableAdvancedFeatures4GeneralSettingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableAdvancedFeatures4GeneralSettingParams*>(&from));
}

void DisableAdvancedFeatures4GeneralSettingParams::MergeFrom(const DisableAdvancedFeatures4GeneralSettingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableAdvancedFeatures4GeneralSettingParams::CopyFrom(const DisableAdvancedFeatures4GeneralSettingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableAdvancedFeatures4GeneralSettingParams::IsInitialized() const {
  return true;
}

void DisableAdvancedFeatures4GeneralSettingParams::Swap(DisableAdvancedFeatures4GeneralSettingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableAdvancedFeatures4GeneralSettingParams::InternalSwap(DisableAdvancedFeatures4GeneralSettingParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableAdvancedFeatures4GeneralSettingParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableAdvancedFeatures4GeneralSettingParams

// optional bool bDisable = 1;
bool DisableAdvancedFeatures4GeneralSettingParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableAdvancedFeatures4GeneralSettingParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableAdvancedFeatures4GeneralSettingParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableAdvancedFeatures4GeneralSettingParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableAdvancedFeatures4GeneralSettingParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams.bDisable)
  return bdisable_;
}
void DisableAdvancedFeatures4GeneralSettingParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAdvancedFeatures4GeneralSettingParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableAccountSettingTabPageParams::kBDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableAccountSettingTabPageParams::DisableAccountSettingTabPageParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
}
DisableAccountSettingTabPageParams::DisableAccountSettingTabPageParams(const DisableAccountSettingTabPageParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdisable_ = from.bdisable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
}

void DisableAccountSettingTabPageParams::SharedCtor() {
  _cached_size_ = 0;
  bdisable_ = false;
}

DisableAccountSettingTabPageParams::~DisableAccountSettingTabPageParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  SharedDtor();
}

void DisableAccountSettingTabPageParams::SharedDtor() {
}

void DisableAccountSettingTabPageParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DisableAccountSettingTabPageParams& DisableAccountSettingTabPageParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisableAccountSettingTabPageParams* DisableAccountSettingTabPageParams::New(::google::protobuf::Arena* arena) const {
  DisableAccountSettingTabPageParams* n = new DisableAccountSettingTabPageParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableAccountSettingTabPageParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdisable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DisableAccountSettingTabPageParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bDisable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bdisable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdisable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  return false;
#undef DO_
}

void DisableAccountSettingTabPageParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bDisable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdisable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
}

size_t DisableAccountSettingTabPageParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bDisable = 1;
  if (has_bdisable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableAccountSettingTabPageParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DisableAccountSettingTabPageParams*>(&from));
}

void DisableAccountSettingTabPageParams::MergeFrom(const DisableAccountSettingTabPageParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bdisable()) {
    set_bdisable(from.bdisable());
  }
}

void DisableAccountSettingTabPageParams::CopyFrom(const DisableAccountSettingTabPageParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.DisableAccountSettingTabPageParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableAccountSettingTabPageParams::IsInitialized() const {
  return true;
}

void DisableAccountSettingTabPageParams::Swap(DisableAccountSettingTabPageParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableAccountSettingTabPageParams::InternalSwap(DisableAccountSettingTabPageParams* other) {
  using std::swap;
  swap(bdisable_, other->bdisable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DisableAccountSettingTabPageParams::GetTypeName() const {
  return "com.electron.sdk.proto.DisableAccountSettingTabPageParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableAccountSettingTabPageParams

// optional bool bDisable = 1;
bool DisableAccountSettingTabPageParams::has_bdisable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisableAccountSettingTabPageParams::set_has_bdisable() {
  _has_bits_[0] |= 0x00000001u;
}
void DisableAccountSettingTabPageParams::clear_has_bdisable() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisableAccountSettingTabPageParams::clear_bdisable() {
  bdisable_ = false;
  clear_has_bdisable();
}
bool DisableAccountSettingTabPageParams::bdisable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.DisableAccountSettingTabPageParams.bDisable)
  return bdisable_;
}
void DisableAccountSettingTabPageParams::set_bdisable(bool value) {
  set_has_bdisable();
  bdisable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.DisableAccountSettingTabPageParams.bDisable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfSettingDialogShownTabPageParams::kShowOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfSettingDialogShownTabPageParams::ConfSettingDialogShownTabPageParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
}
ConfSettingDialogShownTabPageParams::ConfSettingDialogShownTabPageParams(const ConfSettingDialogShownTabPageParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  showoption_ = from.showoption_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
}

void ConfSettingDialogShownTabPageParams::SharedCtor() {
  _cached_size_ = 0;
  showoption_ = GOOGLE_ULONGLONG(0);
}

ConfSettingDialogShownTabPageParams::~ConfSettingDialogShownTabPageParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  SharedDtor();
}

void ConfSettingDialogShownTabPageParams::SharedDtor() {
}

void ConfSettingDialogShownTabPageParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ConfSettingDialogShownTabPageParams& ConfSettingDialogShownTabPageParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfSettingDialogShownTabPageParams* ConfSettingDialogShownTabPageParams::New(::google::protobuf::Arena* arena) const {
  ConfSettingDialogShownTabPageParams* n = new ConfSettingDialogShownTabPageParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfSettingDialogShownTabPageParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  showoption_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfSettingDialogShownTabPageParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 showOption = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_showoption();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &showoption_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  return false;
#undef DO_
}

void ConfSettingDialogShownTabPageParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 showOption = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->showoption(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
}

size_t ConfSettingDialogShownTabPageParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional uint64 showOption = 1;
  if (has_showoption()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->showoption());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfSettingDialogShownTabPageParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ConfSettingDialogShownTabPageParams*>(&from));
}

void ConfSettingDialogShownTabPageParams::MergeFrom(const ConfSettingDialogShownTabPageParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_showoption()) {
    set_showoption(from.showoption());
  }
}

void ConfSettingDialogShownTabPageParams::CopyFrom(const ConfSettingDialogShownTabPageParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfSettingDialogShownTabPageParams::IsInitialized() const {
  return true;
}

void ConfSettingDialogShownTabPageParams::Swap(ConfSettingDialogShownTabPageParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfSettingDialogShownTabPageParams::InternalSwap(ConfSettingDialogShownTabPageParams* other) {
  using std::swap;
  swap(showoption_, other->showoption_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ConfSettingDialogShownTabPageParams::GetTypeName() const {
  return "com.electron.sdk.proto.ConfSettingDialogShownTabPageParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfSettingDialogShownTabPageParams

// optional uint64 showOption = 1;
bool ConfSettingDialogShownTabPageParams::has_showoption() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConfSettingDialogShownTabPageParams::set_has_showoption() {
  _has_bits_[0] |= 0x00000001u;
}
void ConfSettingDialogShownTabPageParams::clear_has_showoption() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConfSettingDialogShownTabPageParams::clear_showoption() {
  showoption_ = GOOGLE_ULONGLONG(0);
  clear_has_showoption();
}
::google::protobuf::uint64 ConfSettingDialogShownTabPageParams::showoption() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams.showOption)
  return showoption_;
}
void ConfSettingDialogShownTabPageParams::set_showoption(::google::protobuf::uint64 value) {
  set_has_showoption();
  showoption_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.ConfSettingDialogShownTabPageParams.showOption)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectVideoCameraParams::kDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectVideoCameraParams::SelectVideoCameraParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SelectVideoCameraParams)
}
SelectVideoCameraParams::SelectVideoCameraParams(const SelectVideoCameraParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceid()) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SelectVideoCameraParams)
}

void SelectVideoCameraParams::SharedCtor() {
  _cached_size_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SelectVideoCameraParams::~SelectVideoCameraParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SelectVideoCameraParams)
  SharedDtor();
}

void SelectVideoCameraParams::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectVideoCameraParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SelectVideoCameraParams& SelectVideoCameraParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectVideoCameraParams* SelectVideoCameraParams::New(::google::protobuf::Arena* arena) const {
  SelectVideoCameraParams* n = new SelectVideoCameraParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectVideoCameraParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SelectVideoCameraParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_deviceid()) {
    GOOGLE_DCHECK(!deviceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*deviceid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectVideoCameraParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SelectVideoCameraParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SelectVideoCameraParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SelectVideoCameraParams)
  return false;
#undef DO_
}

void SelectVideoCameraParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SelectVideoCameraParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string deviceID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SelectVideoCameraParams)
}

size_t SelectVideoCameraParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SelectVideoCameraParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string deviceID = 1;
  if (has_deviceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectVideoCameraParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SelectVideoCameraParams*>(&from));
}

void SelectVideoCameraParams::MergeFrom(const SelectVideoCameraParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SelectVideoCameraParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deviceid()) {
    set_has_deviceid();
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void SelectVideoCameraParams::CopyFrom(const SelectVideoCameraParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SelectVideoCameraParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectVideoCameraParams::IsInitialized() const {
  return true;
}

void SelectVideoCameraParams::Swap(SelectVideoCameraParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectVideoCameraParams::InternalSwap(SelectVideoCameraParams* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SelectVideoCameraParams::GetTypeName() const {
  return "com.electron.sdk.proto.SelectVideoCameraParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectVideoCameraParams

// optional string deviceID = 1;
bool SelectVideoCameraParams::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectVideoCameraParams::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectVideoCameraParams::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectVideoCameraParams::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
const ::std::string& SelectVideoCameraParams::deviceid() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  return deviceid_.GetNoArena();
}
void SelectVideoCameraParams::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
#if LANG_CXX11
void SelectVideoCameraParams::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
#endif
void SelectVideoCameraParams::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
void SelectVideoCameraParams::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}
::std::string* SelectVideoCameraParams::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectVideoCameraParams::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectVideoCameraParams::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SelectVideoCameraParams.deviceID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableVideoMirrorEffectParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableVideoMirrorEffectParams::EnableVideoMirrorEffectParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
}
EnableVideoMirrorEffectParams::EnableVideoMirrorEffectParams(const EnableVideoMirrorEffectParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
}

void EnableVideoMirrorEffectParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableVideoMirrorEffectParams::~EnableVideoMirrorEffectParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  SharedDtor();
}

void EnableVideoMirrorEffectParams::SharedDtor() {
}

void EnableVideoMirrorEffectParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableVideoMirrorEffectParams& EnableVideoMirrorEffectParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableVideoMirrorEffectParams* EnableVideoMirrorEffectParams::New(::google::protobuf::Arena* arena) const {
  EnableVideoMirrorEffectParams* n = new EnableVideoMirrorEffectParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableVideoMirrorEffectParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableVideoMirrorEffectParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  return false;
#undef DO_
}

void EnableVideoMirrorEffectParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
}

size_t EnableVideoMirrorEffectParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableVideoMirrorEffectParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableVideoMirrorEffectParams*>(&from));
}

void EnableVideoMirrorEffectParams::MergeFrom(const EnableVideoMirrorEffectParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableVideoMirrorEffectParams::CopyFrom(const EnableVideoMirrorEffectParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableVideoMirrorEffectParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableVideoMirrorEffectParams::IsInitialized() const {
  return true;
}

void EnableVideoMirrorEffectParams::Swap(EnableVideoMirrorEffectParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableVideoMirrorEffectParams::InternalSwap(EnableVideoMirrorEffectParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableVideoMirrorEffectParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableVideoMirrorEffectParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableVideoMirrorEffectParams

// optional bool bEnable = 1;
bool EnableVideoMirrorEffectParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableVideoMirrorEffectParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableVideoMirrorEffectParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableVideoMirrorEffectParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableVideoMirrorEffectParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoMirrorEffectParams.bEnable)
  return benable_;
}
void EnableVideoMirrorEffectParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoMirrorEffectParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableFaceBeautyEffectParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableFaceBeautyEffectParams::EnableFaceBeautyEffectParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
}
EnableFaceBeautyEffectParams::EnableFaceBeautyEffectParams(const EnableFaceBeautyEffectParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
}

void EnableFaceBeautyEffectParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableFaceBeautyEffectParams::~EnableFaceBeautyEffectParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  SharedDtor();
}

void EnableFaceBeautyEffectParams::SharedDtor() {
}

void EnableFaceBeautyEffectParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableFaceBeautyEffectParams& EnableFaceBeautyEffectParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableFaceBeautyEffectParams* EnableFaceBeautyEffectParams::New(::google::protobuf::Arena* arena) const {
  EnableFaceBeautyEffectParams* n = new EnableFaceBeautyEffectParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableFaceBeautyEffectParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableFaceBeautyEffectParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  return false;
#undef DO_
}

void EnableFaceBeautyEffectParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
}

size_t EnableFaceBeautyEffectParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableFaceBeautyEffectParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableFaceBeautyEffectParams*>(&from));
}

void EnableFaceBeautyEffectParams::MergeFrom(const EnableFaceBeautyEffectParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableFaceBeautyEffectParams::CopyFrom(const EnableFaceBeautyEffectParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableFaceBeautyEffectParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableFaceBeautyEffectParams::IsInitialized() const {
  return true;
}

void EnableFaceBeautyEffectParams::Swap(EnableFaceBeautyEffectParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableFaceBeautyEffectParams::InternalSwap(EnableFaceBeautyEffectParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableFaceBeautyEffectParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableFaceBeautyEffectParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableFaceBeautyEffectParams

// optional bool bEnable = 1;
bool EnableFaceBeautyEffectParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableFaceBeautyEffectParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableFaceBeautyEffectParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableFaceBeautyEffectParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableFaceBeautyEffectParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableFaceBeautyEffectParams.bEnable)
  return benable_;
}
void EnableFaceBeautyEffectParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableFaceBeautyEffectParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableHDVideoParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableHDVideoParams::EnableHDVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableHDVideoParams)
}
EnableHDVideoParams::EnableHDVideoParams(const EnableHDVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableHDVideoParams)
}

void EnableHDVideoParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableHDVideoParams::~EnableHDVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableHDVideoParams)
  SharedDtor();
}

void EnableHDVideoParams::SharedDtor() {
}

void EnableHDVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableHDVideoParams& EnableHDVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableHDVideoParams* EnableHDVideoParams::New(::google::protobuf::Arena* arena) const {
  EnableHDVideoParams* n = new EnableHDVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableHDVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableHDVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableHDVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableHDVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableHDVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableHDVideoParams)
  return false;
#undef DO_
}

void EnableHDVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableHDVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableHDVideoParams)
}

size_t EnableHDVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableHDVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableHDVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableHDVideoParams*>(&from));
}

void EnableHDVideoParams::MergeFrom(const EnableHDVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableHDVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableHDVideoParams::CopyFrom(const EnableHDVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableHDVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableHDVideoParams::IsInitialized() const {
  return true;
}

void EnableHDVideoParams::Swap(EnableHDVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableHDVideoParams::InternalSwap(EnableHDVideoParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableHDVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableHDVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableHDVideoParams

// optional bool bEnable = 1;
bool EnableHDVideoParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableHDVideoParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableHDVideoParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableHDVideoParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableHDVideoParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHDVideoParams.bEnable)
  return benable_;
}
void EnableHDVideoParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHDVideoParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAlwaysShowNameOnVideoParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAlwaysShowNameOnVideoParams::EnableAlwaysShowNameOnVideoParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
}
EnableAlwaysShowNameOnVideoParams::EnableAlwaysShowNameOnVideoParams(const EnableAlwaysShowNameOnVideoParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
}

void EnableAlwaysShowNameOnVideoParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAlwaysShowNameOnVideoParams::~EnableAlwaysShowNameOnVideoParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  SharedDtor();
}

void EnableAlwaysShowNameOnVideoParams::SharedDtor() {
}

void EnableAlwaysShowNameOnVideoParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAlwaysShowNameOnVideoParams& EnableAlwaysShowNameOnVideoParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAlwaysShowNameOnVideoParams* EnableAlwaysShowNameOnVideoParams::New(::google::protobuf::Arena* arena) const {
  EnableAlwaysShowNameOnVideoParams* n = new EnableAlwaysShowNameOnVideoParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAlwaysShowNameOnVideoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAlwaysShowNameOnVideoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  return false;
#undef DO_
}

void EnableAlwaysShowNameOnVideoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
}

size_t EnableAlwaysShowNameOnVideoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAlwaysShowNameOnVideoParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAlwaysShowNameOnVideoParams*>(&from));
}

void EnableAlwaysShowNameOnVideoParams::MergeFrom(const EnableAlwaysShowNameOnVideoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAlwaysShowNameOnVideoParams::CopyFrom(const EnableAlwaysShowNameOnVideoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAlwaysShowNameOnVideoParams::IsInitialized() const {
  return true;
}

void EnableAlwaysShowNameOnVideoParams::Swap(EnableAlwaysShowNameOnVideoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAlwaysShowNameOnVideoParams::InternalSwap(EnableAlwaysShowNameOnVideoParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAlwaysShowNameOnVideoParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAlwaysShowNameOnVideoParams

// optional bool bEnable = 1;
bool EnableAlwaysShowNameOnVideoParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAlwaysShowNameOnVideoParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAlwaysShowNameOnVideoParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAlwaysShowNameOnVideoParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAlwaysShowNameOnVideoParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams.bEnable)
  return benable_;
}
void EnableAlwaysShowNameOnVideoParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysShowNameOnVideoParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableVideoPreviewDialogParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableVideoPreviewDialogParams::EnableVideoPreviewDialogParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
}
EnableVideoPreviewDialogParams::EnableVideoPreviewDialogParams(const EnableVideoPreviewDialogParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
}

void EnableVideoPreviewDialogParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableVideoPreviewDialogParams::~EnableVideoPreviewDialogParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  SharedDtor();
}

void EnableVideoPreviewDialogParams::SharedDtor() {
}

void EnableVideoPreviewDialogParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableVideoPreviewDialogParams& EnableVideoPreviewDialogParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableVideoPreviewDialogParams* EnableVideoPreviewDialogParams::New(::google::protobuf::Arena* arena) const {
  EnableVideoPreviewDialogParams* n = new EnableVideoPreviewDialogParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableVideoPreviewDialogParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableVideoPreviewDialogParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  return false;
#undef DO_
}

void EnableVideoPreviewDialogParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
}

size_t EnableVideoPreviewDialogParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableVideoPreviewDialogParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableVideoPreviewDialogParams*>(&from));
}

void EnableVideoPreviewDialogParams::MergeFrom(const EnableVideoPreviewDialogParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableVideoPreviewDialogParams::CopyFrom(const EnableVideoPreviewDialogParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableVideoPreviewDialogParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableVideoPreviewDialogParams::IsInitialized() const {
  return true;
}

void EnableVideoPreviewDialogParams::Swap(EnableVideoPreviewDialogParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableVideoPreviewDialogParams::InternalSwap(EnableVideoPreviewDialogParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableVideoPreviewDialogParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableVideoPreviewDialogParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableVideoPreviewDialogParams

// optional bool bEnable = 1;
bool EnableVideoPreviewDialogParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableVideoPreviewDialogParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableVideoPreviewDialogParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableVideoPreviewDialogParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableVideoPreviewDialogParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableVideoPreviewDialogParams.bEnable)
  return benable_;
}
void EnableVideoPreviewDialogParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableVideoPreviewDialogParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAutoTurnOffVideoWhenJoinMeetingParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAutoTurnOffVideoWhenJoinMeetingParams::EnableAutoTurnOffVideoWhenJoinMeetingParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
}
EnableAutoTurnOffVideoWhenJoinMeetingParams::EnableAutoTurnOffVideoWhenJoinMeetingParams(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAutoTurnOffVideoWhenJoinMeetingParams::~EnableAutoTurnOffVideoWhenJoinMeetingParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  SharedDtor();
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::SharedDtor() {
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAutoTurnOffVideoWhenJoinMeetingParams& EnableAutoTurnOffVideoWhenJoinMeetingParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAutoTurnOffVideoWhenJoinMeetingParams* EnableAutoTurnOffVideoWhenJoinMeetingParams::New(::google::protobuf::Arena* arena) const {
  EnableAutoTurnOffVideoWhenJoinMeetingParams* n = new EnableAutoTurnOffVideoWhenJoinMeetingParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAutoTurnOffVideoWhenJoinMeetingParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  return false;
#undef DO_
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
}

size_t EnableAutoTurnOffVideoWhenJoinMeetingParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAutoTurnOffVideoWhenJoinMeetingParams*>(&from));
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::MergeFrom(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::CopyFrom(const EnableAutoTurnOffVideoWhenJoinMeetingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAutoTurnOffVideoWhenJoinMeetingParams::IsInitialized() const {
  return true;
}

void EnableAutoTurnOffVideoWhenJoinMeetingParams::Swap(EnableAutoTurnOffVideoWhenJoinMeetingParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAutoTurnOffVideoWhenJoinMeetingParams::InternalSwap(EnableAutoTurnOffVideoWhenJoinMeetingParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAutoTurnOffVideoWhenJoinMeetingParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAutoTurnOffVideoWhenJoinMeetingParams

// optional bool bEnable = 1;
bool EnableAutoTurnOffVideoWhenJoinMeetingParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAutoTurnOffVideoWhenJoinMeetingParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAutoTurnOffVideoWhenJoinMeetingParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAutoTurnOffVideoWhenJoinMeetingParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAutoTurnOffVideoWhenJoinMeetingParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams.bEnable)
  return benable_;
}
void EnableAutoTurnOffVideoWhenJoinMeetingParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAutoTurnOffVideoWhenJoinMeetingParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableAlwaysUse16v9Params::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableAlwaysUse16v9Params::EnableAlwaysUse16v9Params()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
}
EnableAlwaysUse16v9Params::EnableAlwaysUse16v9Params(const EnableAlwaysUse16v9Params& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
}

void EnableAlwaysUse16v9Params::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableAlwaysUse16v9Params::~EnableAlwaysUse16v9Params() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  SharedDtor();
}

void EnableAlwaysUse16v9Params::SharedDtor() {
}

void EnableAlwaysUse16v9Params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableAlwaysUse16v9Params& EnableAlwaysUse16v9Params::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableAlwaysUse16v9Params* EnableAlwaysUse16v9Params::New(::google::protobuf::Arena* arena) const {
  EnableAlwaysUse16v9Params* n = new EnableAlwaysUse16v9Params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableAlwaysUse16v9Params::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableAlwaysUse16v9Params::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  return false;
#undef DO_
}

void EnableAlwaysUse16v9Params::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
}

size_t EnableAlwaysUse16v9Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableAlwaysUse16v9Params::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableAlwaysUse16v9Params*>(&from));
}

void EnableAlwaysUse16v9Params::MergeFrom(const EnableAlwaysUse16v9Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableAlwaysUse16v9Params::CopyFrom(const EnableAlwaysUse16v9Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableAlwaysUse16v9Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAlwaysUse16v9Params::IsInitialized() const {
  return true;
}

void EnableAlwaysUse16v9Params::Swap(EnableAlwaysUse16v9Params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableAlwaysUse16v9Params::InternalSwap(EnableAlwaysUse16v9Params* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableAlwaysUse16v9Params::GetTypeName() const {
  return "com.electron.sdk.proto.EnableAlwaysUse16v9Params";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableAlwaysUse16v9Params

// optional bool bEnable = 1;
bool EnableAlwaysUse16v9Params::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableAlwaysUse16v9Params::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableAlwaysUse16v9Params::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableAlwaysUse16v9Params::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableAlwaysUse16v9Params::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableAlwaysUse16v9Params.bEnable)
  return benable_;
}
void EnableAlwaysUse16v9Params::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableAlwaysUse16v9Params.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableSpotlightSelfParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableSpotlightSelfParams::EnableSpotlightSelfParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableSpotlightSelfParams)
}
EnableSpotlightSelfParams::EnableSpotlightSelfParams(const EnableSpotlightSelfParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableSpotlightSelfParams)
}

void EnableSpotlightSelfParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableSpotlightSelfParams::~EnableSpotlightSelfParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableSpotlightSelfParams)
  SharedDtor();
}

void EnableSpotlightSelfParams::SharedDtor() {
}

void EnableSpotlightSelfParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableSpotlightSelfParams& EnableSpotlightSelfParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableSpotlightSelfParams* EnableSpotlightSelfParams::New(::google::protobuf::Arena* arena) const {
  EnableSpotlightSelfParams* n = new EnableSpotlightSelfParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableSpotlightSelfParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableSpotlightSelfParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableSpotlightSelfParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableSpotlightSelfParams)
  return false;
#undef DO_
}

void EnableSpotlightSelfParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableSpotlightSelfParams)
}

size_t EnableSpotlightSelfParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableSpotlightSelfParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableSpotlightSelfParams*>(&from));
}

void EnableSpotlightSelfParams::MergeFrom(const EnableSpotlightSelfParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableSpotlightSelfParams::CopyFrom(const EnableSpotlightSelfParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableSpotlightSelfParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableSpotlightSelfParams::IsInitialized() const {
  return true;
}

void EnableSpotlightSelfParams::Swap(EnableSpotlightSelfParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableSpotlightSelfParams::InternalSwap(EnableSpotlightSelfParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableSpotlightSelfParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableSpotlightSelfParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableSpotlightSelfParams

// optional bool bEnable = 1;
bool EnableSpotlightSelfParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableSpotlightSelfParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableSpotlightSelfParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableSpotlightSelfParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableSpotlightSelfParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableSpotlightSelfParams.bEnable)
  return benable_;
}
void EnableSpotlightSelfParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableSpotlightSelfParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableHardwareEncodeParams::kBEnableFieldNumber;
const int EnableHardwareEncodeParams::kEncodeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableHardwareEncodeParams::EnableHardwareEncodeParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableHardwareEncodeParams)
}
EnableHardwareEncodeParams::EnableHardwareEncodeParams(const EnableHardwareEncodeParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&benable_, &from.benable_,
    static_cast<size_t>(reinterpret_cast<char*>(&encodetype_) -
    reinterpret_cast<char*>(&benable_)) + sizeof(encodetype_));
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableHardwareEncodeParams)
}

void EnableHardwareEncodeParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&benable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encodetype_) -
      reinterpret_cast<char*>(&benable_)) + sizeof(encodetype_));
}

EnableHardwareEncodeParams::~EnableHardwareEncodeParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableHardwareEncodeParams)
  SharedDtor();
}

void EnableHardwareEncodeParams::SharedDtor() {
}

void EnableHardwareEncodeParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableHardwareEncodeParams& EnableHardwareEncodeParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableHardwareEncodeParams* EnableHardwareEncodeParams::New(::google::protobuf::Arena* arena) const {
  EnableHardwareEncodeParams* n = new EnableHardwareEncodeParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableHardwareEncodeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&benable_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&encodetype_) -
        reinterpret_cast<char*>(&benable_)) + sizeof(encodetype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableHardwareEncodeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 encodeType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_encodetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encodetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableHardwareEncodeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableHardwareEncodeParams)
  return false;
#undef DO_
}

void EnableHardwareEncodeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  // optional int32 encodeType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->encodetype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableHardwareEncodeParams)
}

size_t EnableHardwareEncodeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bEnable = 1;
    if (has_benable()) {
      total_size += 1 + 1;
    }

    // optional int32 encodeType = 2;
    if (has_encodetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encodetype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableHardwareEncodeParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableHardwareEncodeParams*>(&from));
}

void EnableHardwareEncodeParams::MergeFrom(const EnableHardwareEncodeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      benable_ = from.benable_;
    }
    if (cached_has_bits & 0x00000002u) {
      encodetype_ = from.encodetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnableHardwareEncodeParams::CopyFrom(const EnableHardwareEncodeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableHardwareEncodeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableHardwareEncodeParams::IsInitialized() const {
  return true;
}

void EnableHardwareEncodeParams::Swap(EnableHardwareEncodeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableHardwareEncodeParams::InternalSwap(EnableHardwareEncodeParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(encodetype_, other->encodetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableHardwareEncodeParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableHardwareEncodeParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableHardwareEncodeParams

// optional bool bEnable = 1;
bool EnableHardwareEncodeParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableHardwareEncodeParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableHardwareEncodeParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableHardwareEncodeParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableHardwareEncodeParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHardwareEncodeParams.bEnable)
  return benable_;
}
void EnableHardwareEncodeParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHardwareEncodeParams.bEnable)
}

// optional int32 encodeType = 2;
bool EnableHardwareEncodeParams::has_encodetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnableHardwareEncodeParams::set_has_encodetype() {
  _has_bits_[0] |= 0x00000002u;
}
void EnableHardwareEncodeParams::clear_has_encodetype() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnableHardwareEncodeParams::clear_encodetype() {
  encodetype_ = 0;
  clear_has_encodetype();
}
::google::protobuf::int32 EnableHardwareEncodeParams::encodetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHardwareEncodeParams.encodeType)
  return encodetype_;
}
void EnableHardwareEncodeParams::set_encodetype(::google::protobuf::int32 value) {
  set_has_encodetype();
  encodetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHardwareEncodeParams.encodeType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsHardwareEncodeEnabledParams::kEncodeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsHardwareEncodeEnabledParams::IsHardwareEncodeEnabledParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
}
IsHardwareEncodeEnabledParams::IsHardwareEncodeEnabledParams(const IsHardwareEncodeEnabledParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encodetype_ = from.encodetype_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
}

void IsHardwareEncodeEnabledParams::SharedCtor() {
  _cached_size_ = 0;
  encodetype_ = 0;
}

IsHardwareEncodeEnabledParams::~IsHardwareEncodeEnabledParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  SharedDtor();
}

void IsHardwareEncodeEnabledParams::SharedDtor() {
}

void IsHardwareEncodeEnabledParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IsHardwareEncodeEnabledParams& IsHardwareEncodeEnabledParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

IsHardwareEncodeEnabledParams* IsHardwareEncodeEnabledParams::New(::google::protobuf::Arena* arena) const {
  IsHardwareEncodeEnabledParams* n = new IsHardwareEncodeEnabledParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsHardwareEncodeEnabledParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  encodetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IsHardwareEncodeEnabledParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 encodeType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_encodetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encodetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  return false;
#undef DO_
}

void IsHardwareEncodeEnabledParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 encodeType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->encodetype(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
}

size_t IsHardwareEncodeEnabledParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int32 encodeType = 1;
  if (has_encodetype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->encodetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsHardwareEncodeEnabledParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IsHardwareEncodeEnabledParams*>(&from));
}

void IsHardwareEncodeEnabledParams::MergeFrom(const IsHardwareEncodeEnabledParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_encodetype()) {
    set_encodetype(from.encodetype());
  }
}

void IsHardwareEncodeEnabledParams::CopyFrom(const IsHardwareEncodeEnabledParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.IsHardwareEncodeEnabledParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsHardwareEncodeEnabledParams::IsInitialized() const {
  return true;
}

void IsHardwareEncodeEnabledParams::Swap(IsHardwareEncodeEnabledParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsHardwareEncodeEnabledParams::InternalSwap(IsHardwareEncodeEnabledParams* other) {
  using std::swap;
  swap(encodetype_, other->encodetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string IsHardwareEncodeEnabledParams::GetTypeName() const {
  return "com.electron.sdk.proto.IsHardwareEncodeEnabledParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsHardwareEncodeEnabledParams

// optional int32 encodeType = 1;
bool IsHardwareEncodeEnabledParams::has_encodetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IsHardwareEncodeEnabledParams::set_has_encodetype() {
  _has_bits_[0] |= 0x00000001u;
}
void IsHardwareEncodeEnabledParams::clear_has_encodetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void IsHardwareEncodeEnabledParams::clear_encodetype() {
  encodetype_ = 0;
  clear_has_encodetype();
}
::google::protobuf::int32 IsHardwareEncodeEnabledParams::encodetype() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.IsHardwareEncodeEnabledParams.encodeType)
  return encodetype_;
}
void IsHardwareEncodeEnabledParams::set_encodetype(::google::protobuf::int32 value) {
  set_has_encodetype();
  encodetype_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.IsHardwareEncodeEnabledParams.encodeType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Enable49VideoesInGallaryViewParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Enable49VideoesInGallaryViewParams::Enable49VideoesInGallaryViewParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
}
Enable49VideoesInGallaryViewParams::Enable49VideoesInGallaryViewParams(const Enable49VideoesInGallaryViewParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
}

void Enable49VideoesInGallaryViewParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

Enable49VideoesInGallaryViewParams::~Enable49VideoesInGallaryViewParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  SharedDtor();
}

void Enable49VideoesInGallaryViewParams::SharedDtor() {
}

void Enable49VideoesInGallaryViewParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Enable49VideoesInGallaryViewParams& Enable49VideoesInGallaryViewParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

Enable49VideoesInGallaryViewParams* Enable49VideoesInGallaryViewParams::New(::google::protobuf::Arena* arena) const {
  Enable49VideoesInGallaryViewParams* n = new Enable49VideoesInGallaryViewParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Enable49VideoesInGallaryViewParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Enable49VideoesInGallaryViewParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  return false;
#undef DO_
}

void Enable49VideoesInGallaryViewParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
}

size_t Enable49VideoesInGallaryViewParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Enable49VideoesInGallaryViewParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Enable49VideoesInGallaryViewParams*>(&from));
}

void Enable49VideoesInGallaryViewParams::MergeFrom(const Enable49VideoesInGallaryViewParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void Enable49VideoesInGallaryViewParams::CopyFrom(const Enable49VideoesInGallaryViewParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Enable49VideoesInGallaryViewParams::IsInitialized() const {
  return true;
}

void Enable49VideoesInGallaryViewParams::Swap(Enable49VideoesInGallaryViewParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Enable49VideoesInGallaryViewParams::InternalSwap(Enable49VideoesInGallaryViewParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Enable49VideoesInGallaryViewParams::GetTypeName() const {
  return "com.electron.sdk.proto.Enable49VideoesInGallaryViewParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Enable49VideoesInGallaryViewParams

// optional bool bEnable = 1;
bool Enable49VideoesInGallaryViewParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Enable49VideoesInGallaryViewParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void Enable49VideoesInGallaryViewParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void Enable49VideoesInGallaryViewParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool Enable49VideoesInGallaryViewParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams.bEnable)
  return benable_;
}
void Enable49VideoesInGallaryViewParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.Enable49VideoesInGallaryViewParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableHideNoVideoUsersOnWallViewParams::kBEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableHideNoVideoUsersOnWallViewParams::EnableHideNoVideoUsersOnWallViewParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
}
EnableHideNoVideoUsersOnWallViewParams::EnableHideNoVideoUsersOnWallViewParams(const EnableHideNoVideoUsersOnWallViewParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  benable_ = from.benable_;
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
}

void EnableHideNoVideoUsersOnWallViewParams::SharedCtor() {
  _cached_size_ = 0;
  benable_ = false;
}

EnableHideNoVideoUsersOnWallViewParams::~EnableHideNoVideoUsersOnWallViewParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  SharedDtor();
}

void EnableHideNoVideoUsersOnWallViewParams::SharedDtor() {
}

void EnableHideNoVideoUsersOnWallViewParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EnableHideNoVideoUsersOnWallViewParams& EnableHideNoVideoUsersOnWallViewParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnableHideNoVideoUsersOnWallViewParams* EnableHideNoVideoUsersOnWallViewParams::New(::google::protobuf::Arena* arena) const {
  EnableHideNoVideoUsersOnWallViewParams* n = new EnableHideNoVideoUsersOnWallViewParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableHideNoVideoUsersOnWallViewParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  benable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnableHideNoVideoUsersOnWallViewParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_benable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  return false;
#undef DO_
}

void EnableHideNoVideoUsersOnWallViewParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->benable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
}

size_t EnableHideNoVideoUsersOnWallViewParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bool bEnable = 1;
  if (has_benable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableHideNoVideoUsersOnWallViewParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EnableHideNoVideoUsersOnWallViewParams*>(&from));
}

void EnableHideNoVideoUsersOnWallViewParams::MergeFrom(const EnableHideNoVideoUsersOnWallViewParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_benable()) {
    set_benable(from.benable());
  }
}

void EnableHideNoVideoUsersOnWallViewParams::CopyFrom(const EnableHideNoVideoUsersOnWallViewParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableHideNoVideoUsersOnWallViewParams::IsInitialized() const {
  return true;
}

void EnableHideNoVideoUsersOnWallViewParams::Swap(EnableHideNoVideoUsersOnWallViewParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableHideNoVideoUsersOnWallViewParams::InternalSwap(EnableHideNoVideoUsersOnWallViewParams* other) {
  using std::swap;
  swap(benable_, other->benable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string EnableHideNoVideoUsersOnWallViewParams::GetTypeName() const {
  return "com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableHideNoVideoUsersOnWallViewParams

// optional bool bEnable = 1;
bool EnableHideNoVideoUsersOnWallViewParams::has_benable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnableHideNoVideoUsersOnWallViewParams::set_has_benable() {
  _has_bits_[0] |= 0x00000001u;
}
void EnableHideNoVideoUsersOnWallViewParams::clear_has_benable() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnableHideNoVideoUsersOnWallViewParams::clear_benable() {
  benable_ = false;
  clear_has_benable();
}
bool EnableHideNoVideoUsersOnWallViewParams::benable() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams.bEnable)
  return benable_;
}
void EnableHideNoVideoUsersOnWallViewParams::set_benable(bool value) {
  set_has_benable();
  benable_ = value;
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.EnableHideNoVideoUsersOnWallViewParams.bEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTeamIdentifierParams::kIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTeamIdentifierParams::SetTeamIdentifierParams()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_electron_5fsdk_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.electron.sdk.proto.SetTeamIdentifierParams)
}
SetTeamIdentifierParams::SetTeamIdentifierParams(const SetTeamIdentifierParams& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_identifier()) {
    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  // @@protoc_insertion_point(copy_constructor:com.electron.sdk.proto.SetTeamIdentifierParams)
}

void SetTeamIdentifierParams::SharedCtor() {
  _cached_size_ = 0;
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetTeamIdentifierParams::~SetTeamIdentifierParams() {
  // @@protoc_insertion_point(destructor:com.electron.sdk.proto.SetTeamIdentifierParams)
  SharedDtor();
}

void SetTeamIdentifierParams::SharedDtor() {
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetTeamIdentifierParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetTeamIdentifierParams& SetTeamIdentifierParams::default_instance() {
  protobuf_electron_5fsdk_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetTeamIdentifierParams* SetTeamIdentifierParams::New(::google::protobuf::Arena* arena) const {
  SetTeamIdentifierParams* n = new SetTeamIdentifierParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetTeamIdentifierParams::Clear() {
// @@protoc_insertion_point(message_clear_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_identifier()) {
    GOOGLE_DCHECK(!identifier_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*identifier_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTeamIdentifierParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string identifier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.electron.sdk.proto.SetTeamIdentifierParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.electron.sdk.proto.SetTeamIdentifierParams)
  return false;
#undef DO_
}

void SetTeamIdentifierParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->identifier(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.electron.sdk.proto.SetTeamIdentifierParams)
}

size_t SetTeamIdentifierParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string identifier = 1;
  if (has_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTeamIdentifierParams::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetTeamIdentifierParams*>(&from));
}

void SetTeamIdentifierParams::MergeFrom(const SetTeamIdentifierParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifier()) {
    set_has_identifier();
    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
}

void SetTeamIdentifierParams::CopyFrom(const SetTeamIdentifierParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.electron.sdk.proto.SetTeamIdentifierParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTeamIdentifierParams::IsInitialized() const {
  return true;
}

void SetTeamIdentifierParams::Swap(SetTeamIdentifierParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTeamIdentifierParams::InternalSwap(SetTeamIdentifierParams* other) {
  using std::swap;
  identifier_.Swap(&other->identifier_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string SetTeamIdentifierParams::GetTypeName() const {
  return "com.electron.sdk.proto.SetTeamIdentifierParams";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetTeamIdentifierParams

// optional string identifier = 1;
bool SetTeamIdentifierParams::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetTeamIdentifierParams::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
void SetTeamIdentifierParams::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetTeamIdentifierParams::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identifier();
}
const ::std::string& SetTeamIdentifierParams::identifier() const {
  // @@protoc_insertion_point(field_get:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  return identifier_.GetNoArena();
}
void SetTeamIdentifierParams::set_identifier(const ::std::string& value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
#if LANG_CXX11
void SetTeamIdentifierParams::set_identifier(::std::string&& value) {
  set_has_identifier();
  identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
#endif
void SetTeamIdentifierParams::set_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
void SetTeamIdentifierParams::set_identifier(const char* value, size_t size) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}
::std::string* SetTeamIdentifierParams::mutable_identifier() {
  set_has_identifier();
  // @@protoc_insertion_point(field_mutable:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetTeamIdentifierParams::release_identifier() {
  // @@protoc_insertion_point(field_release:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
  clear_has_identifier();
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetTeamIdentifierParams::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    set_has_identifier();
  } else {
    clear_has_identifier();
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:com.electron.sdk.proto.SetTeamIdentifierParams.identifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace sdk
}  // namespace electron
}  // namespace com

// @@protoc_insertion_point(global_scope)
